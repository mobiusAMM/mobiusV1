{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toInt128",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toInt16",
      "outputs": [
        {
          "internalType": "int16",
          "name": "",
          "type": "int16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toInt256",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toInt32",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toInt64",
      "outputs": [
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toInt8",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toUint128",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "toUint256",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "toUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "144": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/SafeCast.sol",
    "82": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/SafeCastMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/SafeCastMock.sol",
    "exportedSymbols": {
      "SafeCastMock": [
        14038
      ]
    },
    "id": 14039,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13886,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:82"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/SafeCast.sol",
        "file": "../utils/SafeCast.sol",
        "id": 13887,
        "nodeType": "ImportDirective",
        "scope": 14039,
        "sourceUnit": 24401,
        "src": "66:31:82",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14038,
        "linearizedBaseContracts": [
          14038
        ],
        "name": "SafeCastMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13890,
            "libraryName": {
              "contractScope": null,
              "id": 13888,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24400,
              "src": "133:8:82",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$24400",
                "typeString": "library SafeCast"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "127:24:82",
            "typeName": {
              "id": 13889,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "146:4:82",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 13893,
            "libraryName": {
              "contractScope": null,
              "id": 13891,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24400,
              "src": "162:8:82",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$24400",
                "typeString": "library SafeCast"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "156:23:82",
            "typeName": {
              "id": 13892,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "175:3:82",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "body": {
              "id": 13904,
              "nodeType": "Block",
              "src": "241:37:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13900,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13895,
                        "src": "258:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 13901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24226,
                      "src": "258:11:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 13902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "258:13:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13899,
                  "id": 13903,
                  "nodeType": "Return",
                  "src": "251:20:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fdcf791b",
            "id": 13905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13895,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13905,
                  "src": "204:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13894,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:7:82"
            },
            "returnParameters": {
              "id": 13899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13898,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13905,
                  "src": "232:7:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "231:9:82"
            },
            "scope": 14038,
            "src": "185:93:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13916,
              "nodeType": "Block",
              "src": "339:36:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13912,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13907,
                        "src": "356:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24399,
                      "src": "356:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (int256)"
                      }
                    },
                    "id": 13914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "356:12:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13911,
                  "id": 13915,
                  "nodeType": "Return",
                  "src": "349:19:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dfbe873b",
            "id": 13917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt256",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13907,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13917,
                  "src": "302:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13906,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:8:82"
            },
            "returnParameters": {
              "id": 13911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13917,
                  "src": "331:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13909,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:8:82"
            },
            "scope": 14038,
            "src": "284:91:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13928,
              "nodeType": "Block",
              "src": "438:37:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13924,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13919,
                        "src": "455:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint128",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24113,
                      "src": "455:11:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint128)"
                      }
                    },
                    "id": 13926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:13:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 13923,
                  "id": 13927,
                  "nodeType": "Return",
                  "src": "448:20:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "809fdd33",
            "id": 13929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint128",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13919,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13929,
                  "src": "400:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13918,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:8:82"
            },
            "returnParameters": {
              "id": 13923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13922,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13929,
                  "src": "429:7:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 13921,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:9:82"
            },
            "scope": 14038,
            "src": "381:94:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13940,
              "nodeType": "Block",
              "src": "536:36:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13936,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13931,
                        "src": "553:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24136,
                      "src": "553:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint64)"
                      }
                    },
                    "id": 13938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "553:12:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 13935,
                  "id": 13939,
                  "nodeType": "Return",
                  "src": "546:19:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2665fad0",
            "id": 13941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint64",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13931,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13941,
                  "src": "499:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13930,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:8:82"
            },
            "returnParameters": {
              "id": 13935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13934,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13941,
                  "src": "528:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13933,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:8:82"
            },
            "scope": 14038,
            "src": "481:91:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13952,
              "nodeType": "Block",
              "src": "633:36:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13948,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13943,
                        "src": "650:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24159,
                      "src": "650:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint32)"
                      }
                    },
                    "id": 13950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:12:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 13947,
                  "id": 13951,
                  "nodeType": "Return",
                  "src": "643:19:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c8193255",
            "id": 13953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13943,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13953,
                  "src": "596:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13942,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:8:82"
            },
            "returnParameters": {
              "id": 13947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13946,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13953,
                  "src": "625:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 13945,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "624:8:82"
            },
            "scope": 14038,
            "src": "578:91:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13964,
              "nodeType": "Block",
              "src": "730:36:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13960,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13955,
                        "src": "747:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24182,
                      "src": "747:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint16)"
                      }
                    },
                    "id": 13962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:12:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 13959,
                  "id": 13963,
                  "nodeType": "Return",
                  "src": "740:19:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9374068f",
            "id": 13965,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint16",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13955,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13965,
                  "src": "693:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13954,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "692:8:82"
            },
            "returnParameters": {
              "id": 13959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13958,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13965,
                  "src": "722:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 13957,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "721:8:82"
            },
            "scope": 14038,
            "src": "675:91:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13976,
              "nodeType": "Block",
              "src": "825:35:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13972,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13967,
                        "src": "842:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "842:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint8)"
                      }
                    },
                    "id": 13974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:11:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 13971,
                  "id": 13975,
                  "nodeType": "Return",
                  "src": "835:18:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0cc4681e",
            "id": 13977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint8",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13967,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13977,
                  "src": "789:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "788:8:82"
            },
            "returnParameters": {
              "id": 13971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13970,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13977,
                  "src": "818:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 13969,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:5:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "817:7:82"
            },
            "scope": 14038,
            "src": "772:88:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13988,
              "nodeType": "Block",
              "src": "920:36:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13984,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13979,
                        "src": "937:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 13985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt128",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24256,
                      "src": "937:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (int128)"
                      }
                    },
                    "id": 13986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "937:12:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "functionReturnParameters": 13983,
                  "id": 13987,
                  "nodeType": "Return",
                  "src": "930:19:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dd2a0316",
            "id": 13989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt128",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13979,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13989,
                  "src": "884:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13978,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "883:7:82"
            },
            "returnParameters": {
              "id": 13983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13982,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13989,
                  "src": "912:6:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 13981,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "911:8:82"
            },
            "scope": 14038,
            "src": "866:90:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14000,
              "nodeType": "Block",
              "src": "1014:35:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13996,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13991,
                        "src": "1031:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 13997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24286,
                      "src": "1031:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int64_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (int64)"
                      }
                    },
                    "id": 13998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:11:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "functionReturnParameters": 13995,
                  "id": 13999,
                  "nodeType": "Return",
                  "src": "1024:18:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d6bd32aa",
            "id": 14001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt64",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13991,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14001,
                  "src": "979:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13990,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "978:7:82"
            },
            "returnParameters": {
              "id": 13995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13994,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14001,
                  "src": "1007:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 13993,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:5:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1006:7:82"
            },
            "scope": 14038,
            "src": "962:87:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14012,
              "nodeType": "Block",
              "src": "1107:35:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14008,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14003,
                        "src": "1124:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 14009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24316,
                      "src": "1124:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int32_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (int32)"
                      }
                    },
                    "id": 14010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:11:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "functionReturnParameters": 14007,
                  "id": 14011,
                  "nodeType": "Return",
                  "src": "1117:18:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9c6f59be",
            "id": 14013,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14003,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14013,
                  "src": "1072:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14002,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:7:82"
            },
            "returnParameters": {
              "id": 14007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14006,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14013,
                  "src": "1100:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 14005,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:5:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:7:82"
            },
            "scope": 14038,
            "src": "1055:87:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14024,
              "nodeType": "Block",
              "src": "1200:35:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14020,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14015,
                        "src": "1217:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 14021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24346,
                      "src": "1217:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int16_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (int16)"
                      }
                    },
                    "id": 14022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:11:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "functionReturnParameters": 14019,
                  "id": 14023,
                  "nodeType": "Return",
                  "src": "1210:18:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cf65b4d3",
            "id": 14025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt16",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14015,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14025,
                  "src": "1165:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14014,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1164:7:82"
            },
            "returnParameters": {
              "id": 14019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14018,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14025,
                  "src": "1193:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  },
                  "typeName": {
                    "id": 14017,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:5:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1192:7:82"
            },
            "scope": 14038,
            "src": "1148:87:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14036,
              "nodeType": "Block",
              "src": "1291:34:82",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14032,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14027,
                        "src": "1308:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 14033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toInt8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24376,
                      "src": "1308:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int8_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (int8)"
                      }
                    },
                    "id": 14034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:10:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "functionReturnParameters": 14031,
                  "id": 14035,
                  "nodeType": "Return",
                  "src": "1301:17:82"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f136dc02",
            "id": 14037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt8",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14027,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14037,
                  "src": "1257:5:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14026,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:3:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1256:7:82"
            },
            "returnParameters": {
              "id": 14031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14030,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14037,
                  "src": "1285:4:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 14029,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1284:6:82"
            },
            "scope": 14038,
            "src": "1241:84:82",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14039,
        "src": "99:1228:82"
      }
    ],
    "src": "33:1295:82"
  },
  "bytecode": "608060405234801561001057600080fd5b50610871806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063cf65b4d311610071578063cf65b4d314610206578063d6bd32aa1461023a578063dd2a03161461026e578063dfbe873b146102a2578063f136dc02146102d1578063fdcf791b14610305576100b4565b80630cc4681e146100b95780632665fad0146100ec578063809fdd33146101265780639374068f146101685780639c6f59be1461019c578063c8193255146101d0575b600080fd5b6100d6600480360360208110156100cf57600080fd5b5035610322565b6040805160ff9092168252519081900360200190f35b6101096004803603602081101561010257600080fd5b5035610333565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101436004803603602081101561013c57600080fd5b503561033e565b604080516fffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101856004803603602081101561017e57600080fd5b5035610349565b6040805161ffff9092168252519081900360200190f35b6101b9600480360360208110156101b257600080fd5b5035610354565b6040805160039290920b8252519081900360200190f35b6101ed600480360360208110156101e657600080fd5b503561035f565b6040805163ffffffff9092168252519081900360200190f35b6102236004803603602081101561021c57600080fd5b503561036a565b6040805160019290920b8252519081900360200190f35b6102576004803603602081101561025057600080fd5b5035610375565b6040805160079290920b8252519081900360200190f35b61028b6004803603602081101561028457600080fd5b5035610380565b60408051600f9290920b8252519081900360200190f35b6102bf600480360360208110156102b857600080fd5b503561038b565b60408051918252519081900360200190f35b6102ee600480360360208110156102e757600080fd5b5035610396565b6040805160009290920b8252519081900360200190f35b6102bf6004803603602081101561031b57600080fd5b50356103a1565b600061032d826103ac565b92915050565b600061032d826103f2565b600061032d8261043b565b600061032d8261047f565b600061032d826104c2565b600061032d82610517565b600061032d8261055c565b600061032d826105ad565b600061032d8261060a565b600061032d8261066b565b600061032d826106af565b600061032d826106fe565b600061010082106103ee5760405162461bcd60e51b815260040180806020018281038252602581526020018061077c6025913960400191505060405180910390fd5b5090565b60006801000000000000000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107c86026913960400191505060405180910390fd5b6000600160801b82106103ee5760405162461bcd60e51b81526004018080602001828103825260278152602001806107a16027913960400191505060405180910390fd5b60006201000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107566026913960400191505060405180910390fd5b6000637fffffff1982121580156104dc5750638000000082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107ee6026913960400191505060405180910390fd5b600064010000000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107ee6026913960400191505060405180910390fd5b6000617fff198212158015610572575061800082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107566026913960400191505060405180910390fd5b6000677fffffffffffffff1982121580156105cf575067800000000000000082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107c86026913960400191505060405180910390fd5b60006f7fffffffffffffffffffffffffffffff19821215801561063057506001607f1b82125b6103ee5760405162461bcd60e51b81526004018080602001828103825260278152602001806107a16027913960400191505060405180910390fd5b6000600160ff1b82106103ee5760405162461bcd60e51b81526004018080602001828103825260288152602001806108146028913960400191505060405180910390fd5b6000607f1982121580156106c35750608082125b6103ee5760405162461bcd60e51b815260040180806020018281038252602581526020018061077c6025913960400191505060405180910390fd5b6000808212156103ee576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fdfe53616665436173743a2076616c756520646f65736e27742066697420696e203136206269747353616665436173743a2076616c756520646f65736e27742066697420696e2038206269747353616665436173743a2076616c756520646f65736e27742066697420696e20313238206269747353616665436173743a2076616c756520646f65736e27742066697420696e203634206269747353616665436173743a2076616c756520646f65736e27742066697420696e203332206269747353616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a264697066735822122083d044541499cd043d3c286b9a8b72d453043f7dbf6874613823ff0cbbcef5cf64736f6c634300060c0033",
  "bytecodeSha1": "52240715b3c8b301b6b25145de1302179a8f228a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SafeCastMock",
  "coverageMap": {
    "branches": {
      "144": {
        "SafeCast.toInt128": {
          "36": [
            3892,
            3908,
            false
          ],
          "37": [
            3912,
            3926,
            true
          ]
        },
        "SafeCast.toInt16": {
          "32": [
            5537,
            5552,
            false
          ],
          "33": [
            5556,
            5569,
            true
          ]
        },
        "SafeCast.toInt256": {
          "38": [
            6444,
            6458,
            true
          ]
        },
        "SafeCast.toInt32": {
          "29": [
            4990,
            5005,
            false
          ],
          "30": [
            5009,
            5022,
            true
          ]
        },
        "SafeCast.toInt64": {
          "34": [
            4443,
            4458,
            false
          ],
          "35": [
            4462,
            4475,
            true
          ]
        },
        "SafeCast.toInt8": {
          "39": [
            6078,
            6092,
            false
          ],
          "40": [
            6096,
            6108,
            true
          ]
        },
        "SafeCast.toUint128": {
          "27": [
            1170,
            1184,
            true
          ]
        },
        "SafeCast.toUint16": {
          "28": [
            2562,
            2575,
            true
          ]
        },
        "SafeCast.toUint256": {
          "41": [
            3365,
            3375,
            true
          ]
        },
        "SafeCast.toUint32": {
          "31": [
            2099,
            2112,
            true
          ]
        },
        "SafeCast.toUint64": {
          "26": [
            1636,
            1649,
            true
          ]
        },
        "SafeCast.toUint8": {
          "25": [
            3020,
            3032,
            true
          ]
        }
      },
      "82": {}
    },
    "statements": {
      "144": {
        "SafeCast.toInt128": {
          "21": [
            3884,
            3971
          ]
        },
        "SafeCast.toInt16": {
          "19": [
            5529,
            5613
          ]
        },
        "SafeCast.toInt256": {
          "22": [
            6436,
            6503
          ]
        },
        "SafeCast.toInt32": {
          "17": [
            4982,
            5066
          ]
        },
        "SafeCast.toInt64": {
          "20": [
            4435,
            4519
          ]
        },
        "SafeCast.toInt8": {
          "23": [
            6070,
            6151
          ]
        },
        "SafeCast.toUint128": {
          "15": [
            1162,
            1229
          ]
        },
        "SafeCast.toUint16": {
          "16": [
            2554,
            2619
          ]
        },
        "SafeCast.toUint256": {
          "24": [
            3357,
            3412
          ]
        },
        "SafeCast.toUint32": {
          "18": [
            2091,
            2156
          ]
        },
        "SafeCast.toUint64": {
          "14": [
            1628,
            1693
          ]
        },
        "SafeCast.toUint8": {
          "12": [
            3012,
            3075
          ],
          "13": [
            3085,
            3104
          ]
        }
      },
      "82": {
        "SafeCastMock.toInt128": {
          "8": [
            930,
            949
          ]
        },
        "SafeCastMock.toInt16": {
          "6": [
            1210,
            1228
          ]
        },
        "SafeCastMock.toInt256": {
          "9": [
            349,
            368
          ]
        },
        "SafeCastMock.toInt32": {
          "4": [
            1117,
            1135
          ]
        },
        "SafeCastMock.toInt64": {
          "7": [
            1024,
            1042
          ]
        },
        "SafeCastMock.toInt8": {
          "10": [
            1301,
            1318
          ]
        },
        "SafeCastMock.toUint128": {
          "2": [
            448,
            468
          ]
        },
        "SafeCastMock.toUint16": {
          "3": [
            740,
            759
          ]
        },
        "SafeCastMock.toUint256": {
          "11": [
            251,
            271
          ]
        },
        "SafeCastMock.toUint32": {
          "5": [
            643,
            662
          ]
        },
        "SafeCastMock.toUint64": {
          "1": [
            546,
            565
          ]
        },
        "SafeCastMock.toUint8": {
          "0": [
            835,
            853
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeCast"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063cf65b4d311610071578063cf65b4d314610206578063d6bd32aa1461023a578063dd2a03161461026e578063dfbe873b146102a2578063f136dc02146102d1578063fdcf791b14610305576100b4565b80630cc4681e146100b95780632665fad0146100ec578063809fdd33146101265780639374068f146101685780639c6f59be1461019c578063c8193255146101d0575b600080fd5b6100d6600480360360208110156100cf57600080fd5b5035610322565b6040805160ff9092168252519081900360200190f35b6101096004803603602081101561010257600080fd5b5035610333565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101436004803603602081101561013c57600080fd5b503561033e565b604080516fffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101856004803603602081101561017e57600080fd5b5035610349565b6040805161ffff9092168252519081900360200190f35b6101b9600480360360208110156101b257600080fd5b5035610354565b6040805160039290920b8252519081900360200190f35b6101ed600480360360208110156101e657600080fd5b503561035f565b6040805163ffffffff9092168252519081900360200190f35b6102236004803603602081101561021c57600080fd5b503561036a565b6040805160019290920b8252519081900360200190f35b6102576004803603602081101561025057600080fd5b5035610375565b6040805160079290920b8252519081900360200190f35b61028b6004803603602081101561028457600080fd5b5035610380565b60408051600f9290920b8252519081900360200190f35b6102bf600480360360208110156102b857600080fd5b503561038b565b60408051918252519081900360200190f35b6102ee600480360360208110156102e757600080fd5b5035610396565b6040805160009290920b8252519081900360200190f35b6102bf6004803603602081101561031b57600080fd5b50356103a1565b600061032d826103ac565b92915050565b600061032d826103f2565b600061032d8261043b565b600061032d8261047f565b600061032d826104c2565b600061032d82610517565b600061032d8261055c565b600061032d826105ad565b600061032d8261060a565b600061032d8261066b565b600061032d826106af565b600061032d826106fe565b600061010082106103ee5760405162461bcd60e51b815260040180806020018281038252602581526020018061077c6025913960400191505060405180910390fd5b5090565b60006801000000000000000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107c86026913960400191505060405180910390fd5b6000600160801b82106103ee5760405162461bcd60e51b81526004018080602001828103825260278152602001806107a16027913960400191505060405180910390fd5b60006201000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107566026913960400191505060405180910390fd5b6000637fffffff1982121580156104dc5750638000000082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107ee6026913960400191505060405180910390fd5b600064010000000082106103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107ee6026913960400191505060405180910390fd5b6000617fff198212158015610572575061800082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107566026913960400191505060405180910390fd5b6000677fffffffffffffff1982121580156105cf575067800000000000000082125b6103ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806107c86026913960400191505060405180910390fd5b60006f7fffffffffffffffffffffffffffffff19821215801561063057506001607f1b82125b6103ee5760405162461bcd60e51b81526004018080602001828103825260278152602001806107a16027913960400191505060405180910390fd5b6000600160ff1b82106103ee5760405162461bcd60e51b81526004018080602001828103825260288152602001806108146028913960400191505060405180910390fd5b6000607f1982121580156106c35750608082125b6103ee5760405162461bcd60e51b815260040180806020018281038252602581526020018061077c6025913960400191505060405180910390fd5b6000808212156103ee576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fdfe53616665436173743a2076616c756520646f65736e27742066697420696e203136206269747353616665436173743a2076616c756520646f65736e27742066697420696e2038206269747353616665436173743a2076616c756520646f65736e27742066697420696e20313238206269747353616665436173743a2076616c756520646f65736e27742066697420696e203634206269747353616665436173743a2076616c756520646f65736e27742066697420696e203332206269747353616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a264697066735822122083d044541499cd043d3c286b9a8b72d453043f7dbf6874613823ff0cbbcef5cf64736f6c634300060c0033",
  "deployedSourceMap": "99:1228:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:88;;;;;;;;;;;;;;;;-1:-1:-1;772:88:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;481:91;;;;;;;;;;;;;;;;-1:-1:-1;481:91:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;381:94;;;;;;;;;;;;;;;;-1:-1:-1;381:94:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;675:91;;;;;;;;;;;;;;;;-1:-1:-1;675:91:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;1055:87;;;;;;;;;;;;;;;;-1:-1:-1;1055:87:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;;578:91;;;;;;;;;;;;;;;;-1:-1:-1;578:91:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;1148:87;;;;;;;;;;;;;;;;-1:-1:-1;1148:87:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;;962;;;;;;;;;;;;;;;;-1:-1:-1;962:87:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;;866:90;;;;;;;;;;;;;;;;-1:-1:-1;866:90:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;;284:91;;;;;;;;;;;;;;;;-1:-1:-1;284:91:82;;:::i;:::-;;;;;;;;;;;;;;;;1241:84;;;;;;;;;;;;;;;;-1:-1:-1;1241:84:82;;:::i;:::-;;;;;;;;;;;;;;;;;;;;185:93;;;;;;;;;;;;;;;;-1:-1:-1;185:93:82;;:::i;772:88::-;818:5;842:11;:1;:9;:11::i;:::-;835:18;772:88;-1:-1:-1;;772:88:82:o;481:91::-;528:6;553:12;:1;:10;:12::i;381:94::-;429:7;455:13;:1;:11;:13::i;675:91::-;722:6;747:12;:1;:10;:12::i;1055:87::-;1100:5;1124:11;:1;:9;:11::i;578:91::-;625:6;650:12;:1;:10;:12::i;1148:87::-;1193:5;1217:11;:1;:9;:11::i;962:87::-;1007:5;1031:11;:1;:9;:11::i;866:90::-;912:6;937:12;:1;:10;:12::i;284:91::-;331:6;356:12;:1;:10;:12::i;1241:84::-;1285:4;1308:10;:1;:8;:10::i;185:93::-;232:7;258:13;:1;:11;:13::i;2940:171:144:-;2995:5;3028:4;3020:5;:12;3012:63;;;;-1:-1:-1;;;3012:63:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3098:5:144;2940:171::o;1554:176::-;1610:6;1644:5;1636;:13;1628:65;;;;-1:-1:-1;;;1628:65:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:181;1143:7;-1:-1:-1;;;1170:5:144;:14;1162:67;;;;-1:-1:-1;;;1162:67:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:176;2536:6;2570:5;2562;:13;2554:65;;;;-1:-1:-1;;;2554:65:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4911:191;4965:5;-1:-1:-1;;4990:5:144;:15;;:32;;;;;5017:5;5009;:13;4990:32;4982:84;;;;-1:-1:-1;;;4982:84:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:176;2073:6;2107:5;2099;:13;2091:65;;;;-1:-1:-1;;;2091:65:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5458:191;5512:5;-1:-1:-1;;5537:5:144;:15;;:32;;;;;5564:5;5556;:13;5537:32;5529:84;;;;-1:-1:-1;;;5529:84:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4364:191;4418:5;-1:-1:-1;;4443:5:144;:15;;:32;;;;;4470:5;4462;:13;4443:32;4435:84;;;;-1:-1:-1;;;4435:84:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:197;3866:6;-1:-1:-1;;3892:5:144;:16;;:34;;;;;-1:-1:-1;;;3912:5:144;:14;3892:34;3884:87;;;;-1:-1:-1;;;3884:87:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6362:178;6418:6;-1:-1:-1;;;6444:5:144;:14;6436:67;;;;-1:-1:-1;;;6436:67:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6001:185;6054:4;-1:-1:-1;;6078:5:144;:14;;:30;;;;;6104:4;6096:5;:12;6078:30;6070:81;;;;-1:-1:-1;;;6070:81:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:168;3338:7;3374:1;3365:5;:10;;3357:55;;;;;-1:-1:-1;;;3357:55:144;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    99,
    1327
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCF65B4D3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF65B4D3 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xD6BD32AA EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xDD2A0316 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xDFBE873B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xF136DC02 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xFDCF791B EQ PUSH2 0x305 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xCC4681E EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2665FAD0 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x809FDD33 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x9374068F EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x9C6F59BE EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xC8193255 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x7 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x77C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7C8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7A1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x756 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x7FFFFFFF NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI POP PUSH4 0x80000000 DUP3 SLT JUMPDEST PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7EE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7FFF NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI POP PUSH2 0x8000 DUP3 SLT JUMPDEST PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x756 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0x7FFFFFFFFFFFFFFF NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI POP PUSH8 0x8000000000000000 DUP3 SLT JUMPDEST PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7C8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI POP PUSH1 0x1 PUSH1 0x7F SHL DUP3 SLT JUMPDEST PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7A1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x814 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7F NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI POP PUSH1 0x80 DUP3 SLT JUMPDEST PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x77C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20313620 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20382062 PUSH10 0x74735361666543617374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20313238 KECCAK256 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20363420 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20333220 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20616E20 PUSH10 0x6E74323536A264697066 PUSH20 0x5822122083D044541499CD043D3C286B9A8B72D4 MSTORE8 DIV EXTCODEHASH PUSH30 0xBF6874613823FF0CBBCEF5CF64736F6C634300060C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "5": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "CALLVALUE",
      "path": "82"
    },
    "6": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "7": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "8": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "12": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "REVERT",
      "path": "82"
    },
    "16": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "17": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "POP",
      "path": "82"
    },
    "18": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "21": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "LT",
      "path": "82"
    },
    "22": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "26": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "29": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "SHR",
      "path": "82"
    },
    "32": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "33": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xCF65B4D3"
    },
    "38": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "GT",
      "path": "82"
    },
    "39": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "43": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "44": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xCF65B4D3"
    },
    "49": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "50": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x206"
    },
    "53": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "54": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "55": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xD6BD32AA"
    },
    "60": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "61": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x23A"
    },
    "64": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "65": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "66": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xDD2A0316"
    },
    "71": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "72": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x26E"
    },
    "75": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "76": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "77": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xDFBE873B"
    },
    "82": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "83": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2A2"
    },
    "86": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "87": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "88": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xF136DC02"
    },
    "93": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "94": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2D1"
    },
    "97": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "98": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "99": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xFDCF791B"
    },
    "104": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "105": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x305"
    },
    "108": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "109": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMP",
      "path": "82"
    },
    "113": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "114": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "115": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xCC4681E"
    },
    "120": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "121": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "125": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "126": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0x2665FAD0"
    },
    "131": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "132": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xEC"
    },
    "135": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "136": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "137": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0x809FDD33"
    },
    "142": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "143": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x126"
    },
    "146": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "147": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "148": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0x9374068F"
    },
    "153": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "154": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x168"
    },
    "157": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "158": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "159": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0x9C6F59BE"
    },
    "164": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "165": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x19C"
    },
    "168": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "169": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "170": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xC8193255"
    },
    "175": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "EQ",
      "path": "82"
    },
    "176": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x1D0"
    },
    "179": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "180": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "181": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "DUP1",
      "path": "82"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        99,
        1327
      ],
      "op": "REVERT",
      "path": "82"
    },
    "185": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "186": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xD6"
    },
    "189": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "191": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP1",
      "path": "82"
    },
    "192": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "193": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SUB",
      "path": "82"
    },
    "194": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "196": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP2",
      "path": "82"
    },
    "197": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "LT",
      "path": "82"
    },
    "198": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "199": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xCF"
    },
    "202": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "203": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "205": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP1",
      "path": "82"
    },
    "206": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "REVERT",
      "path": "82"
    },
    "207": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "208": {
      "op": "POP"
    },
    "209": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "210": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x322"
    },
    "213": {
      "fn": "SafeCastMock.toUint8",
      "jump": "i",
      "offset": [
        772,
        860
      ],
      "op": "JUMP",
      "path": "82"
    },
    "214": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "215": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "217": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP1",
      "path": "82"
    },
    "218": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "219": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0xFF"
    },
    "221": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "222": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "223": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "AND",
      "path": "82"
    },
    "224": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP3",
      "path": "82"
    },
    "225": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "226": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "227": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "228": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "DUP2",
      "path": "82"
    },
    "229": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "230": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SUB",
      "path": "82"
    },
    "231": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "233": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "ADD",
      "path": "82"
    },
    "234": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "235": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "RETURN",
      "path": "82"
    },
    "236": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "237": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x109"
    },
    "240": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "242": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP1",
      "path": "82"
    },
    "243": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "244": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SUB",
      "path": "82"
    },
    "245": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "247": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP2",
      "path": "82"
    },
    "248": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "LT",
      "path": "82"
    },
    "249": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "250": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x102"
    },
    "253": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "254": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "256": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP1",
      "path": "82"
    },
    "257": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "REVERT",
      "path": "82"
    },
    "258": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "259": {
      "op": "POP"
    },
    "260": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "261": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x333"
    },
    "264": {
      "fn": "SafeCastMock.toUint64",
      "jump": "i",
      "offset": [
        481,
        572
      ],
      "op": "JUMP",
      "path": "82"
    },
    "265": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "266": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "268": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP1",
      "path": "82"
    },
    "269": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "270": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH8",
      "path": "82",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "279": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "280": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "281": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "AND",
      "path": "82"
    },
    "282": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP3",
      "path": "82"
    },
    "283": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "284": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "285": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "286": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "DUP2",
      "path": "82"
    },
    "287": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "288": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SUB",
      "path": "82"
    },
    "289": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "291": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "ADD",
      "path": "82"
    },
    "292": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "293": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "RETURN",
      "path": "82"
    },
    "294": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "295": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x143"
    },
    "298": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "300": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP1",
      "path": "82"
    },
    "301": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "302": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SUB",
      "path": "82"
    },
    "303": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "305": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP2",
      "path": "82"
    },
    "306": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "LT",
      "path": "82"
    },
    "307": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "308": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x13C"
    },
    "311": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "312": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "314": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP1",
      "path": "82"
    },
    "315": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "REVERT",
      "path": "82"
    },
    "316": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "317": {
      "op": "POP"
    },
    "318": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "319": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x33E"
    },
    "322": {
      "fn": "SafeCastMock.toUint128",
      "jump": "i",
      "offset": [
        381,
        475
      ],
      "op": "JUMP",
      "path": "82"
    },
    "323": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "324": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "326": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP1",
      "path": "82"
    },
    "327": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "328": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH16",
      "path": "82",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "345": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "346": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "347": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "AND",
      "path": "82"
    },
    "348": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP3",
      "path": "82"
    },
    "349": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "350": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "351": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "352": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "DUP2",
      "path": "82"
    },
    "353": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "354": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SUB",
      "path": "82"
    },
    "355": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "357": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "ADD",
      "path": "82"
    },
    "358": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "359": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "RETURN",
      "path": "82"
    },
    "360": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "361": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x185"
    },
    "364": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "366": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP1",
      "path": "82"
    },
    "367": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "368": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SUB",
      "path": "82"
    },
    "369": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "371": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP2",
      "path": "82"
    },
    "372": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "LT",
      "path": "82"
    },
    "373": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "374": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x17E"
    },
    "377": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "378": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "380": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP1",
      "path": "82"
    },
    "381": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "REVERT",
      "path": "82"
    },
    "382": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "385": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x349"
    },
    "388": {
      "fn": "SafeCastMock.toUint16",
      "jump": "i",
      "offset": [
        675,
        766
      ],
      "op": "JUMP",
      "path": "82"
    },
    "389": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "390": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "392": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP1",
      "path": "82"
    },
    "393": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "394": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0xFFFF"
    },
    "397": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "398": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "399": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "AND",
      "path": "82"
    },
    "400": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP3",
      "path": "82"
    },
    "401": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "402": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "403": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "404": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "DUP2",
      "path": "82"
    },
    "405": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "406": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SUB",
      "path": "82"
    },
    "407": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "409": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "ADD",
      "path": "82"
    },
    "410": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "411": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "RETURN",
      "path": "82"
    },
    "412": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "413": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x1B9"
    },
    "416": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "418": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP1",
      "path": "82"
    },
    "419": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "420": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SUB",
      "path": "82"
    },
    "421": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "423": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP2",
      "path": "82"
    },
    "424": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "LT",
      "path": "82"
    },
    "425": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "426": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x1B2"
    },
    "429": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "430": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "432": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP1",
      "path": "82"
    },
    "433": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "REVERT",
      "path": "82"
    },
    "434": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "435": {
      "op": "POP"
    },
    "436": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "437": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x354"
    },
    "440": {
      "fn": "SafeCastMock.toInt32",
      "jump": "i",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMP",
      "path": "82"
    },
    "441": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "442": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "444": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP1",
      "path": "82"
    },
    "445": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "446": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x3"
    },
    "448": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "449": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "450": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "451": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SIGNEXTEND",
      "path": "82"
    },
    "452": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP3",
      "path": "82"
    },
    "453": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "454": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "455": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "456": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "DUP2",
      "path": "82"
    },
    "457": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "458": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SUB",
      "path": "82"
    },
    "459": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "461": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "ADD",
      "path": "82"
    },
    "462": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "463": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "RETURN",
      "path": "82"
    },
    "464": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "465": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x1ED"
    },
    "468": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "470": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP1",
      "path": "82"
    },
    "471": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "472": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SUB",
      "path": "82"
    },
    "473": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "475": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP2",
      "path": "82"
    },
    "476": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "LT",
      "path": "82"
    },
    "477": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "478": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x1E6"
    },
    "481": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "482": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "484": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP1",
      "path": "82"
    },
    "485": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "REVERT",
      "path": "82"
    },
    "486": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "489": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x35F"
    },
    "492": {
      "fn": "SafeCastMock.toUint32",
      "jump": "i",
      "offset": [
        578,
        669
      ],
      "op": "JUMP",
      "path": "82"
    },
    "493": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "494": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "496": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP1",
      "path": "82"
    },
    "497": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "498": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH4",
      "path": "82",
      "value": "0xFFFFFFFF"
    },
    "503": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "504": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "505": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "AND",
      "path": "82"
    },
    "506": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP3",
      "path": "82"
    },
    "507": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "508": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "509": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "510": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "DUP2",
      "path": "82"
    },
    "511": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "512": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SUB",
      "path": "82"
    },
    "513": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "515": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "ADD",
      "path": "82"
    },
    "516": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "517": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "RETURN",
      "path": "82"
    },
    "518": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "519": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x223"
    },
    "522": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "524": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP1",
      "path": "82"
    },
    "525": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "526": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SUB",
      "path": "82"
    },
    "527": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "529": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP2",
      "path": "82"
    },
    "530": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "LT",
      "path": "82"
    },
    "531": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "532": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x21C"
    },
    "535": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "536": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "538": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP1",
      "path": "82"
    },
    "539": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "REVERT",
      "path": "82"
    },
    "540": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "543": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x36A"
    },
    "546": {
      "fn": "SafeCastMock.toInt16",
      "jump": "i",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMP",
      "path": "82"
    },
    "547": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "548": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "550": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP1",
      "path": "82"
    },
    "551": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "552": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x1"
    },
    "554": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "555": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "556": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "557": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SIGNEXTEND",
      "path": "82"
    },
    "558": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP3",
      "path": "82"
    },
    "559": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "560": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "561": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "562": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "DUP2",
      "path": "82"
    },
    "563": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "564": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SUB",
      "path": "82"
    },
    "565": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "567": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "ADD",
      "path": "82"
    },
    "568": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "569": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "RETURN",
      "path": "82"
    },
    "570": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "571": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x257"
    },
    "574": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "576": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP1",
      "path": "82"
    },
    "577": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "578": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SUB",
      "path": "82"
    },
    "579": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "581": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP2",
      "path": "82"
    },
    "582": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "LT",
      "path": "82"
    },
    "583": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "584": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x250"
    },
    "587": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "588": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "590": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP1",
      "path": "82"
    },
    "591": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "REVERT",
      "path": "82"
    },
    "592": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "593": {
      "op": "POP"
    },
    "594": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "595": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x375"
    },
    "598": {
      "fn": "SafeCastMock.toInt64",
      "jump": "i",
      "offset": [
        962,
        1049
      ],
      "op": "JUMP",
      "path": "82"
    },
    "599": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "600": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "602": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP1",
      "path": "82"
    },
    "603": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "604": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x7"
    },
    "606": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "607": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "608": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "609": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SIGNEXTEND",
      "path": "82"
    },
    "610": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP3",
      "path": "82"
    },
    "611": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "612": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "613": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "614": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "DUP2",
      "path": "82"
    },
    "615": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "616": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SUB",
      "path": "82"
    },
    "617": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "619": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "ADD",
      "path": "82"
    },
    "620": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "621": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "RETURN",
      "path": "82"
    },
    "622": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "623": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x28B"
    },
    "626": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "628": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP1",
      "path": "82"
    },
    "629": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "630": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SUB",
      "path": "82"
    },
    "631": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "633": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP2",
      "path": "82"
    },
    "634": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "LT",
      "path": "82"
    },
    "635": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "636": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x284"
    },
    "639": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "640": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "642": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP1",
      "path": "82"
    },
    "643": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "REVERT",
      "path": "82"
    },
    "644": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "647": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x380"
    },
    "650": {
      "fn": "SafeCastMock.toInt128",
      "jump": "i",
      "offset": [
        866,
        956
      ],
      "op": "JUMP",
      "path": "82"
    },
    "651": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "652": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "654": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP1",
      "path": "82"
    },
    "655": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "656": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0xF"
    },
    "658": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "659": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "660": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "661": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SIGNEXTEND",
      "path": "82"
    },
    "662": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP3",
      "path": "82"
    },
    "663": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "664": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "665": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "666": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "DUP2",
      "path": "82"
    },
    "667": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "668": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SUB",
      "path": "82"
    },
    "669": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "671": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "ADD",
      "path": "82"
    },
    "672": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "673": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "RETURN",
      "path": "82"
    },
    "674": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "675": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2BF"
    },
    "678": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "680": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP1",
      "path": "82"
    },
    "681": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "682": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SUB",
      "path": "82"
    },
    "683": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "685": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP2",
      "path": "82"
    },
    "686": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "LT",
      "path": "82"
    },
    "687": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "688": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2B8"
    },
    "691": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "692": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "694": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP1",
      "path": "82"
    },
    "695": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "REVERT",
      "path": "82"
    },
    "696": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "699": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x38B"
    },
    "702": {
      "fn": "SafeCastMock.toInt256",
      "jump": "i",
      "offset": [
        284,
        375
      ],
      "op": "JUMP",
      "path": "82"
    },
    "703": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "704": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "706": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP1",
      "path": "82"
    },
    "707": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "708": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SWAP2",
      "path": "82"
    },
    "709": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP3",
      "path": "82"
    },
    "710": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "711": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "712": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "713": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "DUP2",
      "path": "82"
    },
    "714": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "715": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SUB",
      "path": "82"
    },
    "716": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "718": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "ADD",
      "path": "82"
    },
    "719": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "720": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "RETURN",
      "path": "82"
    },
    "721": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "722": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2EE"
    },
    "725": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "727": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP1",
      "path": "82"
    },
    "728": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "729": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SUB",
      "path": "82"
    },
    "730": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "732": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP2",
      "path": "82"
    },
    "733": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "LT",
      "path": "82"
    },
    "734": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "735": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2E7"
    },
    "738": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "739": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "741": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP1",
      "path": "82"
    },
    "742": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "REVERT",
      "path": "82"
    },
    "743": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "746": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x396"
    },
    "749": {
      "fn": "SafeCastMock.toInt8",
      "jump": "i",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMP",
      "path": "82"
    },
    "750": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "751": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x40"
    },
    "753": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP1",
      "path": "82"
    },
    "754": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "755": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "757": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "758": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "759": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "760": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SIGNEXTEND",
      "path": "82"
    },
    "761": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP3",
      "path": "82"
    },
    "762": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "MSTORE",
      "path": "82"
    },
    "763": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "MLOAD",
      "path": "82"
    },
    "764": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "765": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "DUP2",
      "path": "82"
    },
    "766": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "767": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SUB",
      "path": "82"
    },
    "768": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "770": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "ADD",
      "path": "82"
    },
    "771": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "SWAP1",
      "path": "82"
    },
    "772": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "RETURN",
      "path": "82"
    },
    "773": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "774": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x2BF"
    },
    "777": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x4"
    },
    "779": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "DUP1",
      "path": "82"
    },
    "780": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "CALLDATASIZE",
      "path": "82"
    },
    "781": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "SUB",
      "path": "82"
    },
    "782": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x20"
    },
    "784": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "DUP2",
      "path": "82"
    },
    "785": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "LT",
      "path": "82"
    },
    "786": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "ISZERO",
      "path": "82"
    },
    "787": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x31B"
    },
    "790": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "JUMPI",
      "path": "82"
    },
    "791": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "793": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "DUP1",
      "path": "82"
    },
    "794": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "REVERT",
      "path": "82"
    },
    "795": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "CALLDATALOAD",
      "path": "82"
    },
    "798": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x3A1"
    },
    "801": {
      "fn": "SafeCastMock.toUint256",
      "jump": "i",
      "offset": [
        185,
        278
      ],
      "op": "JUMP",
      "path": "82"
    },
    "802": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "803": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        818,
        823
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "805": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        842,
        853
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 0,
      "value": "0x32D"
    },
    "808": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        842,
        843
      ],
      "op": "DUP3",
      "path": "82"
    },
    "809": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        842,
        851
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x3AC"
    },
    "812": {
      "fn": "SafeCastMock.toUint8",
      "jump": "i",
      "offset": [
        842,
        853
      ],
      "op": "JUMP",
      "path": "82"
    },
    "813": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        842,
        853
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "814": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        835,
        853
      ],
      "op": "SWAP3",
      "path": "82"
    },
    "815": {
      "fn": "SafeCastMock.toUint8",
      "offset": [
        772,
        860
      ],
      "op": "SWAP2",
      "path": "82"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "SafeCastMock.toUint8",
      "jump": "o",
      "offset": [
        772,
        860
      ],
      "op": "JUMP",
      "path": "82"
    },
    "819": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        481,
        572
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "820": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        528,
        534
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "822": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        553,
        565
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 1,
      "value": "0x32D"
    },
    "825": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        553,
        554
      ],
      "op": "DUP3",
      "path": "82"
    },
    "826": {
      "fn": "SafeCastMock.toUint64",
      "offset": [
        553,
        563
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x3F2"
    },
    "829": {
      "fn": "SafeCastMock.toUint64",
      "jump": "i",
      "offset": [
        553,
        565
      ],
      "op": "JUMP",
      "path": "82"
    },
    "830": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        381,
        475
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "831": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        429,
        436
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "833": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        455,
        468
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 2,
      "value": "0x32D"
    },
    "836": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        455,
        456
      ],
      "op": "DUP3",
      "path": "82"
    },
    "837": {
      "fn": "SafeCastMock.toUint128",
      "offset": [
        455,
        466
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x43B"
    },
    "840": {
      "fn": "SafeCastMock.toUint128",
      "jump": "i",
      "offset": [
        455,
        468
      ],
      "op": "JUMP",
      "path": "82"
    },
    "841": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        675,
        766
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "842": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        722,
        728
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "844": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        747,
        759
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 3,
      "value": "0x32D"
    },
    "847": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        747,
        748
      ],
      "op": "DUP3",
      "path": "82"
    },
    "848": {
      "fn": "SafeCastMock.toUint16",
      "offset": [
        747,
        757
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x47F"
    },
    "851": {
      "fn": "SafeCastMock.toUint16",
      "jump": "i",
      "offset": [
        747,
        759
      ],
      "op": "JUMP",
      "path": "82"
    },
    "852": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1055,
        1142
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "853": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1100,
        1105
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "855": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1124,
        1135
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 4,
      "value": "0x32D"
    },
    "858": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1124,
        1125
      ],
      "op": "DUP3",
      "path": "82"
    },
    "859": {
      "fn": "SafeCastMock.toInt32",
      "offset": [
        1124,
        1133
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x4C2"
    },
    "862": {
      "fn": "SafeCastMock.toInt32",
      "jump": "i",
      "offset": [
        1124,
        1135
      ],
      "op": "JUMP",
      "path": "82"
    },
    "863": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        578,
        669
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "864": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        625,
        631
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "866": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        650,
        662
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 5,
      "value": "0x32D"
    },
    "869": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        650,
        651
      ],
      "op": "DUP3",
      "path": "82"
    },
    "870": {
      "fn": "SafeCastMock.toUint32",
      "offset": [
        650,
        660
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x517"
    },
    "873": {
      "fn": "SafeCastMock.toUint32",
      "jump": "i",
      "offset": [
        650,
        662
      ],
      "op": "JUMP",
      "path": "82"
    },
    "874": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1148,
        1235
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "875": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1193,
        1198
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "877": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1217,
        1228
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 6,
      "value": "0x32D"
    },
    "880": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1217,
        1218
      ],
      "op": "DUP3",
      "path": "82"
    },
    "881": {
      "fn": "SafeCastMock.toInt16",
      "offset": [
        1217,
        1226
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x55C"
    },
    "884": {
      "fn": "SafeCastMock.toInt16",
      "jump": "i",
      "offset": [
        1217,
        1228
      ],
      "op": "JUMP",
      "path": "82"
    },
    "885": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        962,
        1049
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "886": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        1007,
        1012
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "888": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        1031,
        1042
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 7,
      "value": "0x32D"
    },
    "891": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        1031,
        1032
      ],
      "op": "DUP3",
      "path": "82"
    },
    "892": {
      "fn": "SafeCastMock.toInt64",
      "offset": [
        1031,
        1040
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x5AD"
    },
    "895": {
      "fn": "SafeCastMock.toInt64",
      "jump": "i",
      "offset": [
        1031,
        1042
      ],
      "op": "JUMP",
      "path": "82"
    },
    "896": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        866,
        956
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "897": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        912,
        918
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "899": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        937,
        949
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 8,
      "value": "0x32D"
    },
    "902": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        937,
        938
      ],
      "op": "DUP3",
      "path": "82"
    },
    "903": {
      "fn": "SafeCastMock.toInt128",
      "offset": [
        937,
        947
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x60A"
    },
    "906": {
      "fn": "SafeCastMock.toInt128",
      "jump": "i",
      "offset": [
        937,
        949
      ],
      "op": "JUMP",
      "path": "82"
    },
    "907": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        284,
        375
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "908": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        331,
        337
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "910": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        356,
        368
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 9,
      "value": "0x32D"
    },
    "913": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        356,
        357
      ],
      "op": "DUP3",
      "path": "82"
    },
    "914": {
      "fn": "SafeCastMock.toInt256",
      "offset": [
        356,
        366
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x66B"
    },
    "917": {
      "fn": "SafeCastMock.toInt256",
      "jump": "i",
      "offset": [
        356,
        368
      ],
      "op": "JUMP",
      "path": "82"
    },
    "918": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1241,
        1325
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "919": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1285,
        1289
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "921": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 10,
      "value": "0x32D"
    },
    "924": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1308,
        1309
      ],
      "op": "DUP3",
      "path": "82"
    },
    "925": {
      "fn": "SafeCastMock.toInt8",
      "offset": [
        1308,
        1316
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x6AF"
    },
    "928": {
      "fn": "SafeCastMock.toInt8",
      "jump": "i",
      "offset": [
        1308,
        1318
      ],
      "op": "JUMP",
      "path": "82"
    },
    "929": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        185,
        278
      ],
      "op": "JUMPDEST",
      "path": "82"
    },
    "930": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        232,
        239
      ],
      "op": "PUSH1",
      "path": "82",
      "value": "0x0"
    },
    "932": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        258,
        271
      ],
      "op": "PUSH2",
      "path": "82",
      "statement": 11,
      "value": "0x32D"
    },
    "935": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        258,
        259
      ],
      "op": "DUP3",
      "path": "82"
    },
    "936": {
      "fn": "SafeCastMock.toUint256",
      "offset": [
        258,
        269
      ],
      "op": "PUSH2",
      "path": "82",
      "value": "0x6FE"
    },
    "939": {
      "fn": "SafeCastMock.toUint256",
      "jump": "i",
      "offset": [
        258,
        271
      ],
      "op": "JUMP",
      "path": "82"
    },
    "940": {
      "fn": "SafeCast.toUint8",
      "offset": [
        2940,
        3111
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "941": {
      "fn": "SafeCast.toUint8",
      "offset": [
        2995,
        3000
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "943": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3028,
        3032
      ],
      "op": "PUSH2",
      "path": "144",
      "statement": 12,
      "value": "0x100"
    },
    "946": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3020,
        3025
      ],
      "op": "DUP3",
      "path": "144"
    },
    "947": {
      "branch": 25,
      "fn": "SafeCast.toUint8",
      "offset": [
        3020,
        3032
      ],
      "op": "LT",
      "path": "144"
    },
    "948": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "951": {
      "branch": 25,
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "952": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "954": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "144"
    },
    "963": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "964": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "966": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "144"
    },
    "967": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "144"
    },
    "968": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "144"
    },
    "969": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "971": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "144"
    },
    "972": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP3",
      "path": "144"
    },
    "973": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "144"
    },
    "974": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SUB",
      "path": "144"
    },
    "975": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP3",
      "path": "144"
    },
    "976": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "977": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x25"
    },
    "979": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "144"
    },
    "980": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "981": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "983": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "144"
    },
    "984": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "144"
    },
    "985": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x77C"
    },
    "988": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x25"
    },
    "990": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "991": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "992": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "994": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "144"
    },
    "995": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "996": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "POP",
      "path": "144"
    },
    "997": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "POP",
      "path": "144"
    },
    "998": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1000": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1001": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1002": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1003": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SUB",
      "path": "144"
    },
    "1004": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1005": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1006": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3012,
        3075
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "SafeCast.toUint8",
      "offset": [
        3098,
        3103
      ],
      "op": "SWAP1",
      "path": "144",
      "statement": 13
    },
    "1009": {
      "fn": "SafeCast.toUint8",
      "jump": "o",
      "offset": [
        2940,
        3111
      ],
      "op": "JUMP",
      "path": "144"
    },
    "1010": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1554,
        1730
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1011": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1610,
        1616
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1013": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1644,
        1649
      ],
      "op": "PUSH9",
      "path": "144",
      "statement": 14,
      "value": "0x10000000000000000"
    },
    "1023": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1636,
        1641
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1024": {
      "branch": 26,
      "fn": "SafeCast.toUint64",
      "offset": [
        1636,
        1649
      ],
      "op": "LT",
      "path": "144"
    },
    "1025": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1028": {
      "branch": 26,
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1029": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1031": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1040": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1041": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1043": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "ADD",
      "path": "144"
    },
    "1044": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1045": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1046": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1048": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "ADD",
      "path": "144"
    },
    "1049": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1050": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1051": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SUB",
      "path": "144"
    },
    "1052": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1053": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1054": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1056": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1057": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1058": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1060": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "ADD",
      "path": "144"
    },
    "1061": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1062": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7C8"
    },
    "1065": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1067": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1068": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1069": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1071": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "ADD",
      "path": "144"
    },
    "1072": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1073": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "POP",
      "path": "144"
    },
    "1074": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "POP",
      "path": "144"
    },
    "1075": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1077": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1078": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1079": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1080": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SUB",
      "path": "144"
    },
    "1081": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1082": {
      "fn": "SafeCast.toUint64",
      "offset": [
        1628,
        1693
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1083": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1086,
        1267
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1084": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1143,
        1150
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1170,
        1175
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 15
    },
    "1092": {
      "branch": 27,
      "fn": "SafeCast.toUint128",
      "offset": [
        1170,
        1184
      ],
      "op": "LT",
      "path": "144"
    },
    "1093": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1096": {
      "branch": 27,
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1097": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1099": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1108": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1109": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1111": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "ADD",
      "path": "144"
    },
    "1112": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1113": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1114": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1116": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "ADD",
      "path": "144"
    },
    "1117": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1118": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1119": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SUB",
      "path": "144"
    },
    "1120": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1121": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1122": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x27"
    },
    "1124": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1125": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1126": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1128": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "ADD",
      "path": "144"
    },
    "1129": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1130": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7A1"
    },
    "1133": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x27"
    },
    "1135": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1136": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1137": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1139": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "ADD",
      "path": "144"
    },
    "1140": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1141": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "POP",
      "path": "144"
    },
    "1142": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "POP",
      "path": "144"
    },
    "1143": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1145": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1146": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1147": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1148": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SUB",
      "path": "144"
    },
    "1149": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1150": {
      "fn": "SafeCast.toUint128",
      "offset": [
        1162,
        1229
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1151": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2480,
        2656
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1152": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2536,
        2542
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1154": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2570,
        2575
      ],
      "op": "PUSH3",
      "path": "144",
      "statement": 16,
      "value": "0x10000"
    },
    "1158": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2562,
        2567
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1159": {
      "branch": 28,
      "fn": "SafeCast.toUint16",
      "offset": [
        2562,
        2575
      ],
      "op": "LT",
      "path": "144"
    },
    "1160": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1163": {
      "branch": 28,
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1164": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1166": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1175": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1176": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1178": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "ADD",
      "path": "144"
    },
    "1179": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1180": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1181": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1183": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "ADD",
      "path": "144"
    },
    "1184": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1185": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1186": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SUB",
      "path": "144"
    },
    "1187": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1188": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1189": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1191": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1192": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1193": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1195": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "ADD",
      "path": "144"
    },
    "1196": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1197": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x756"
    },
    "1200": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1202": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1203": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1204": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1206": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "ADD",
      "path": "144"
    },
    "1207": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1208": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "POP",
      "path": "144"
    },
    "1209": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "POP",
      "path": "144"
    },
    "1210": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1212": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1213": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1214": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1215": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SUB",
      "path": "144"
    },
    "1216": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1217": {
      "fn": "SafeCast.toUint16",
      "offset": [
        2554,
        2619
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1218": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4911,
        5102
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1219": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4965,
        4970
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1221": {
      "op": "PUSH4",
      "value": "0x7FFFFFFF"
    },
    "1226": {
      "op": "NOT"
    },
    "1227": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        4995
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 17
    },
    "1228": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5005
      ],
      "op": "SLT",
      "path": "144"
    },
    "1229": {
      "branch": 29,
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5005
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1230": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1231": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1232": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x4DC"
    },
    "1235": {
      "branch": 29,
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1236": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "POP",
      "path": "144"
    },
    "1237": {
      "fn": "SafeCast.toInt32",
      "offset": [
        5017,
        5022
      ],
      "op": "PUSH4",
      "path": "144",
      "value": "0x80000000"
    },
    "1242": {
      "fn": "SafeCast.toInt32",
      "offset": [
        5009,
        5014
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1243": {
      "branch": 30,
      "fn": "SafeCast.toInt32",
      "offset": [
        5009,
        5022
      ],
      "op": "SLT",
      "path": "144"
    },
    "1244": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4990,
        5022
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1245": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1248": {
      "branch": 30,
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1249": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1251": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1258": {
      "op": "SHL"
    },
    "1259": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1260": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1261": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1263": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "ADD",
      "path": "144"
    },
    "1264": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1265": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1266": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1268": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "ADD",
      "path": "144"
    },
    "1269": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1270": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1271": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SUB",
      "path": "144"
    },
    "1272": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1273": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1274": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1276": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1277": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1278": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1280": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "ADD",
      "path": "144"
    },
    "1281": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1282": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7EE"
    },
    "1285": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1287": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1288": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1289": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1291": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "ADD",
      "path": "144"
    },
    "1292": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1293": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "POP",
      "path": "144"
    },
    "1294": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "POP",
      "path": "144"
    },
    "1295": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1297": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1298": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1299": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1300": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SUB",
      "path": "144"
    },
    "1301": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1302": {
      "fn": "SafeCast.toInt32",
      "offset": [
        4982,
        5066
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1303": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2017,
        2193
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1304": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2073,
        2079
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1306": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2107,
        2112
      ],
      "op": "PUSH5",
      "path": "144",
      "statement": 18,
      "value": "0x100000000"
    },
    "1312": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2099,
        2104
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1313": {
      "branch": 31,
      "fn": "SafeCast.toUint32",
      "offset": [
        2099,
        2112
      ],
      "op": "LT",
      "path": "144"
    },
    "1314": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1317": {
      "branch": 31,
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1318": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1320": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1329": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1330": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1332": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "ADD",
      "path": "144"
    },
    "1333": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1334": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1335": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1337": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "ADD",
      "path": "144"
    },
    "1338": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1339": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1340": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SUB",
      "path": "144"
    },
    "1341": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1342": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1343": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1345": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1346": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1347": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1349": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "ADD",
      "path": "144"
    },
    "1350": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1351": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7EE"
    },
    "1354": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1356": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1357": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1358": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1360": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "ADD",
      "path": "144"
    },
    "1361": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1362": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "POP",
      "path": "144"
    },
    "1363": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "POP",
      "path": "144"
    },
    "1364": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1366": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1367": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1368": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1369": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SUB",
      "path": "144"
    },
    "1370": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1371": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2091,
        2156
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1372": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5458,
        5649
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1373": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5512,
        5517
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1375": {
      "op": "PUSH2",
      "value": "0x7FFF"
    },
    "1378": {
      "op": "NOT"
    },
    "1379": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5542
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 19
    },
    "1380": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5552
      ],
      "op": "SLT",
      "path": "144"
    },
    "1381": {
      "branch": 32,
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5552
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1382": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1383": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1384": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x572"
    },
    "1387": {
      "branch": 32,
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1388": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "POP",
      "path": "144"
    },
    "1389": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5564,
        5569
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x8000"
    },
    "1392": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5556,
        5561
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1393": {
      "branch": 33,
      "fn": "SafeCast.toInt16",
      "offset": [
        5556,
        5569
      ],
      "op": "SLT",
      "path": "144"
    },
    "1394": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5537,
        5569
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1395": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1398": {
      "branch": 33,
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1399": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1401": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1410": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1411": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1413": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "ADD",
      "path": "144"
    },
    "1414": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1415": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1416": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1418": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "ADD",
      "path": "144"
    },
    "1419": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1420": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1421": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SUB",
      "path": "144"
    },
    "1422": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1423": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1424": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1426": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1427": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1428": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1430": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "ADD",
      "path": "144"
    },
    "1431": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1432": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x756"
    },
    "1435": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1437": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1438": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1439": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1441": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "ADD",
      "path": "144"
    },
    "1442": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1443": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "POP",
      "path": "144"
    },
    "1444": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "POP",
      "path": "144"
    },
    "1445": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1447": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1448": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1449": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1450": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SUB",
      "path": "144"
    },
    "1451": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1452": {
      "fn": "SafeCast.toInt16",
      "offset": [
        5529,
        5613
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1453": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4364,
        4555
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1454": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4418,
        4423
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1456": {
      "op": "PUSH8",
      "value": "0x7FFFFFFFFFFFFFFF"
    },
    "1465": {
      "op": "NOT"
    },
    "1466": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4448
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 20
    },
    "1467": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4458
      ],
      "op": "SLT",
      "path": "144"
    },
    "1468": {
      "branch": 34,
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4458
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1469": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1470": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1471": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x5CF"
    },
    "1474": {
      "branch": 34,
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1475": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "POP",
      "path": "144"
    },
    "1476": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4470,
        4475
      ],
      "op": "PUSH8",
      "path": "144",
      "value": "0x8000000000000000"
    },
    "1485": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4462,
        4467
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1486": {
      "branch": 35,
      "fn": "SafeCast.toInt64",
      "offset": [
        4462,
        4475
      ],
      "op": "SLT",
      "path": "144"
    },
    "1487": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4443,
        4475
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1488": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1491": {
      "branch": 35,
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1492": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1494": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1503": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1504": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1506": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "ADD",
      "path": "144"
    },
    "1507": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1508": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1509": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1511": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "ADD",
      "path": "144"
    },
    "1512": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1513": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1514": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SUB",
      "path": "144"
    },
    "1515": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1516": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1517": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1519": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1520": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1521": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1523": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "ADD",
      "path": "144"
    },
    "1524": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1525": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7C8"
    },
    "1528": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x26"
    },
    "1530": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1531": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1532": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1534": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "ADD",
      "path": "144"
    },
    "1535": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1536": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "POP",
      "path": "144"
    },
    "1537": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "POP",
      "path": "144"
    },
    "1538": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1540": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1541": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1542": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1543": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SUB",
      "path": "144"
    },
    "1544": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1545": {
      "fn": "SafeCast.toInt64",
      "offset": [
        4435,
        4519
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1546": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3811,
        4008
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1547": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3866,
        3872
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1549": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1566": {
      "op": "NOT"
    },
    "1567": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3897
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 21
    },
    "1568": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3908
      ],
      "op": "SLT",
      "path": "144"
    },
    "1569": {
      "branch": 36,
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3908
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1570": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1571": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1572": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x630"
    },
    "1575": {
      "branch": 36,
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1576": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "POP",
      "path": "144"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3912,
        3917
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1583": {
      "branch": 37,
      "fn": "SafeCast.toInt128",
      "offset": [
        3912,
        3926
      ],
      "op": "SLT",
      "path": "144"
    },
    "1584": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3892,
        3926
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1585": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1588": {
      "branch": 37,
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1589": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1591": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1600": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1601": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1603": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "ADD",
      "path": "144"
    },
    "1604": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1605": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1606": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1608": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "ADD",
      "path": "144"
    },
    "1609": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1610": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1611": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SUB",
      "path": "144"
    },
    "1612": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1613": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1614": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x27"
    },
    "1616": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1617": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1618": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1620": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "ADD",
      "path": "144"
    },
    "1621": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1622": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x7A1"
    },
    "1625": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x27"
    },
    "1627": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1628": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1629": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1631": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "ADD",
      "path": "144"
    },
    "1632": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1633": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "POP",
      "path": "144"
    },
    "1634": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "POP",
      "path": "144"
    },
    "1635": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1637": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1638": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1639": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1640": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SUB",
      "path": "144"
    },
    "1641": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1642": {
      "fn": "SafeCast.toInt128",
      "offset": [
        3884,
        3971
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1643": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6362,
        6540
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1644": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6418,
        6424
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6444,
        6449
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 22
    },
    "1652": {
      "branch": 38,
      "fn": "SafeCast.toInt256",
      "offset": [
        6444,
        6458
      ],
      "op": "LT",
      "path": "144"
    },
    "1653": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1656": {
      "branch": 38,
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1657": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1659": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1668": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1669": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1671": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "ADD",
      "path": "144"
    },
    "1672": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1673": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1674": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1676": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "ADD",
      "path": "144"
    },
    "1677": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1678": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1679": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SUB",
      "path": "144"
    },
    "1680": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1681": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1682": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x28"
    },
    "1684": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1685": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1686": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1688": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "ADD",
      "path": "144"
    },
    "1689": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1690": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x814"
    },
    "1693": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x28"
    },
    "1695": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1696": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1697": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1699": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "ADD",
      "path": "144"
    },
    "1700": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1701": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "POP",
      "path": "144"
    },
    "1702": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "POP",
      "path": "144"
    },
    "1703": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1705": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1706": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1707": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1708": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SUB",
      "path": "144"
    },
    "1709": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1710": {
      "fn": "SafeCast.toInt256",
      "offset": [
        6436,
        6503
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1711": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6001,
        6186
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1712": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6054,
        6058
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1716": {
      "op": "NOT"
    },
    "1717": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6083
      ],
      "op": "DUP3",
      "path": "144",
      "statement": 23
    },
    "1718": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6092
      ],
      "op": "SLT",
      "path": "144"
    },
    "1719": {
      "branch": 39,
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6092
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1720": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1721": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1722": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x6C3"
    },
    "1725": {
      "branch": 39,
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1726": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "POP",
      "path": "144"
    },
    "1727": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6104,
        6108
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x80"
    },
    "1729": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6096,
        6101
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1730": {
      "branch": 40,
      "fn": "SafeCast.toInt8",
      "offset": [
        6096,
        6108
      ],
      "op": "SLT",
      "path": "144"
    },
    "1731": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6078,
        6108
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1732": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1735": {
      "branch": 40,
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1736": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1738": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1747": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1748": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1750": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "ADD",
      "path": "144"
    },
    "1751": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1752": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1753": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1755": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "ADD",
      "path": "144"
    },
    "1756": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1757": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1758": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SUB",
      "path": "144"
    },
    "1759": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1760": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1761": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x25"
    },
    "1763": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1764": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1765": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1767": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "ADD",
      "path": "144"
    },
    "1768": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1769": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x77C"
    },
    "1772": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x25"
    },
    "1774": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1775": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "CODECOPY",
      "path": "144"
    },
    "1776": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1778": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "ADD",
      "path": "144"
    },
    "1779": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1780": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "POP",
      "path": "144"
    },
    "1781": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "POP",
      "path": "144"
    },
    "1782": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1784": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1785": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1786": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SWAP2",
      "path": "144"
    },
    "1787": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SUB",
      "path": "144"
    },
    "1788": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1789": {
      "fn": "SafeCast.toInt8",
      "offset": [
        6070,
        6151
      ],
      "op": "REVERT",
      "path": "144"
    },
    "1790": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3282,
        3450
      ],
      "op": "JUMPDEST",
      "path": "144"
    },
    "1791": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3338,
        3345
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x0"
    },
    "1793": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3374,
        3375
      ],
      "op": "DUP1",
      "path": "144",
      "statement": 24
    },
    "1794": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3365,
        3370
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1795": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3365,
        3375
      ],
      "op": "SLT",
      "path": "144"
    },
    "1796": {
      "branch": 41,
      "fn": "SafeCast.toUint256",
      "offset": [
        3365,
        3375
      ],
      "op": "ISZERO",
      "path": "144"
    },
    "1797": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH2",
      "path": "144",
      "value": "0x3EE"
    },
    "1800": {
      "branch": 41,
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "JUMPI",
      "path": "144"
    },
    "1801": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x40"
    },
    "1803": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP1",
      "path": "144"
    },
    "1804": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1813": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1814": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x20"
    },
    "1816": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x4"
    },
    "1818": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1819": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "ADD",
      "path": "144"
    },
    "1820": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1821": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1822": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1823": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x24"
    },
    "1825": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1826": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "ADD",
      "path": "144"
    },
    "1827": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1828": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH32",
      "path": "144",
      "value": "0x53616665436173743A2076616C7565206D75737420626520706F736974697665"
    },
    "1861": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x44"
    },
    "1863": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP3",
      "path": "144"
    },
    "1864": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "ADD",
      "path": "144"
    },
    "1865": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MSTORE",
      "path": "144"
    },
    "1866": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1867": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "MLOAD",
      "path": "144"
    },
    "1868": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1869": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "DUP2",
      "path": "144"
    },
    "1870": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1871": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SUB",
      "path": "144"
    },
    "1872": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "PUSH1",
      "path": "144",
      "value": "0x64"
    },
    "1874": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "ADD",
      "path": "144"
    },
    "1875": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "SWAP1",
      "path": "144"
    },
    "1876": {
      "fn": "SafeCast.toUint256",
      "offset": [
        3357,
        3412
      ],
      "op": "REVERT",
      "path": "144"
    }
  },
  "sha1": "ab5c9c411e9b34e963030cfd4ad0b5cc1a83ccb6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/SafeCast.sol\";\n\ncontract SafeCastMock {\n    using SafeCast for uint;\n    using SafeCast for int;\n\n    function toUint256(int a) public pure returns (uint256) {\n        return a.toUint256();\n    }\n\n    function toInt256(uint a) public pure returns (int256) {\n        return a.toInt256();\n    }\n\n    function toUint128(uint a) public pure returns (uint128) {\n        return a.toUint128();\n    }\n\n    function toUint64(uint a) public pure returns (uint64) {\n        return a.toUint64();\n    }\n\n    function toUint32(uint a) public pure returns (uint32) {\n        return a.toUint32();\n    }\n\n    function toUint16(uint a) public pure returns (uint16) {\n        return a.toUint16();\n    }\n\n    function toUint8(uint a) public pure returns (uint8) {\n        return a.toUint8();\n    }\n\n    function toInt128(int a) public pure returns (int128) {\n        return a.toInt128();\n    }\n\n    function toInt64(int a) public pure returns (int64) {\n        return a.toInt64();\n    }\n\n    function toInt32(int a) public pure returns (int32) {\n        return a.toInt32();\n    }\n\n    function toInt16(int a) public pure returns (int16) {\n        return a.toInt16();\n    }\n\n    function toInt8(int a) public pure returns (int8) {\n        return a.toInt8();\n    }\n}\n",
  "sourceMap": "99:1228:82:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/SafeCastMock.sol",
  "type": "contract"
}