{
  "abi": [
    {
      "inputs": [],
      "name": "fail",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeNested",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "initializeWithX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializerRan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "nonInitializable",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "109": "contracts/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol",
    "143": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "80": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/InitializableMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/InitializableMock.sol",
    "exportedSymbols": {
      "InitializableMock": [
        17205
      ]
    },
    "id": 17206,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17146,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:80"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 17147,
        "nodeType": "ImportDirective",
        "scope": 17206,
        "sourceUnit": 20345,
        "src": "66:36:80",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17149,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20344,
              "src": "238:13:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$20344",
                "typeString": "contract Initializable"
              }
            },
            "id": 17150,
            "nodeType": "InheritanceSpecifier",
            "src": "238:13:80"
          }
        ],
        "contractDependencies": [
          20344
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 17148,
          "nodeType": "StructuredDocumentation",
          "src": "104:103:80",
          "text": " @title InitializableMock\n @dev This contract is a mock to test initializable functionality"
        },
        "fullyImplemented": true,
        "id": 17205,
        "linearizedBaseContracts": [
          17205,
          20344
        ],
        "name": "InitializableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c3b8ef2a",
            "id": 17152,
            "mutability": "mutable",
            "name": "initializerRan",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17205,
            "src": "257:26:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 17151,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "257:4:80",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 17154,
            "mutability": "mutable",
            "name": "x",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17205,
            "src": "287:16:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17163,
              "nodeType": "Block",
              "src": "349:32:80",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17159,
                      "name": "initializerRan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17152,
                      "src": "355:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 17160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "372:4:80",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "355:21:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17162,
                  "nodeType": "ExpressionStatement",
                  "src": "355:21:80"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 17164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 17157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17156,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20327,
                  "src": "337:11:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "337:11:80"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:80"
            },
            "returnParameters": {
              "id": 17158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:80"
            },
            "scope": 17205,
            "src": "308:73:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17172,
              "nodeType": "Block",
              "src": "432:23:80",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17169,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17164,
                      "src": "438:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:12:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17171,
                  "nodeType": "ExpressionStatement",
                  "src": "438:12:80"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cb3a528d",
            "id": 17173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 17167,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17166,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20327,
                  "src": "420:11:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "420:11:80"
              }
            ],
            "name": "initializeNested",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:80"
            },
            "returnParameters": {
              "id": 17168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:80"
            },
            "scope": 17205,
            "src": "385:70:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17184,
              "nodeType": "Block",
              "src": "523:17:80",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17180,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17154,
                      "src": "529:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17181,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17175,
                      "src": "533:2:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "529:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17183,
                  "nodeType": "ExpressionStatement",
                  "src": "529:6:80"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0018eaa8",
            "id": 17185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 17178,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17177,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20327,
                  "src": "511:11:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "511:11:80"
              }
            ],
            "name": "initializeWithX",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17175,
                  "mutability": "mutable",
                  "name": "_x",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17185,
                  "src": "484:10:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:12:80"
            },
            "returnParameters": {
              "id": 17179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:80"
            },
            "scope": 17205,
            "src": "459:81:80",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17194,
              "nodeType": "Block",
              "src": "597:17:80",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17190,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17154,
                      "src": "603:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17191,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17187,
                      "src": "607:2:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "603:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17193,
                  "nodeType": "ExpressionStatement",
                  "src": "603:6:80"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e955c9ec",
            "id": 17195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonInitializable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17187,
                  "mutability": "mutable",
                  "name": "_x",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17195,
                  "src": "570:10:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "569:12:80"
            },
            "returnParameters": {
              "id": 17189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:80"
            },
            "scope": 17205,
            "src": "544:70:80",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17203,
              "nodeType": "Block",
              "src": "646:61:80",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 17199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "660:5:80",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e697469616c697a61626c654d6f636b20666f72636564206661696c757265",
                        "id": 17200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "667:34:80",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70458f305ab12a5814a8a6125666b5faf9428e7481e52fe1e943f8addb4009b7",
                          "typeString": "literal_string \"InitializableMock forced failure\""
                        },
                        "value": "InitializableMock forced failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70458f305ab12a5814a8a6125666b5faf9428e7481e52fe1e943f8addb4009b7",
                          "typeString": "literal_string \"InitializableMock forced failure\""
                        }
                      ],
                      "id": 17198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "652:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:50:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17202,
                  "nodeType": "ExpressionStatement",
                  "src": "652:50:80"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9cc4718",
            "id": 17204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fail",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:2:80"
            },
            "returnParameters": {
              "id": 17197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:80"
            },
            "scope": 17205,
            "src": "618:89:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 17206,
        "src": "208:502:80"
      }
    ],
    "src": "33:678:80"
  },
  "bytecode": "608060405234801561001057600080fd5b50610425806100206000396000f3fe60806040526004361061006f5760003560e01c8063a9cc47181161004e578063a9cc4718146100cf578063c3b8ef2a146100e4578063cb3a528d1461010d578063e955c9ec146101225761006f565b806218eaa8146100745780630c55699c146100935780638129fc1c146100ba575b600080fd5b6100916004803603602081101561008a57600080fd5b503561013f565b005b34801561009f57600080fd5b506100a86101e7565b60408051918252519081900360200190f35b3480156100c657600080fd5b506100916101ed565b3480156100db57600080fd5b506100916102a0565b3480156100f057600080fd5b506100f96102ed565b604080519115158252519081900360200190f35b34801561011957600080fd5b506100916102fc565b6100916004803603602081101561013857600080fd5b50356103a5565b600054610100900460ff168061015857506101586103aa565b80610166575060005460ff16155b6101a15760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff161580156101cc576000805460ff1961ff0019909116610100171660011790555b600182905580156101e3576000805461ff00191690555b5050565b60015481565b600054610100900460ff168061020657506102066103aa565b80610214575060005460ff16155b61024f5760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff1615801561027a576000805460ff1961ff0019909116610100171660011790555b6000805462ff0000191662010000179055801561029d576000805461ff00191690555b50565b6040805162461bcd60e51b815260206004820181905260248201527f496e697469616c697a61626c654d6f636b20666f72636564206661696c757265604482015290519081900360640190fd5b60005462010000900460ff1681565b600054610100900460ff168061031557506103156103aa565b80610323575060005460ff16155b61035e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff16158015610389576000805460ff1961ff0019909116610100171660011790555b6103916101ed565b801561029d576000805461ff001916905550565b600155565b60006103b5306103bb565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212209389e475df1eefb4ead34ec783c8b013a28371ab287f76c8eb54ee19b87d807264736f6c634300060c0033",
  "bytecodeSha1": "96ebbf155d663610a9887342260fcee0c427521f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "InitializableMock",
  "coverageMap": {
    "branches": {
      "109": {
        "InitializableMock.initializeNested": {
          "7": [
            1501,
            1514,
            true
          ],
          "8": [
            1518,
            1534,
            true
          ],
          "9": [
            1539,
            1551,
            true
          ]
        }
      },
      "143": {},
      "80": {}
    },
    "statements": {
      "109": {
        "Initializable._isConstructor": {
          "5": [
            2005,
            2046
          ]
        }
      },
      "143": {
        "Address.isContract": {
          "6": [
            1117,
            1132
          ]
        }
      },
      "80": {
        "InitializableMock.fail": {
          "2": [
            652,
            702
          ]
        },
        "InitializableMock.initialize": {
          "1": [
            355,
            376
          ]
        },
        "InitializableMock.initializeNested": {
          "3": [
            438,
            450
          ]
        },
        "InitializableMock.initializeWithX": {
          "0": [
            529,
            535
          ]
        },
        "InitializableMock.nonInitializable": {
          "4": [
            603,
            609
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Initializable"
  ],
  "deployedBytecode": "60806040526004361061006f5760003560e01c8063a9cc47181161004e578063a9cc4718146100cf578063c3b8ef2a146100e4578063cb3a528d1461010d578063e955c9ec146101225761006f565b806218eaa8146100745780630c55699c146100935780638129fc1c146100ba575b600080fd5b6100916004803603602081101561008a57600080fd5b503561013f565b005b34801561009f57600080fd5b506100a86101e7565b60408051918252519081900360200190f35b3480156100c657600080fd5b506100916101ed565b3480156100db57600080fd5b506100916102a0565b3480156100f057600080fd5b506100f96102ed565b604080519115158252519081900360200190f35b34801561011957600080fd5b506100916102fc565b6100916004803603602081101561013857600080fd5b50356103a5565b600054610100900460ff168061015857506101586103aa565b80610166575060005460ff16155b6101a15760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff161580156101cc576000805460ff1961ff0019909116610100171660011790555b600182905580156101e3576000805461ff00191690555b5050565b60015481565b600054610100900460ff168061020657506102066103aa565b80610214575060005460ff16155b61024f5760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff1615801561027a576000805460ff1961ff0019909116610100171660011790555b6000805462ff0000191662010000179055801561029d576000805461ff00191690555b50565b6040805162461bcd60e51b815260206004820181905260248201527f496e697469616c697a61626c654d6f636b20666f72636564206661696c757265604482015290519081900360640190fd5b60005462010000900460ff1681565b600054610100900460ff168061031557506103156103aa565b80610323575060005460ff16155b61035e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806103c2602e913960400191505060405180910390fd5b600054610100900460ff16158015610389576000805460ff1961ff0019909116610100171660011790555b6103916101ed565b801561029d576000805461ff001916905550565b600155565b60006103b5306103bb565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212209389e475df1eefb4ead34ec783c8b013a28371ab287f76c8eb54ee19b87d807264736f6c634300060c0033",
  "deployedSourceMap": "208:502:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:81;;;;;;;;;;;;;;;;-1:-1:-1;459:81:80;;:::i;:::-;;287:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;308:73;;;;;;;;;;;;;:::i;618:89::-;;;;;;;;;;;;;:::i;257:26::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;385:70;;;;;;;;;;;;;:::i;544:::-;;;;;;;;;;;;;;;;-1:-1:-1;544:70:80;;:::i;459:81::-;1501:13:109;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:109;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:109;;;;;1727:19;1709:4;1727:19;;;1659:98;529:1:80::1;:6:::0;;;1779:66:109;;;;1829:5;1813:21;;-1:-1:-1;;1813:21:109;;;1779:66;459:81:80;;:::o;287:16::-;;;;:::o;308:73::-;1501:13:109;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:109;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:109;;;;;1727:19;1709:4;1727:19;;;1659:98;355:14:80::1;:21:::0;;-1:-1:-1;;355:21:80::1;::::0;::::1;::::0;;1779:66:109;;;;1829:5;1813:21;;-1:-1:-1;;1813:21:109;;;1779:66;308:73:80;:::o;618:89::-;652:50;;;-1:-1:-1;;;652:50:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:26;;;;;;;;;:::o;385:70::-;1501:13:109;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:109;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:109;;;;;1727:19;1709:4;1727:19;;;1659:98;438:12:80::1;:10;:12::i;:::-;1783:14:109::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:109;;;385:70:80;:::o;544:::-;603:1;:6;544:70::o;1941:112:109:-;1989:4;2013:33;2040:4;2013:18;:33::i;:::-;2012:34;2005:41;;1941:112;:::o;726:413:143:-;1086:20;1124:8;;;726:413::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is a mock to test initializable functionality",
    "kind": "dev",
    "methods": {},
    "title": "InitializableMock",
    "version": 1
  },
  "offset": [
    208,
    710
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9CC4718 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA9CC4718 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xC3B8EF2A EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xCB3A528D EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xE955C9EC EQ PUSH2 0x122 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH3 0x18EAA8 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x1ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x2A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x158 JUMPI POP PUSH2 0x158 PUSH2 0x3AA JUMP JUMPDEST DUP1 PUSH2 0x166 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x206 JUMPI POP PUSH2 0x206 PUSH2 0x3AA JUMP JUMPDEST DUP1 PUSH2 0x214 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C654D6F636B20666F72636564206661696C757265 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x315 JUMPI POP PUSH2 0x315 PUSH2 0x3AA JUMP JUMPDEST DUP1 PUSH2 0x323 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x391 PUSH2 0x1ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B5 ADDRESS PUSH2 0x3BB JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A26469706673582212209389E475 0xDF 0x1E 0xEF 0xB4 0xEA 0xD3 0x4E 0xC7 DUP4 0xC8 0xB0 SGT LOG2 DUP4 PUSH18 0xAB287F76C8EB54EE19B87D807264736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "LT",
      "path": "80"
    },
    "9": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6F"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "13": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "CALLDATALOAD",
      "path": "80"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "SHR",
      "path": "80"
    },
    "19": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xA9CC4718"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "GT",
      "path": "80"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "30": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xA9CC4718"
    },
    "36": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "37": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xCF"
    },
    "40": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "41": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xC3B8EF2A"
    },
    "47": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "48": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xE4"
    },
    "51": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "52": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xCB3A528D"
    },
    "58": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "59": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x10D"
    },
    "62": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "63": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xE955C9EC"
    },
    "69": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "70": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x122"
    },
    "73": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "74": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6F"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMP",
      "path": "80"
    },
    "78": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "79": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "80": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH3",
      "path": "80",
      "value": "0x18EAA8"
    },
    "84": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "85": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x74"
    },
    "88": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "89": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "90": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xC55699C"
    },
    "95": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "96": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x93"
    },
    "99": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "100": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "101": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x8129FC1C"
    },
    "106": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "EQ",
      "path": "80"
    },
    "107": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xBA"
    },
    "110": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "111": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "112": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "114": {
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "DUP1",
      "path": "80"
    },
    "115": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        710
      ],
      "op": "REVERT",
      "path": "80"
    },
    "116": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "117": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x91"
    },
    "120": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "122": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "DUP1",
      "path": "80"
    },
    "123": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "124": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "SUB",
      "path": "80"
    },
    "125": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "127": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "DUP2",
      "path": "80"
    },
    "128": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "LT",
      "path": "80"
    },
    "129": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "130": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x8A"
    },
    "133": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "134": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "136": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "DUP1",
      "path": "80"
    },
    "137": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "REVERT",
      "path": "80"
    },
    "138": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "CALLDATALOAD",
      "path": "80"
    },
    "141": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x13F"
    },
    "144": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "i",
      "offset": [
        459,
        540
      ],
      "op": "JUMP",
      "path": "80"
    },
    "145": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "146": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "STOP",
      "path": "80"
    },
    "147": {
      "offset": [
        287,
        303
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "148": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "149": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP1",
      "path": "80"
    },
    "150": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "151": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x9F"
    },
    "154": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "155": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "157": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP1",
      "path": "80"
    },
    "158": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "REVERT",
      "path": "80"
    },
    "159": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "160": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "POP",
      "path": "80"
    },
    "161": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xA8"
    },
    "164": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1E7"
    },
    "167": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "i",
      "offset": [
        287,
        303
      ],
      "op": "JUMP",
      "path": "80"
    },
    "168": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "169": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "171": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP1",
      "path": "80"
    },
    "172": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "173": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SWAP2",
      "path": "80"
    },
    "174": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP3",
      "path": "80"
    },
    "175": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "176": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "177": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "178": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP2",
      "path": "80"
    },
    "179": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "180": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SUB",
      "path": "80"
    },
    "181": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "183": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "ADD",
      "path": "80"
    },
    "184": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "185": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "RETURN",
      "path": "80"
    },
    "186": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "187": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "188": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "DUP1",
      "path": "80"
    },
    "189": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "190": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xC6"
    },
    "193": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "194": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "196": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "DUP1",
      "path": "80"
    },
    "197": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "REVERT",
      "path": "80"
    },
    "198": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "199": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "POP",
      "path": "80"
    },
    "200": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x91"
    },
    "203": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1ED"
    },
    "206": {
      "fn": "InitializableMock.initialize",
      "jump": "i",
      "offset": [
        308,
        381
      ],
      "op": "JUMP",
      "path": "80"
    },
    "207": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "208": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "209": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "DUP1",
      "path": "80"
    },
    "210": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "211": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xDB"
    },
    "214": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "215": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "217": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "DUP1",
      "path": "80"
    },
    "218": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "REVERT",
      "path": "80"
    },
    "219": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "220": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "POP",
      "path": "80"
    },
    "221": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x91"
    },
    "224": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2A0"
    },
    "227": {
      "fn": "InitializableMock.fail",
      "jump": "i",
      "offset": [
        618,
        707
      ],
      "op": "JUMP",
      "path": "80"
    },
    "228": {
      "offset": [
        257,
        283
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "229": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "230": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP1",
      "path": "80"
    },
    "231": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "232": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xF0"
    },
    "235": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "236": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "238": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP1",
      "path": "80"
    },
    "239": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "REVERT",
      "path": "80"
    },
    "240": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "241": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "POP",
      "path": "80"
    },
    "242": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xF9"
    },
    "245": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2ED"
    },
    "248": {
      "fn": "InitializableMock.fail",
      "jump": "i",
      "offset": [
        257,
        283
      ],
      "op": "JUMP",
      "path": "80"
    },
    "249": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "250": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "252": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP1",
      "path": "80"
    },
    "253": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "254": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SWAP2",
      "path": "80"
    },
    "255": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "256": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "257": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP3",
      "path": "80"
    },
    "258": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "259": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "260": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "261": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP2",
      "path": "80"
    },
    "262": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "263": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SUB",
      "path": "80"
    },
    "264": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "266": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "ADD",
      "path": "80"
    },
    "267": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "268": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "RETURN",
      "path": "80"
    },
    "269": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "270": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "271": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "DUP1",
      "path": "80"
    },
    "272": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "273": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x119"
    },
    "276": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "277": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "279": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "DUP1",
      "path": "80"
    },
    "280": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "REVERT",
      "path": "80"
    },
    "281": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "282": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "POP",
      "path": "80"
    },
    "283": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x91"
    },
    "286": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2FC"
    },
    "289": {
      "fn": "InitializableMock.initializeNested",
      "jump": "i",
      "offset": [
        385,
        455
      ],
      "op": "JUMP",
      "path": "80"
    },
    "290": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "291": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x91"
    },
    "294": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "296": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "DUP1",
      "path": "80"
    },
    "297": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "298": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "SUB",
      "path": "80"
    },
    "299": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "301": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "DUP2",
      "path": "80"
    },
    "302": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "LT",
      "path": "80"
    },
    "303": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "304": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x138"
    },
    "307": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "308": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "310": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "DUP1",
      "path": "80"
    },
    "311": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "REVERT",
      "path": "80"
    },
    "312": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "CALLDATALOAD",
      "path": "80"
    },
    "315": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3A5"
    },
    "318": {
      "fn": "InitializableMock.nonInitializable",
      "jump": "i",
      "offset": [
        544,
        614
      ],
      "op": "JUMP",
      "path": "80"
    },
    "319": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "320": {
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "322": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "323": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "326": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "327": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "DIV",
      "path": "109"
    },
    "328": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "330": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "AND",
      "path": "109"
    },
    "331": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1514
      ],
      "op": "DUP1",
      "path": "109"
    },
    "332": {
      "offset": [
        1501,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x158"
    },
    "335": {
      "offset": [
        1501,
        1534
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "336": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1534
      ],
      "op": "POP",
      "path": "109"
    },
    "337": {
      "offset": [
        1518,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x158"
    },
    "340": {
      "offset": [
        1518,
        1532
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3AA"
    },
    "343": {
      "jump": "i",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMP",
      "path": "109"
    },
    "344": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "345": {
      "offset": [
        1501,
        1551
      ],
      "op": "DUP1",
      "path": "109"
    },
    "346": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1501,
        1551
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x166"
    },
    "349": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "353": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1539,
        1551
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "354": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "356": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1539,
        1551
      ],
      "op": "AND",
      "path": "109"
    },
    "357": {
      "offset": [
        1538,
        1551
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "358": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "359": {
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x1A1"
    },
    "362": {
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "363": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "365": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "374": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "375": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x4"
    },
    "377": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "378": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "379": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "380": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "382": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "383": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "384": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "385": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "386": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "387": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "388": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "390": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "391": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "392": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "394": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "395": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "396": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3C2"
    },
    "399": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "401": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "402": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "CODECOPY",
      "path": "109"
    },
    "403": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "405": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "406": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "407": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "408": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "409": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "411": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "412": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "413": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "414": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "415": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "416": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "REVERT",
      "path": "109"
    },
    "417": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "418": {
      "offset": [
        1613,
        1632
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "420": {
      "offset": [
        1636,
        1649
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "421": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "424": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1636,
        1649
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "425": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1636,
        1649
      ],
      "op": "DIV",
      "path": "109"
    },
    "426": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "428": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1636,
        1649
      ],
      "op": "AND",
      "path": "109"
    },
    "429": {
      "offset": [
        1635,
        1649
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "430": {
      "offset": [
        1659,
        1757
      ],
      "op": "DUP1",
      "path": "109"
    },
    "431": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1659,
        1757
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "432": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1659,
        1757
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x1CC"
    },
    "435": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "436": {
      "offset": [
        1693,
        1706
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "438": {
      "offset": [
        1693,
        1713
      ],
      "op": "DUP1",
      "path": "109"
    },
    "439": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1693,
        1713
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "442": {
      "op": "NOT"
    },
    "443": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "446": {
      "op": "NOT"
    },
    "447": {
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "448": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "449": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1693,
        1713
      ],
      "op": "AND",
      "path": "109"
    },
    "450": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "453": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1693,
        1713
      ],
      "op": "OR",
      "path": "109"
    },
    "454": {
      "offset": [
        1727,
        1746
      ],
      "op": "AND",
      "path": "109"
    },
    "455": {
      "offset": [
        1709,
        1713
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x1"
    },
    "457": {
      "offset": [
        1727,
        1746
      ],
      "op": "OR",
      "path": "109"
    },
    "458": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "459": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1727,
        1746
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "460": {
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "461": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        529,
        530
      ],
      "op": "PUSH1",
      "path": "80",
      "statement": 0,
      "value": "0x1"
    },
    "463": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        529,
        535
      ],
      "op": "DUP3",
      "path": "80"
    },
    "464": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        529,
        535
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "465": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        529,
        535
      ],
      "op": "SSTORE",
      "path": "80"
    },
    "466": {
      "offset": [
        1779,
        1845
      ],
      "op": "DUP1",
      "path": "109"
    },
    "467": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1779,
        1845
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "468": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1779,
        1845
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x1E3"
    },
    "471": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "472": {
      "offset": [
        1829,
        1834
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "474": {
      "offset": [
        1813,
        1834
      ],
      "op": "DUP1",
      "path": "109"
    },
    "475": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1813,
        1834
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "476": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "479": {
      "op": "NOT"
    },
    "480": {
      "offset": [
        1813,
        1834
      ],
      "op": "AND",
      "path": "109"
    },
    "481": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1813,
        1834
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "482": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        1813,
        1834
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "483": {
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "484": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "POP",
      "path": "80"
    },
    "485": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        459,
        540
      ],
      "op": "POP",
      "path": "80"
    },
    "486": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "o",
      "offset": [
        459,
        540
      ],
      "op": "JUMP",
      "path": "80"
    },
    "487": {
      "offset": [
        287,
        303
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "488": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "490": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "SLOAD",
      "path": "80"
    },
    "491": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        287,
        303
      ],
      "op": "DUP2",
      "path": "80"
    },
    "492": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "o",
      "offset": [
        287,
        303
      ],
      "op": "JUMP",
      "path": "80"
    },
    "493": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "494": {
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "496": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "497": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "500": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "501": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "DIV",
      "path": "109"
    },
    "502": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "504": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "AND",
      "path": "109"
    },
    "505": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "DUP1",
      "path": "109"
    },
    "506": {
      "offset": [
        1501,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x206"
    },
    "509": {
      "offset": [
        1501,
        1534
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "510": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1534
      ],
      "op": "POP",
      "path": "109"
    },
    "511": {
      "offset": [
        1518,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x206"
    },
    "514": {
      "offset": [
        1518,
        1532
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3AA"
    },
    "517": {
      "jump": "i",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMP",
      "path": "109"
    },
    "518": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "519": {
      "offset": [
        1501,
        1551
      ],
      "op": "DUP1",
      "path": "109"
    },
    "520": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1501,
        1551
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x214"
    },
    "523": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "527": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "528": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "530": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "AND",
      "path": "109"
    },
    "531": {
      "offset": [
        1538,
        1551
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "532": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "533": {
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x24F"
    },
    "536": {
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "537": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "539": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "548": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "549": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x4"
    },
    "551": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "552": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "553": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "554": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "556": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "557": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "558": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "559": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "560": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "561": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "562": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "564": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "565": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "566": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "568": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "569": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "570": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3C2"
    },
    "573": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "575": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "576": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "CODECOPY",
      "path": "109"
    },
    "577": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "579": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "580": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "581": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "582": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "583": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "585": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "586": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "587": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "588": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "589": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "590": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "REVERT",
      "path": "109"
    },
    "591": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "592": {
      "offset": [
        1613,
        1632
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "594": {
      "offset": [
        1636,
        1649
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "595": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "598": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "599": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "DIV",
      "path": "109"
    },
    "600": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "602": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "AND",
      "path": "109"
    },
    "603": {
      "offset": [
        1635,
        1649
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "604": {
      "offset": [
        1659,
        1757
      ],
      "op": "DUP1",
      "path": "109"
    },
    "605": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "606": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x27A"
    },
    "609": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "610": {
      "offset": [
        1693,
        1706
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "612": {
      "offset": [
        1693,
        1713
      ],
      "op": "DUP1",
      "path": "109"
    },
    "613": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "616": {
      "op": "NOT"
    },
    "617": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "620": {
      "op": "NOT"
    },
    "621": {
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "622": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "623": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "AND",
      "path": "109"
    },
    "624": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "627": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "OR",
      "path": "109"
    },
    "628": {
      "offset": [
        1727,
        1746
      ],
      "op": "AND",
      "path": "109"
    },
    "629": {
      "offset": [
        1709,
        1713
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x1"
    },
    "631": {
      "offset": [
        1727,
        1746
      ],
      "op": "OR",
      "path": "109"
    },
    "632": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "633": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1727,
        1746
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "634": {
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "635": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        369
      ],
      "op": "PUSH1",
      "path": "80",
      "statement": 1,
      "value": "0x0"
    },
    "637": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "DUP1",
      "path": "80"
    },
    "638": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "SLOAD",
      "path": "80"
    },
    "639": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "643": {
      "op": "NOT"
    },
    "644": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "AND",
      "path": "80"
    },
    "645": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "PUSH3",
      "path": "80",
      "value": "0x10000"
    },
    "649": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "OR",
      "path": "80"
    },
    "650": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "651": {
      "fn": "InitializableMock.initialize",
      "offset": [
        355,
        376
      ],
      "op": "SSTORE",
      "path": "80"
    },
    "652": {
      "offset": [
        1779,
        1845
      ],
      "op": "DUP1",
      "path": "109"
    },
    "653": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "654": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x29D"
    },
    "657": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "658": {
      "offset": [
        1829,
        1834
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "660": {
      "offset": [
        1813,
        1834
      ],
      "op": "DUP1",
      "path": "109"
    },
    "661": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "662": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "665": {
      "op": "NOT"
    },
    "666": {
      "offset": [
        1813,
        1834
      ],
      "op": "AND",
      "path": "109"
    },
    "667": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "668": {
      "fn": "InitializableMock.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "669": {
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "670": {
      "fn": "InitializableMock.initialize",
      "offset": [
        308,
        381
      ],
      "op": "POP",
      "path": "80"
    },
    "671": {
      "fn": "InitializableMock.initialize",
      "jump": "o",
      "offset": [
        308,
        381
      ],
      "op": "JUMP",
      "path": "80"
    },
    "672": {
      "fn": "InitializableMock.fail",
      "offset": [
        618,
        707
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "673": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "statement": 2,
      "value": "0x40"
    },
    "675": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP1",
      "path": "80"
    },
    "676": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "683": {
      "op": "SHL"
    },
    "684": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP2",
      "path": "80"
    },
    "685": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "686": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "688": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "690": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP3",
      "path": "80"
    },
    "691": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "ADD",
      "path": "80"
    },
    "692": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP2",
      "path": "80"
    },
    "693": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "694": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "695": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x24"
    },
    "697": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP3",
      "path": "80"
    },
    "698": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "ADD",
      "path": "80"
    },
    "699": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "700": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH32",
      "path": "80",
      "value": "0x496E697469616C697A61626C654D6F636B20666F72636564206661696C757265"
    },
    "733": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x44"
    },
    "735": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP3",
      "path": "80"
    },
    "736": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "ADD",
      "path": "80"
    },
    "737": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "738": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "739": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "740": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "741": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "DUP2",
      "path": "80"
    },
    "742": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "743": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SUB",
      "path": "80"
    },
    "744": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x64"
    },
    "746": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "ADD",
      "path": "80"
    },
    "747": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "748": {
      "fn": "InitializableMock.fail",
      "offset": [
        652,
        702
      ],
      "op": "REVERT",
      "path": "80"
    },
    "749": {
      "offset": [
        257,
        283
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "750": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "752": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SLOAD",
      "path": "80"
    },
    "753": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH3",
      "path": "80",
      "value": "0x10000"
    },
    "757": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "758": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DIV",
      "path": "80"
    },
    "759": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0xFF"
    },
    "761": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "AND",
      "path": "80"
    },
    "762": {
      "fn": "InitializableMock.fail",
      "offset": [
        257,
        283
      ],
      "op": "DUP2",
      "path": "80"
    },
    "763": {
      "fn": "InitializableMock.fail",
      "jump": "o",
      "offset": [
        257,
        283
      ],
      "op": "JUMP",
      "path": "80"
    },
    "764": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "765": {
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "767": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "768": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "771": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "772": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "DIV",
      "path": "109"
    },
    "773": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "775": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "AND",
      "path": "109"
    },
    "776": {
      "branch": 7,
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1514
      ],
      "op": "DUP1",
      "path": "109"
    },
    "777": {
      "offset": [
        1501,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x315"
    },
    "780": {
      "branch": 7,
      "offset": [
        1501,
        1534
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "781": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1534
      ],
      "op": "POP",
      "path": "109"
    },
    "782": {
      "offset": [
        1518,
        1534
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x315"
    },
    "785": {
      "offset": [
        1518,
        1532
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3AA"
    },
    "788": {
      "jump": "i",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMP",
      "path": "109"
    },
    "789": {
      "branch": 8,
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "790": {
      "offset": [
        1501,
        1551
      ],
      "op": "DUP1",
      "path": "109"
    },
    "791": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1501,
        1551
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x323"
    },
    "794": {
      "branch": 8,
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "798": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1539,
        1551
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "799": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "801": {
      "branch": 9,
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1539,
        1551
      ],
      "op": "AND",
      "path": "109"
    },
    "802": {
      "offset": [
        1538,
        1551
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "803": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "804": {
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x35E"
    },
    "807": {
      "branch": 9,
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "808": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "810": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "817": {
      "op": "SHL"
    },
    "818": {
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "819": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "820": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x4"
    },
    "822": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "823": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "824": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "825": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "827": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "828": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "829": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "830": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "831": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "109"
    },
    "832": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "833": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "835": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "109"
    },
    "836": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "837": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x20"
    },
    "839": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "840": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "841": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3C2"
    },
    "844": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x2E"
    },
    "846": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "847": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "CODECOPY",
      "path": "109"
    },
    "848": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "850": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "109"
    },
    "851": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "852": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "853": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "109"
    },
    "854": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "856": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "857": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "109"
    },
    "858": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "859": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "109"
    },
    "860": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "861": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "REVERT",
      "path": "109"
    },
    "862": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "863": {
      "offset": [
        1613,
        1632
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "865": {
      "offset": [
        1636,
        1649
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "866": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "869": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1636,
        1649
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "870": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1636,
        1649
      ],
      "op": "DIV",
      "path": "109"
    },
    "871": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xFF"
    },
    "873": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1636,
        1649
      ],
      "op": "AND",
      "path": "109"
    },
    "874": {
      "offset": [
        1635,
        1649
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "875": {
      "offset": [
        1659,
        1757
      ],
      "op": "DUP1",
      "path": "109"
    },
    "876": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1659,
        1757
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "877": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1659,
        1757
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x389"
    },
    "880": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "881": {
      "offset": [
        1693,
        1706
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "883": {
      "offset": [
        1693,
        1713
      ],
      "op": "DUP1",
      "path": "109"
    },
    "884": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1693,
        1713
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "887": {
      "op": "NOT"
    },
    "888": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "891": {
      "op": "NOT"
    },
    "892": {
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "893": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "894": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1693,
        1713
      ],
      "op": "AND",
      "path": "109"
    },
    "895": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x100"
    },
    "898": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1693,
        1713
      ],
      "op": "OR",
      "path": "109"
    },
    "899": {
      "offset": [
        1727,
        1746
      ],
      "op": "AND",
      "path": "109"
    },
    "900": {
      "offset": [
        1709,
        1713
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x1"
    },
    "902": {
      "offset": [
        1727,
        1746
      ],
      "op": "OR",
      "path": "109"
    },
    "903": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "904": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1727,
        1746
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "905": {
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "906": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        438,
        450
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 3,
      "value": "0x391"
    },
    "909": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        438,
        448
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1ED"
    },
    "912": {
      "fn": "InitializableMock.initializeNested",
      "jump": "i",
      "offset": [
        438,
        450
      ],
      "op": "JUMP",
      "path": "80"
    },
    "913": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        438,
        450
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "914": {
      "offset": [
        1783,
        1797
      ],
      "op": "DUP1",
      "path": "109"
    },
    "915": {
      "offset": [
        1779,
        1845
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "916": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1779,
        1845
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x29D"
    },
    "919": {
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "920": {
      "offset": [
        1829,
        1834
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "922": {
      "offset": [
        1813,
        1834
      ],
      "op": "DUP1",
      "path": "109"
    },
    "923": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1813,
        1834
      ],
      "op": "SLOAD",
      "path": "109"
    },
    "924": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "927": {
      "op": "NOT"
    },
    "928": {
      "offset": [
        1813,
        1834
      ],
      "op": "AND",
      "path": "109"
    },
    "929": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1813,
        1834
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "930": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        1813,
        1834
      ],
      "op": "SSTORE",
      "path": "109"
    },
    "931": {
      "fn": "InitializableMock.initializeNested",
      "offset": [
        385,
        455
      ],
      "op": "POP",
      "path": "80"
    },
    "932": {
      "fn": "InitializableMock.initializeNested",
      "jump": "o",
      "offset": [
        385,
        455
      ],
      "op": "JUMP",
      "path": "80"
    },
    "933": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        544,
        614
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "934": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        603,
        604
      ],
      "op": "PUSH1",
      "path": "80",
      "statement": 4,
      "value": "0x1"
    },
    "936": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        603,
        609
      ],
      "op": "SSTORE",
      "path": "80"
    },
    "937": {
      "fn": "InitializableMock.nonInitializable",
      "jump": "o",
      "offset": [
        544,
        614
      ],
      "op": "JUMP",
      "path": "80"
    },
    "938": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1941,
        2053
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "939": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1989,
        1993
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "941": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH2",
      "path": "109",
      "statement": 5,
      "value": "0x3B5"
    },
    "944": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2040,
        2044
      ],
      "op": "ADDRESS",
      "path": "109"
    },
    "945": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2031
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3BB"
    },
    "948": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMP",
      "path": "109"
    },
    "949": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "950": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2012,
        2046
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "951": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2005,
        2046
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "952": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2005,
        2046
      ],
      "op": "POP",
      "path": "109"
    },
    "953": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1941,
        2053
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "954": {
      "fn": "Initializable._isConstructor",
      "jump": "o",
      "offset": [
        1941,
        2053
      ],
      "op": "JUMP",
      "path": "109"
    },
    "955": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "956": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "143"
    },
    "957": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "143",
      "statement": 6
    },
    "958": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "959": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "960": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "143"
    }
  },
  "sha1": "eefd00245617ef5cf2f9dcaf390ff707dad91bf6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../proxy/Initializable.sol\";\n\n/**\n * @title InitializableMock\n * @dev This contract is a mock to test initializable functionality\n */\ncontract InitializableMock is Initializable {\n\n  bool public initializerRan;\n  uint256 public x;\n\n  function initialize() public initializer {\n    initializerRan = true;\n  }\n\n  function initializeNested() public initializer {\n    initialize();\n  }\n\n  function initializeWithX(uint256 _x) public payable initializer {\n    x = _x;\n  }\n\n  function nonInitializable(uint256 _x) public payable {\n    x = _x;\n  }\n\n  function fail() public pure {\n    require(false, \"InitializableMock forced failure\");\n  }\n\n}\n",
  "sourceMap": "208:502:80:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts@3.4.0/contracts/mocks/InitializableMock.sol",
  "type": "contract"
}