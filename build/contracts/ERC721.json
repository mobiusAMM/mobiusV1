{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "18": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/ERC721.sol",
    "19": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721.sol",
    "20": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Enumerable.sol",
    "21": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Metadata.sol",
    "22": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Receiver.sol",
    "23": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "24": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "26": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableMap.sol",
    "27": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "28": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Strings.sol",
    "8": "contracts/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "9": "contracts/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "ERC721": [
        2678
      ]
    },
    "id": 2679,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1737,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:31:18"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1738,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3036,
        "src": "70:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1739,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3642,
        "src": "105:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 1740,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3700,
        "src": "130:31:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Enumerable.sol",
        "file": "./IERC721Enumerable.sol",
        "id": 1741,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3673,
        "src": "163:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1742,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3718,
        "src": "198:31:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
        "file": "../../introspection/ERC165.sol",
        "id": 1743,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3526,
        "src": "231:40:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 1744,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 3391,
        "src": "273:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1745,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 4014,
        "src": "308:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
        "file": "../../utils/EnumerableSet.sol",
        "id": 1746,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 5066,
        "src": "343:39:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableMap.sol",
        "file": "../../utils/EnumerableMap.sol",
        "id": 1747,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 4574,
        "src": "384:39:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 1748,
        "nodeType": "ImportDirective",
        "scope": 2679,
        "sourceUnit": 5153,
        "src": "425:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1750,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3035,
              "src": "610:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$3035",
                "typeString": "contract Context"
              }
            },
            "id": 1751,
            "nodeType": "InheritanceSpecifier",
            "src": "610:7:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1752,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3525,
              "src": "619:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$3525",
                "typeString": "contract ERC165"
              }
            },
            "id": 1753,
            "nodeType": "InheritanceSpecifier",
            "src": "619:6:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1754,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3641,
              "src": "627:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$3641",
                "typeString": "contract IERC721"
              }
            },
            "id": 1755,
            "nodeType": "InheritanceSpecifier",
            "src": "627:7:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1756,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3699,
              "src": "636:15:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$3699",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 1757,
            "nodeType": "InheritanceSpecifier",
            "src": "636:15:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1758,
              "name": "IERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3672,
              "src": "653:17:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$3672",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "id": 1759,
            "nodeType": "InheritanceSpecifier",
            "src": "653:17:18"
          }
        ],
        "contractDependencies": [
          3035,
          3525,
          3641,
          3672,
          3699,
          5164
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1749,
          "nodeType": "StructuredDocumentation",
          "src": "462:127:18",
          "text": " @title ERC721 Non-Fungible Token Standard basic implementation\n @dev see https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 2678,
        "linearizedBaseContracts": [
          2678,
          3672,
          3699,
          3641,
          3525,
          5164,
          3035
        ],
        "name": "ERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1762,
            "libraryName": {
              "contractScope": null,
              "id": 1760,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3390,
              "src": "684:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3390",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "678:27:18",
            "typeName": {
              "id": 1761,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1765,
            "libraryName": {
              "contractScope": null,
              "id": 1763,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4013,
              "src": "717:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$4013",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "711:26:18",
            "typeName": {
              "id": 1764,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1768,
            "libraryName": {
              "contractScope": null,
              "id": 1766,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5065,
              "src": "749:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$5065",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "743:46:18",
            "typeName": {
              "contractScope": null,
              "id": 1767,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4970,
              "src": "767:21:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$4970_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "id": 1771,
            "libraryName": {
              "contractScope": null,
              "id": 1769,
              "name": "EnumerableMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4573,
              "src": "801:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableMap_$4573",
                "typeString": "library EnumerableMap"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "795:55:18",
            "typeName": {
              "contractScope": null,
              "id": 1770,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4347,
              "src": "819:30:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            }
          },
          {
            "id": 1774,
            "libraryName": {
              "contractScope": null,
              "id": 1772,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5152,
              "src": "862:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$5152",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "856:26:18",
            "typeName": {
              "id": 1773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "874:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 1777,
            "mutability": "constant",
            "name": "_ERC721_RECEIVED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1064:53:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1775,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1064:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783135306237613032",
              "id": 1776,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1107:10:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_353073666_by_1",
                "typeString": "int_const 353073666"
              },
              "value": "0x150b7a02"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1781,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1204:64:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 1780,
              "keyType": {
                "id": 1778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1213:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1204:42:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1779,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4970,
                "src": "1224:21:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$4970_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1783,
            "mutability": "mutable",
            "name": "_tokenOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1335:51:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
              "typeString": "struct EnumerableMap.UintToAddressMap"
            },
            "typeName": {
              "contractScope": null,
              "id": 1782,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4347,
              "src": "1335:30:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1787,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1445:52:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1786,
              "keyType": {
                "id": 1784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1454:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1445:28:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1785,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1465:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1793,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1555:73:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1792,
              "keyType": {
                "id": 1788,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1564:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1555:46:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1791,
                "keyType": {
                  "id": 1789,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1584:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1575:25:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1790,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1595:4:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1795,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1656:20:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1794,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1656:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1797,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1706:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1796,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1706:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1801,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1777:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1800,
              "keyType": {
                "id": 1798,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1786:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1777:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1799,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1797:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1803,
            "mutability": "mutable",
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "1849:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1802,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1849:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1806,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "2764:57:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1804,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2764:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783830616335386364",
              "id": 1805,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2811:10:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1809,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "3096:66:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1807,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3096:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 1808,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3152:10:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1812,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2678,
            "src": "3476:68:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1810,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3476:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783738306539643633",
              "id": 1811,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3534:10:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2014223715_by_1",
                "typeString": "int_const 2014223715"
              },
              "value": "0x780e9d63"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "3733:313:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1820,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "3744:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1821,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1815,
                      "src": "3752:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3744:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "3744:13:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1824,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1797,
                      "src": "3768:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1825,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "3778:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3768:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:17:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1829,
                        "name": "_INTERFACE_ID_ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1806,
                        "src": "3895:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1828,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3524,
                      "src": "3876:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3876:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1831,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:40:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1833,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "3946:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1832,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3524,
                      "src": "3927:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:49:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1837,
                        "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "4006:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1836,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3524,
                      "src": "3987:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3987:51:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:51:18"
                }
              ]
            },
            "documentation": {
              "id": 1813,
              "nodeType": "StructuredDocumentation",
              "src": "3553:110:18",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1841,
                  "src": "3682:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1817,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1841,
                  "src": "3703:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:44:18"
            },
            "returnParameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:0:18"
            },
            "scope": 2678,
            "src": "3669:377:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3566
            ],
            "body": {
              "id": 1866,
              "nodeType": "Block",
              "src": "4191:140:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1851,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "4210:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4227:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4219:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1852,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4219:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4219:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4210:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4231:44:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 1850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4202:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:74:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:74:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1860,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "4294:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 1862,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1861,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "4308:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4294:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1863,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5044,
                      "src": "4294:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$4970_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1849,
                  "id": 1865,
                  "nodeType": "Return",
                  "src": "4287:36:18"
                }
              ]
            },
            "documentation": {
              "id": 1842,
              "nodeType": "StructuredDocumentation",
              "src": "4054:50:18",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1846,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4164:8:18"
            },
            "parameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1867,
                  "src": "4129:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4129:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4128:15:18"
            },
            "returnParameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1867,
                  "src": "4182:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4182:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4181:9:18"
            },
            "scope": 2678,
            "src": "4110:221:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3574
            ],
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "4474:96:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1878,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "4509:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4518:43:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1876,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "4492:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 1877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4572,
                      "src": "4492:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4492:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1875,
                  "id": 1881,
                  "nodeType": "Return",
                  "src": "4485:77:18"
                }
              ]
            },
            "documentation": {
              "id": 1868,
              "nodeType": "StructuredDocumentation",
              "src": "4339:48:18",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4447:8:18"
            },
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1883,
                  "src": "4410:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4410:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4409:17:18"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1883,
                  "src": "4465:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4464:9:18"
            },
            "scope": 2678,
            "src": "4393:177:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3684
            ],
            "body": {
              "id": 1892,
              "nodeType": "Block",
              "src": "4706:31:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1890,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1795,
                    "src": "4724:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1889,
                  "id": 1891,
                  "nodeType": "Return",
                  "src": "4717:12:18"
                }
              ]
            },
            "documentation": {
              "id": 1884,
              "nodeType": "StructuredDocumentation",
              "src": "4578:53:18",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4673:8:18"
            },
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4650:2:18"
            },
            "returnParameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "4691:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4690:15:18"
            },
            "scope": 2678,
            "src": "4637:100:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3690
            ],
            "body": {
              "id": 1902,
              "nodeType": "Block",
              "src": "4877:33:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1900,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1797,
                    "src": "4895:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1899,
                  "id": 1901,
                  "nodeType": "Return",
                  "src": "4888:14:18"
                }
              ]
            },
            "documentation": {
              "id": 1894,
              "nodeType": "StructuredDocumentation",
              "src": "4745:55:18",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4844:8:18"
            },
            "parameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4821:2:18"
            },
            "returnParameters": {
              "id": 1899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1898,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1903,
                  "src": "4862:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4861:15:18"
            },
            "scope": 2678,
            "src": "4806:104:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3698
            ],
            "body": {
              "id": 1970,
              "nodeType": "Block",
              "src": "5069:704:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1914,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1906,
                            "src": "5096:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1913,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2266,
                          "src": "5088:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5088:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5106:49:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5080:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:76:18"
                },
                {
                  "assignments": [
                    1920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1920,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1970,
                      "src": "5169:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1919,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5169:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1924,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1921,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1801,
                      "src": "5195:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1923,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1922,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1906,
                      "src": "5206:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5195:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5169:45:18"
                },
                {
                  "assignments": [
                    1926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1926,
                      "mutability": "mutable",
                      "name": "base",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1970,
                      "src": "5225:18:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1925,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5225:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1929,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1927,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1980,
                      "src": "5246:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5246:9:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5225:30:18"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1932,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "5337:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5331:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1930,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5331:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5331:11:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5331:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5353:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5331:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1940,
                  "nodeType": "IfStatement",
                  "src": "5327:72:18",
                  "trueBody": {
                    "id": 1939,
                    "nodeType": "Block",
                    "src": "5356:43:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1937,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "5378:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1911,
                        "id": 1938,
                        "nodeType": "Return",
                        "src": "5371:16:18"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1943,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "5509:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5503:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1941,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5503:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5503:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5503:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5529:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5503:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1958,
                  "nodeType": "IfStatement",
                  "src": "5499:108:18",
                  "trueBody": {
                    "id": 1957,
                    "nodeType": "Block",
                    "src": "5532:75:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1952,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1926,
                                  "src": "5578:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1953,
                                  "name": "_tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1920,
                                  "src": "5584:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1950,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5561:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5561:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5561:33:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5554:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1948,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5554:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5554:41:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1911,
                        "id": 1956,
                        "nodeType": "Return",
                        "src": "5547:48:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1963,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "5739:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1964,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1906,
                                "src": "5745:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5151,
                              "src": "5745:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 1966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5745:18:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1961,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5722:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5722:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5722:42:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5715:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5715:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5715:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1911,
                  "id": 1969,
                  "nodeType": "Return",
                  "src": "5708:57:18"
                }
              ]
            },
            "documentation": {
              "id": 1904,
              "nodeType": "StructuredDocumentation",
              "src": "4918:57:18",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5036:8:18"
            },
            "parameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1971,
                  "src": "4999:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4998:17:18"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1971,
                  "src": "5054:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5053:15:18"
            },
            "scope": 2678,
            "src": "4981:792:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1979,
              "nodeType": "Block",
              "src": "6075:34:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1977,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1803,
                    "src": "6093:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1976,
                  "id": 1978,
                  "nodeType": "Return",
                  "src": "6086:15:18"
                }
              ]
            },
            "documentation": {
              "id": 1972,
              "nodeType": "StructuredDocumentation",
              "src": "5781:225:18",
              "text": " @dev Returns the base URI set via {_setBaseURI}. This will be\n automatically added as a prefix in {tokenURI} to each token's URI, or\n to the token ID if no specific URI is set for that token ID."
            },
            "functionSelector": "6c0360eb",
            "id": 1980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6028:2:18"
            },
            "returnParameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1980,
                  "src": "6060:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6060:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6059:15:18"
            },
            "scope": 2678,
            "src": "6012:97:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3663
            ],
            "body": {
              "id": 1998,
              "nodeType": "Block",
              "src": "6299:56:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1995,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "6341:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1991,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "6317:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 1993,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1992,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "6331:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6317:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5064,
                      "src": "6317:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$4970_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6317:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1990,
                  "id": 1997,
                  "nodeType": "Return",
                  "src": "6310:37:18"
                }
              ]
            },
            "documentation": {
              "id": 1981,
              "nodeType": "StructuredDocumentation",
              "src": "6117:70:18",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
            },
            "functionSelector": "2f745c59",
            "id": 1999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1987,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6272:8:18"
            },
            "parameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1999,
                  "src": "6222:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1999,
                  "src": "6237:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6237:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6221:30:18"
            },
            "returnParameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1999,
                  "src": "6290:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6290:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6289:9:18"
            },
            "scope": 2678,
            "src": "6193:162:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3653
            ],
            "body": {
              "id": 2010,
              "nodeType": "Block",
              "src": "6501:141:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "6613:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4433,
                      "src": "6613:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$4347_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2005,
                  "id": 2009,
                  "nodeType": "Return",
                  "src": "6606:28:18"
                }
              ]
            },
            "documentation": {
              "id": 2000,
              "nodeType": "StructuredDocumentation",
              "src": "6363:62:18",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2002,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6474:8:18"
            },
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6451:2:18"
            },
            "returnParameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2011,
                  "src": "6492:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6492:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6491:9:18"
            },
            "scope": 2678,
            "src": "6431:211:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3671
            ],
            "body": {
              "id": 2029,
              "nodeType": "Block",
              "src": "6803:88:18",
              "statements": [
                {
                  "assignments": [
                    2021,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2021,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2029,
                      "src": "6815:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6815:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2026,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2024,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "6852:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2022,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "6836:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4472,
                      "src": "6836:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_address_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (uint256,address)"
                      }
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6836:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6814:44:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2027,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2021,
                    "src": "6876:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2019,
                  "id": 2028,
                  "nodeType": "Return",
                  "src": "6869:14:18"
                }
              ]
            },
            "documentation": {
              "id": 2012,
              "nodeType": "StructuredDocumentation",
              "src": "6650:63:18",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 2030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2016,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6776:8:18"
            },
            "parameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2030,
                  "src": "6741:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6741:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6740:15:18"
            },
            "returnParameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2030,
                  "src": "6794:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6793:9:18"
            },
            "scope": 2678,
            "src": "6719:172:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3602
            ],
            "body": {
              "id": 2073,
              "nodeType": "Block",
              "src": "7023:334:18",
              "statements": [
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2073,
                      "src": "7034:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2039,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7034:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2043,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2035,
                        "src": "7065:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2041,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "7050:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "7050:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7034:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2047,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2033,
                          "src": "7092:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2048,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "7098:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7092:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7105:35:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7084:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2052,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:57:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2054,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3023,
                              "src": "7162:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7162:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2056,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2040,
                            "src": "7178:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7162:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2060,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "7211:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2061,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3023,
                                "src": "7218:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 2062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7218:12:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2058,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2678,
                              "src": "7187:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2147,
                            "src": "7187:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7187:44:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7162:69:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7246:58:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7154:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7154:161:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "7154:161:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2069,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2033,
                        "src": "7337:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2070,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2035,
                        "src": "7341:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2068,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "7328:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7328:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "7328:21:18"
                }
              ]
            },
            "documentation": {
              "id": 2031,
              "nodeType": "StructuredDocumentation",
              "src": "6899:48:18",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7014:8:18"
            },
            "parameters": {
              "id": 2036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2033,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2074,
                  "src": "6970:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6970:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2035,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2074,
                  "src": "6982:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6982:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6969:29:18"
            },
            "returnParameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7023:0:18"
            },
            "scope": 2678,
            "src": "6953:404:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3610
            ],
            "body": {
              "id": 2094,
              "nodeType": "Block",
              "src": "7508:136:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2085,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2077,
                            "src": "7535:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2084,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2266,
                          "src": "7527:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7527:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7545:46:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7519:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7519:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "7519:73:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2090,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1787,
                      "src": "7612:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2092,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2091,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2077,
                      "src": "7628:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7612:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2082,
                  "id": 2093,
                  "nodeType": "Return",
                  "src": "7605:31:18"
                }
              ]
            },
            "documentation": {
              "id": 2075,
              "nodeType": "StructuredDocumentation",
              "src": "7365:52:18",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7481:8:18"
            },
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2077,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2095,
                  "src": "7444:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7444:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7443:17:18"
            },
            "returnParameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2095,
                  "src": "7499:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7499:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7498:9:18"
            },
            "scope": 2678,
            "src": "7423:221:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3618
            ],
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "7800:211:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2105,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "7819:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2106,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "7831:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7831:12:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7819:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7845:27:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7811:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7811:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "7811:62:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2112,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1793,
                          "src": "7886:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2116,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2113,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "7905:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7905:12:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7886:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2117,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2115,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "7919:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7886:42:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2118,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "7931:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7886:53:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "7886:53:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2122,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3023,
                          "src": "7970:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7970:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2124,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "7984:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2125,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "7994:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2121,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "7955:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7955:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "EmitStatement",
                  "src": "7950:53:18"
                }
              ]
            },
            "documentation": {
              "id": 2096,
              "nodeType": "StructuredDocumentation",
              "src": "7652:58:18",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 2129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7791:8:18"
            },
            "parameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2129,
                  "src": "7743:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7743:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2129,
                  "src": "7761:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7742:33:18"
            },
            "returnParameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7800:0:18"
            },
            "scope": 2678,
            "src": "7716:295:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3628
            ],
            "body": {
              "id": 2146,
              "nodeType": "Block",
              "src": "8185:61:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2140,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1793,
                        "src": "8203:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2141,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2132,
                        "src": "8222:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8203:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2144,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2143,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2134,
                      "src": "8229:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8203:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2139,
                  "id": 2145,
                  "nodeType": "Return",
                  "src": "8196:42:18"
                }
              ]
            },
            "documentation": {
              "id": 2130,
              "nodeType": "StructuredDocumentation",
              "src": "8019:57:18",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8161:8:18"
            },
            "parameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2147,
                  "src": "8108:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2147,
                  "src": "8123:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8123:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8107:33:18"
            },
            "returnParameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2147,
                  "src": "8179:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8179:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8178:6:18"
            },
            "scope": 2678,
            "src": "8082:164:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3594
            ],
            "body": {
              "id": 2173,
              "nodeType": "Block",
              "src": "8402:216:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2160,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3023,
                              "src": "8493:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8493:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2162,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2154,
                            "src": "8507:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2159,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2308,
                          "src": "8474:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8474:41:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8517:51:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8466:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8466:103:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "8466:103:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2168,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "8592:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2169,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "8598:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2170,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "8602:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2167,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "8582:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8582:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "8582:28:18"
                }
              ]
            },
            "documentation": {
              "id": 2148,
              "nodeType": "StructuredDocumentation",
              "src": "8254:53:18",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 2174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8393:8:18"
            },
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2174,
                  "src": "8335:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8335:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2174,
                  "src": "8349:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8349:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2174,
                  "src": "8361:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8361:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8334:43:18"
            },
            "returnParameters": {
              "id": 2157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8402:0:18"
            },
            "scope": 2678,
            "src": "8313:305:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3584
            ],
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "8782:58:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2186,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2177,
                        "src": "8810:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2187,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2179,
                        "src": "8816:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2188,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "8820:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8829:2:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2185,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2193,
                        2223
                      ],
                      "referencedDeclaration": 2223,
                      "src": "8793:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8793:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "8793:39:18"
                }
              ]
            },
            "documentation": {
              "id": 2175,
              "nodeType": "StructuredDocumentation",
              "src": "8626:57:18",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 2193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2183,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8773:8:18"
            },
            "parameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2193,
                  "src": "8715:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2179,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2193,
                  "src": "8729:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2181,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2193,
                  "src": "8741:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8741:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8714:43:18"
            },
            "returnParameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8782:0:18"
            },
            "scope": 2678,
            "src": "8689:151:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3640
            ],
            "body": {
              "id": 2222,
              "nodeType": "Block",
              "src": "9024:172:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2208,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3023,
                              "src": "9062:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9062:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2210,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2200,
                            "src": "9076:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2207,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2308,
                          "src": "9043:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9043:41:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9086:51:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9035:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9035:103:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2214,
                  "nodeType": "ExpressionStatement",
                  "src": "9035:103:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2216,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "9163:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2217,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2198,
                        "src": "9169:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2200,
                        "src": "9173:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2219,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2202,
                        "src": "9182:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2215,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2252,
                      "src": "9149:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9149:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
                  "src": "9149:39:18"
                }
              ]
            },
            "documentation": {
              "id": 2194,
              "nodeType": "StructuredDocumentation",
              "src": "8848:57:18",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9015:8:18"
            },
            "parameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2223,
                  "src": "8937:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8937:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2198,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2223,
                  "src": "8951:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8951:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2200,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2223,
                  "src": "8963:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8963:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2223,
                  "src": "8980:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8980:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8936:63:18"
            },
            "returnParameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9024:0:18"
            },
            "scope": 2678,
            "src": "8911:285:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2251,
              "nodeType": "Block",
              "src": "10181:169:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2236,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "10202:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2237,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2228,
                        "src": "10208:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2238,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2230,
                        "src": "10212:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2235,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "10192:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:28:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2243,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "10262:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2244,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2228,
                            "src": "10268:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2245,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "10272:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2246,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "10281:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2242,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2643,
                          "src": "10239:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10239:48:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10289:52:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10231:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10231:111:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2250,
                  "nodeType": "ExpressionStatement",
                  "src": "10231:111:18"
                }
              ]
            },
            "documentation": {
              "id": 2224,
              "nodeType": "StructuredDocumentation",
              "src": "9204:868:18",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2226,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2252,
                  "src": "10101:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10101:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2228,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2252,
                  "src": "10115:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10115:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2252,
                  "src": "10127:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10127:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2252,
                  "src": "10144:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10144:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10100:63:18"
            },
            "returnParameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10181:0:18"
            },
            "scope": 2678,
            "src": "10078:272:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2265,
              "nodeType": "Block",
              "src": "10734:56:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2262,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "10774:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2260,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "10752:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4419,
                      "src": "10752:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10752:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2259,
                  "id": 2264,
                  "nodeType": "Return",
                  "src": "10745:37:18"
                }
              ]
            },
            "documentation": {
              "id": 2253,
              "nodeType": "StructuredDocumentation",
              "src": "10358:299:18",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2266,
                  "src": "10680:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10680:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10679:17:18"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2266,
                  "src": "10728:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10728:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10727:6:18"
            },
            "scope": 2678,
            "src": "10663:127:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2307,
              "nodeType": "Block",
              "src": "11056:256:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2278,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2271,
                            "src": "11083:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2277,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2266,
                          "src": "11075:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11075:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11093:46:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11067:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11067:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "11067:73:18"
                },
                {
                  "assignments": [
                    2284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2284,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2307,
                      "src": "11151:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11151:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2289,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2287,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2271,
                        "src": "11182:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2285,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "11167:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "11167:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11167:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11151:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2290,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2269,
                              "src": "11209:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2291,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2284,
                              "src": "11220:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11209:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2294,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2271,
                                  "src": "11241:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2293,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2095,
                                "src": "11229:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11229:20:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2296,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2269,
                              "src": "11253:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11229:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11209:51:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2301,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2284,
                              "src": "11288:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2302,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2269,
                              "src": "11295:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2299,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2678,
                              "src": "11264:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2147,
                            "src": "11264:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11264:39:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11209:94:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2305,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11208:96:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2275,
                  "id": 2306,
                  "nodeType": "Return",
                  "src": "11201:103:18"
                }
              ]
            },
            "documentation": {
              "id": 2267,
              "nodeType": "StructuredDocumentation",
              "src": "10798:153:18",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2308,
                  "src": "10985:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10985:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2308,
                  "src": "11002:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11002:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10984:34:18"
            },
            "returnParameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2274,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2308,
                  "src": "11050:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11050:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11049:6:18"
            },
            "scope": 2678,
            "src": "10957:355:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2322,
              "nodeType": "Block",
              "src": "11720:45:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2317,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "11741:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2318,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2313,
                        "src": "11745:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 2319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11754:2:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2316,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2323,
                        2352
                      ],
                      "referencedDeclaration": 2352,
                      "src": "11731:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11731:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2321,
                  "nodeType": "ExpressionStatement",
                  "src": "11731:26:18"
                }
              ]
            },
            "documentation": {
              "id": 2309,
              "nodeType": "StructuredDocumentation",
              "src": "11320:329:18",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\nd*\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2311,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2323,
                  "src": "11674:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11674:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2313,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2323,
                  "src": "11686:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11686:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11673:29:18"
            },
            "returnParameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11720:0:18"
            },
            "scope": 2678,
            "src": "11655:110:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2351,
              "nodeType": "Block",
              "src": "12077:165:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2334,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "12094:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2335,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2328,
                        "src": "12098:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2333,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2411,
                      "src": "12088:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12088:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2337,
                  "nodeType": "ExpressionStatement",
                  "src": "12088:18:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12156:1:18",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12148:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2340,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12148:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12148:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2344,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2326,
                            "src": "12160:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2345,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "12164:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2346,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2330,
                            "src": "12173:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2339,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2643,
                          "src": "12125:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12125:54:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12181:52:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12117:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12117:117:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2350,
                  "nodeType": "ExpressionStatement",
                  "src": "12117:117:18"
                }
              ]
            },
            "documentation": {
              "id": 2324,
              "nodeType": "StructuredDocumentation",
              "src": "11773:213:18",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 2352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2352,
                  "src": "12011:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12011:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2352,
                  "src": "12023:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12023:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2352,
                  "src": "12040:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12040:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12010:49:18"
            },
            "returnParameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12077:0:18"
            },
            "scope": 2678,
            "src": "11992:250:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2410,
              "nodeType": "Block",
              "src": "12639:343:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2361,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2355,
                          "src": "12658:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12672:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12664:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12664:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12664:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12658:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12676:34:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12650:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12650:61:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2369,
                  "nodeType": "ExpressionStatement",
                  "src": "12650:61:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12730:17:18",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2372,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2357,
                              "src": "12739:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2371,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "12731:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12731:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12749:30:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12722:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12722:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "12722:58:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12822:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12814:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2379,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12814:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12814:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2383,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "12826:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2384,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "12830:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2378,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "12793:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12793:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2386,
                  "nodeType": "ExpressionStatement",
                  "src": "12793:45:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2391,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "12873:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2387,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "12851:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2389,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2388,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2355,
                          "src": "12865:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12851:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4990,
                      "src": "12851:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4970_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12851:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2393,
                  "nodeType": "ExpressionStatement",
                  "src": "12851:30:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2397,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "12911:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2398,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "12920:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2394,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "12894:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4379,
                      "src": "12894:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 2399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12894:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2400,
                  "nodeType": "ExpressionStatement",
                  "src": "12894:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12958:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12950:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12950:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12950:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2406,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "12962:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2407,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "12966:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2401,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3540,
                      "src": "12941:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12941:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "EmitStatement",
                  "src": "12936:38:18"
                }
              ]
            },
            "documentation": {
              "id": 2353,
              "nodeType": "StructuredDocumentation",
              "src": "12250:322:18",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2355,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2411,
                  "src": "12593:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12593:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2411,
                  "src": "12605:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12605:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12592:29:18"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12639:0:18"
            },
            "scope": 2678,
            "src": "12578:404:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2479,
              "nodeType": "Block",
              "src": "13260:496:18",
              "statements": [
                {
                  "assignments": [
                    2418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2418,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2479,
                      "src": "13271:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2417,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13271:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2423,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13302:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2419,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "13287:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "13287:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13287:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13271:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2425,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "13362:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13377:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13369:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13369:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13369:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2430,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13381:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2424,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "13341:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13341:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2432,
                  "nodeType": "ExpressionStatement",
                  "src": "13341:48:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13447:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13439:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13439:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13439:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2438,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13451:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2433,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "13430:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13430:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2440,
                  "nodeType": "ExpressionStatement",
                  "src": "13430:29:18"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2443,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1801,
                              "src": "13518:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2444,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2414,
                              "src": "13529:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13518:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13512:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2441,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "13512:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13512:26:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13512:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13549:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13512:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2456,
                  "nodeType": "IfStatement",
                  "src": "13508:97:18",
                  "trueBody": {
                    "id": 2455,
                    "nodeType": "Block",
                    "src": "13552:53:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "13567:26:18",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2450,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1801,
                              "src": "13574:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2452,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2451,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2414,
                              "src": "13585:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13574:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2454,
                        "nodeType": "ExpressionStatement",
                        "src": "13567:26:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2461,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13645:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2457,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "13617:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2459,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2458,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2418,
                          "src": "13631:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13617:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5010,
                      "src": "13617:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4970_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13617:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2463,
                  "nodeType": "ExpressionStatement",
                  "src": "13617:36:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2467,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13686:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2464,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "13666:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2466,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4399,
                      "src": "13666:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13666:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2469,
                  "nodeType": "ExpressionStatement",
                  "src": "13666:28:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2471,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "13721:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13736:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13728:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13728:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13728:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2476,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "13740:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2470,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3540,
                      "src": "13712:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13712:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2478,
                  "nodeType": "EmitStatement",
                  "src": "13707:41:18"
                }
              ]
            },
            "documentation": {
              "id": 2412,
              "nodeType": "StructuredDocumentation",
              "src": "12990:215:18",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 2480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2414,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2480,
                  "src": "13226:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13226:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13225:17:18"
            },
            "returnParameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13260:0:18"
            },
            "scope": 2678,
            "src": "13211:545:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2551,
              "nodeType": "Block",
              "src": "14172:520:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2493,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2487,
                              "src": "14206:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2491,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2678,
                              "src": "14191:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1883,
                            "src": "14191:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14191:23:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2495,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2483,
                          "src": "14218:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14191:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 2497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14224:43:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 2490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14183:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14183:85:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2499,
                  "nodeType": "ExpressionStatement",
                  "src": "14183:85:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2501,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "14305:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14319:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14311:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14311:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14311:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "14305:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14323:38:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 2500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14297:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14297:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2509,
                  "nodeType": "ExpressionStatement",
                  "src": "14297:65:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2511,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "14396:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2512,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "14402:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2513,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14406:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2510,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "14375:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14375:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2515,
                  "nodeType": "ExpressionStatement",
                  "src": "14375:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14496:1:18",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14488:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14488:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14488:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2521,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14500:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2516,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "14479:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14479:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2523,
                  "nodeType": "ExpressionStatement",
                  "src": "14479:29:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2528,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14548:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2524,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "14521:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2526,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2525,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2483,
                          "src": "14535:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14521:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5010,
                      "src": "14521:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4970_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14521:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "14521:35:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2535,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14589:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2531,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "14567:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$4970_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 2533,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2532,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "14581:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14567:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4970_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2534,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4990,
                      "src": "14567:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4970_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4970_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14567:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "14567:30:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2541,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14627:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2542,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "14636:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2538,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "14610:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$4347_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 2540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4379,
                      "src": "14610:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$4347_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$4347_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 2543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14610:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2544,
                  "nodeType": "ExpressionStatement",
                  "src": "14610:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2546,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "14666:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2547,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "14672:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2548,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "14676:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2545,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3540,
                      "src": "14657:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14657:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2550,
                  "nodeType": "EmitStatement",
                  "src": "14652:32:18"
                }
              ]
            },
            "documentation": {
              "id": 2481,
              "nodeType": "StructuredDocumentation",
              "src": "13764:323:18",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2483,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2552,
                  "src": "14112:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14112:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2552,
                  "src": "14126:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14126:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2552,
                  "src": "14138:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14138:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14111:43:18"
            },
            "returnParameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14172:0:18"
            },
            "scope": 2678,
            "src": "14093:599:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2573,
              "nodeType": "Block",
              "src": "14929:134:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2562,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2555,
                            "src": "14956:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2561,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2266,
                          "src": "14948:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14948:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14966:46:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI set of nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        }
                      ],
                      "id": 2560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14940:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14940:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "14940:73:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2567,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1801,
                        "src": "15024:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 2569,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2568,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2555,
                        "src": "15035:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15024:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2570,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "15046:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "15024:31:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2572,
                  "nodeType": "ExpressionStatement",
                  "src": "15024:31:18"
                }
              ]
            },
            "documentation": {
              "id": 2553,
              "nodeType": "StructuredDocumentation",
              "src": "14700:142:18",
              "text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2574,
                  "src": "14870:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14870:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2574,
                  "src": "14887:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14887:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14869:42:18"
            },
            "returnParameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14929:0:18"
            },
            "scope": 2678,
            "src": "14848:215:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "15355:38:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2580,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1803,
                      "src": "15366:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2581,
                      "name": "baseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "15377:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "15366:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "15366:19:18"
                }
              ]
            },
            "documentation": {
              "id": 2575,
              "nodeType": "StructuredDocumentation",
              "src": "15071:216:18",
              "text": " @dev Internal function to set the base URI for all token IDs. It is\n automatically added as a prefix to the value returned in {tokenURI},\n or to the token ID if {tokenURI} is empty."
            },
            "id": 2585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2577,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2585,
                  "src": "15314:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2576,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15314:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15313:24:18"
            },
            "returnParameters": {
              "id": 2579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15355:0:18"
            },
            "scope": 2678,
            "src": "15293:100:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2642,
              "nodeType": "Block",
              "src": "16090:472:18",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "16105:16:18",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2599,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2590,
                          "src": "16106:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3737,
                        "src": "16106:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 2601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16106:15:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2606,
                  "nodeType": "IfStatement",
                  "src": "16101:60:18",
                  "trueBody": {
                    "id": 2605,
                    "nodeType": "Block",
                    "src": "16123:38:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16145:4:18",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2598,
                        "id": 2604,
                        "nodeType": "Return",
                        "src": "16138:11:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2608,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2642,
                      "src": "16171:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2607,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16171:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2626,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2614,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2590,
                                    "src": "16266:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2613,
                                  "name": "IERC721Receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3717,
                                  "src": "16250:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3717_$",
                                    "typeString": "type(contract IERC721Receiver)"
                                  }
                                },
                                "id": 2615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16250:19:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Receiver_$3717",
                                  "typeString": "contract IERC721Receiver"
                                }
                              },
                              "id": 2616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "onERC721Received",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3716,
                              "src": "16250:36:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                              }
                            },
                            "id": 2617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "16250:45:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2618,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3023,
                              "src": "16310:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16310:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2620,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2588,
                            "src": "16337:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2621,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "16356:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2622,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2594,
                            "src": "16378:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2611,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16213:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "16213:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16213:181:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16396:52:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2590,
                        "src": "16197:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3808,
                      "src": "16197:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16197:252:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16171:278:18"
                },
                {
                  "assignments": [
                    2628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2628,
                      "mutability": "mutable",
                      "name": "retval",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2642,
                      "src": "16460:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2627,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "16460:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2636,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2631,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2608,
                        "src": "16487:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 2633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16500:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 2632,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "16500:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 2634,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16499:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2629,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16476:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16476:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16476:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16460:48:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2637,
                          "name": "retval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "16527:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2638,
                          "name": "_ERC721_RECEIVED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1777,
                          "src": "16537:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "16527:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2640,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "16526:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2598,
                  "id": 2641,
                  "nodeType": "Return",
                  "src": "16519:35:18"
                }
              ]
            },
            "documentation": {
              "id": 2586,
              "nodeType": "StructuredDocumentation",
              "src": "15401:551:18",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2588,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2643,
                  "src": "15990:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15990:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2590,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2643,
                  "src": "16004:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16004:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2643,
                  "src": "16016:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16016:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2643,
                  "src": "16033:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16033:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15989:63:18"
            },
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2597,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2643,
                  "src": "16079:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16079:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16078:6:18"
            },
            "scope": 2678,
            "src": "15958:604:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2665,
              "nodeType": "Block",
              "src": "16625:128:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2650,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1787,
                        "src": "16636:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2651,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2647,
                        "src": "16652:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16636:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2653,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2645,
                      "src": "16663:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16636:29:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2655,
                  "nodeType": "ExpressionStatement",
                  "src": "16636:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2659,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2647,
                            "src": "16705:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2657,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2678,
                            "src": "16690:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2678_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1883,
                          "src": "16690:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16690:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2645,
                        "src": "16715:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2662,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2647,
                        "src": "16719:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2656,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3549,
                      "src": "16681:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16681:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2664,
                  "nodeType": "EmitStatement",
                  "src": "16676:51:18"
                }
              ]
            },
            "documentation": null,
            "id": 2666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2645,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2666,
                  "src": "16588:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16588:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2647,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2666,
                  "src": "16600:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16600:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16587:29:18"
            },
            "returnParameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16625:0:18"
            },
            "scope": 2678,
            "src": "16570:183:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2676,
              "nodeType": "Block",
              "src": "17456:3:18",
              "statements": []
            },
            "documentation": {
              "id": 2667,
              "nodeType": "StructuredDocumentation",
              "src": "16761:599:18",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2677,
                  "src": "17396:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17396:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2677,
                  "src": "17410:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17410:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2677,
                  "src": "17422:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17422:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17395:43:18"
            },
            "returnParameters": {
              "id": 2675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17456:0:18"
            },
            "scope": 2678,
            "src": "17366:93:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2679,
        "src": "591:16871:18"
      }
    ],
    "src": "35:17429:18"
  },
  "bytecode": "",
  "bytecodeSha1": "61899da8f89299ffa7340465483ee85579843a8a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "18": {
        "ERC721._checkOnERC721Received": {
          "103": [
            16106,
            16121,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "99": [
            11075,
            11091,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "102": [
            10239,
            10287,
            true
          ]
        },
        "ERC721._transfer": {
          "100": [
            14191,
            14222,
            true
          ],
          "101": [
            14305,
            14321,
            true
          ]
        },
        "ERC721.approve": {
          "89": [
            7092,
            7103,
            true
          ],
          "90": [
            7162,
            7183,
            true
          ],
          "91": [
            7187,
            7231,
            true
          ]
        },
        "ERC721.balanceOf": {
          "93": [
            4210,
            4229,
            true
          ]
        },
        "ERC721.getApproved": {
          "88": [
            7527,
            7543,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "95": [
            9043,
            9084,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "94": [
            7819,
            7843,
            true
          ]
        },
        "ERC721.tokenURI": {
          "96": [
            5088,
            5104,
            true
          ],
          "97": [
            5331,
            5354,
            false
          ],
          "98": [
            5503,
            5530,
            false
          ]
        },
        "ERC721.transferFrom": {
          "92": [
            8474,
            8515,
            true
          ]
        }
      },
      "19": {},
      "20": {},
      "21": {},
      "22": {},
      "23": {
        "Address._verifyCallResult": {
          "105": [
            7405,
            7412,
            false
          ],
          "106": [
            7550,
            7571,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "104": [
            4973,
            4991,
            true
          ]
        }
      },
      "24": {},
      "26": {
        "EnumerableMap._at": {
          "107": [
            5184,
            5211,
            true
          ]
        },
        "EnumerableMap._get": {
          "108": [
            6746,
            6759,
            true
          ]
        },
        "EnumerableMap._set": {
          "109": [
            2140,
            2153,
            false
          ]
        }
      },
      "27": {
        "EnumerableSet._add": {
          "112": [
            1778,
            1799,
            false
          ]
        },
        "EnumerableSet._at": {
          "110": [
            4676,
            4702,
            true
          ]
        },
        "EnumerableSet._remove": {
          "111": [
            2524,
            2539,
            false
          ]
        }
      },
      "28": {
        "Strings.toString": {
          "113": [
            498,
            508,
            false
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "10": {},
      "18": {
        "ERC721._approve": {
          "29": [
            16636,
            16665
          ],
          "30": [
            16676,
            16727
          ]
        },
        "ERC721._checkOnERC721Received": {
          "64": [
            16138,
            16149
          ],
          "65": [
            16519,
            16554
          ]
        },
        "ERC721._exists": {
          "27": [
            10745,
            10782
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "32": [
            11067,
            11140
          ],
          "33": [
            11201,
            11304
          ]
        },
        "ERC721._safeTransfer": {
          "44": [
            10192,
            10220
          ],
          "45": [
            10231,
            10342
          ]
        },
        "ERC721._transfer": {
          "34": [
            14183,
            14268
          ],
          "35": [
            14297,
            14362
          ],
          "36": [
            14375,
            14414
          ],
          "37": [
            14479,
            14508
          ],
          "38": [
            14521,
            14556
          ],
          "39": [
            14567,
            14597
          ],
          "40": [
            14610,
            14639
          ],
          "41": [
            14652,
            14684
          ]
        },
        "ERC721.approve": {
          "4": [
            7084,
            7141
          ],
          "5": [
            7154,
            7315
          ],
          "6": [
            7328,
            7349
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            4202,
            4276
          ],
          "15": [
            4287,
            4323
          ]
        },
        "ERC721.baseURI": {
          "13": [
            6086,
            6101
          ]
        },
        "ERC721.getApproved": {
          "2": [
            7519,
            7592
          ],
          "3": [
            7605,
            7636
          ]
        },
        "ERC721.isApprovedForAll": {
          "26": [
            8196,
            8238
          ]
        },
        "ERC721.name": {
          "1": [
            4717,
            4729
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            4485,
            4562
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            8793,
            8832
          ],
          "20": [
            9035,
            9138
          ],
          "21": [
            9149,
            9188
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            7811,
            7873
          ],
          "18": [
            7886,
            7939
          ],
          "19": [
            7950,
            8003
          ]
        },
        "ERC721.symbol": {
          "16": [
            4888,
            4902
          ]
        },
        "ERC721.tokenOfOwnerByIndex": {
          "10": [
            6310,
            6347
          ]
        },
        "ERC721.tokenURI": {
          "22": [
            5080,
            5156
          ],
          "23": [
            5371,
            5387
          ],
          "24": [
            5547,
            5595
          ],
          "25": [
            5708,
            5765
          ]
        },
        "ERC721.totalSupply": {
          "7": [
            6606,
            6634
          ]
        },
        "ERC721.transferFrom": {
          "8": [
            8466,
            8569
          ],
          "9": [
            8582,
            8610
          ]
        }
      },
      "19": {},
      "20": {},
      "21": {},
      "22": {},
      "23": {
        "Address._verifyCallResult": {
          "86": [
            7429,
            7446
          ],
          "87": [
            7949,
            7969
          ]
        },
        "Address.functionCall": {
          "83": [
            3797,
            3856
          ]
        },
        "Address.functionCallWithValue": {
          "84": [
            4965,
            5025
          ],
          "85": [
            5184,
            5243
          ]
        },
        "Address.isContract": {
          "82": [
            1150,
            1165
          ]
        }
      },
      "24": {
        "Context._msgSender": {
          "28": [
            694,
            711
          ]
        }
      },
      "26": {
        "EnumerableMap._at": {
          "60": [
            5176,
            5250
          ],
          "61": [
            5318,
            5351
          ]
        },
        "EnumerableMap._contains": {
          "66": [
            4483,
            4512
          ]
        },
        "EnumerableMap._get": {
          "62": [
            6738,
            6774
          ],
          "63": [
            6821,
            6861
          ]
        },
        "EnumerableMap._length": {
          "54": [
            4691,
            4717
          ]
        },
        "EnumerableMap._set": {
          "77": [
            2207,
            2264
          ],
          "78": [
            2402,
            2441
          ],
          "79": [
            2456,
            2467
          ],
          "80": [
            2500,
            2541
          ],
          "81": [
            2556,
            2568
          ]
        },
        "EnumerableMap.contains": {
          "53": [
            7898,
            7940
          ]
        },
        "EnumerableMap.get": {
          "43": [
            9911,
            9989
          ]
        },
        "EnumerableMap.length": {
          "31": [
            8125,
            8151
          ]
        },
        "EnumerableMap.set": {
          "57": [
            7326,
            7397
          ]
        }
      },
      "27": {
        "EnumerableSet._add": {
          "73": [
            1816,
            1839
          ],
          "74": [
            1977,
            2017
          ],
          "75": [
            2032,
            2043
          ],
          "76": [
            2076,
            2088
          ]
        },
        "EnumerableSet._at": {
          "58": [
            4668,
            4741
          ],
          "59": [
            4752,
            4777
          ]
        },
        "EnumerableSet._remove": {
          "67": [
            3363,
            3401
          ],
          "68": [
            3469,
            3512
          ],
          "69": [
            3621,
            3638
          ],
          "70": [
            3709,
            3735
          ],
          "71": [
            3752,
            3763
          ],
          "72": [
            3796,
            3808
          ]
        },
        "EnumerableSet.add": {
          "56": [
            8407,
            8446
          ]
        },
        "EnumerableSet.at": {
          "42": [
            9634,
            9672
          ]
        },
        "EnumerableSet.remove": {
          "55": [
            8717,
            8759
          ]
        }
      },
      "28": {
        "Strings.toString": {
          "46": [
            525,
            535
          ],
          "47": [
            646,
            654
          ],
          "48": [
            669,
            679
          ],
          "49": [
            788,
            800
          ],
          "50": [
            844,
            891
          ],
          "51": [
            906,
            916
          ],
          "52": [
            938,
            959
          ]
        }
      },
      "8": {
        "ERC165.supportsInterface": {
          "0": [
            1101,
            1141
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "EnumerableMap",
    "EnumerableSet",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IERC721Receiver",
    "SafeMath",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610549565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ab565b005b610237610686565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b03813581169160208101359091169060400135610697565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356106ee565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610719565b610237600480360360208110156102f757600080fd5b5035610734565b6101e56004803603602081101561031457600080fd5b503561074a565b610153610772565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166107d3565b61015361083b565b61022d6004803603604081101561036757600080fd5b506001600160a01b038135169060200135151561089c565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109a1945050505050565b6101536004803603602081101561045b57600080fd5b50356109ff565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610c82565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610cb0565b61058f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611888602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105b68261074a565b9050806001600160a01b0316836001600160a01b031614156106095760405162461bcd60e51b815260040180806020018281038252602181526020018061190c6021913960400191505060405180910390fd5b806001600160a01b031661061b610cbd565b6001600160a01b0316148061063c575061063c81610637610cbd565b610c82565b6106775760405162461bcd60e51b81526004018080602001828103825260388152602001806117db6038913960400191505060405180910390fd5b6106818383610cc1565b505050565b60006106926002610d2f565b905090565b6106a86106a2610cbd565b82610d3a565b6106e35760405162461bcd60e51b815260040180806020018281038252603181526020018061192d6031913960400191505060405180910390fd5b610681838383610dde565b6001600160a01b03821660009081526001602052604081206107109083610f2a565b90505b92915050565b610681838383604051806020016040528060008152506109a1565b600080610742600284610f36565b509392505050565b60006107138260405180606001604052806029815260200161183d6029913960029190610f52565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b03821661081a5760405162461bcd60e51b815260040180806020018281038252602a815260200180611813602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061071390610d2f565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6108a4610cbd565b6001600160a01b0316826001600160a01b0316141561090a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610917610cbd565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561095b610cbd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109b26109ac610cbd565b83610d3a565b6109ed5760405162461bcd60e51b815260040180806020018281038252603181526020018061192d6031913960400191505060405180910390fd5b6109f984848484610f69565b50505050565b6060610a0a82610cb0565b610a455760405162461bcd60e51b815260040180806020018281038252602f8152602001806118dd602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505050505090506060610aeb610772565b9050805160001415610aff575090506104ae565b815115610bc05780826040516020018083805190602001908083835b60208310610b3a5780518252601f199092019160209182019101610b1b565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610b825780518252601f199092019160209182019101610b63565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050506104ae565b80610bca85610fbb565b6040516020018083805190602001908083835b60208310610bfc5780518252601f199092019160209182019101610bdd565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610c445780518252601f199092019160209182019101610c25565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610713600283611096565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cf68261074a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610713826110a2565b6000610d4582610cb0565b610d805760405162461bcd60e51b815260040180806020018281038252602c8152602001806117af602c913960400191505060405180910390fd5b6000610d8b8361074a565b9050806001600160a01b0316846001600160a01b03161480610dc65750836001600160a01b0316610dbb84610549565b6001600160a01b0316145b80610dd65750610dd68185610c82565b949350505050565b826001600160a01b0316610df18261074a565b6001600160a01b031614610e365760405162461bcd60e51b81526004018080602001828103825260298152602001806118b46029913960400191505060405180910390fd5b6001600160a01b038216610e7b5760405162461bcd60e51b815260040180806020018281038252602481526020018061178b6024913960400191505060405180910390fd5b610e86838383610681565b610e91600082610cc1565b6001600160a01b0383166000908152600160205260409020610eb390826110a6565b506001600160a01b0382166000908152600160205260409020610ed690826110b2565b50610ee3600282846110be565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061071083836110d4565b6000808080610f458686611138565b9097909650945050505050565b6000610f5f8484846111b3565b90505b9392505050565b610f74848484610dde565b610f808484848461127d565b6109f95760405162461bcd60e51b81526004018080602001828103825260328152602001806117596032913960400191505060405180910390fd5b606081610fe057506040805180820190915260018152600360fc1b60208201526104ae565b8160005b8115610ff857600101600a82049150610fe4565b60608167ffffffffffffffff8111801561101157600080fd5b506040519080825280601f01601f19166020018201604052801561103c576020820181803683370190505b50859350905060001982015b831561108d57600a840660300160f81b8282806001900393508151811061106b57fe5b60200101906001600160f81b031916908160001a905350600a84049350611048565b50949350505050565b600061071083836113e5565b5490565b600061071083836113fd565b600061071083836114c3565b6000610f5f84846001600160a01b03851661150d565b815460009082106111165760405162461bcd60e51b81526004018080602001828103825260228152602001806117376022913960400191505060405180910390fd5b82600001828154811061112557fe5b9060005260206000200154905092915050565b81546000908190831061117c5760405162461bcd60e51b81526004018080602001828103825260228152602001806118666022913960400191505060405180910390fd5b600084600001848154811061118d57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000828152600184016020526040812054828161124e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112135781810151838201526020016111fb565b50505050905090810190601f1680156112405780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061126157fe5b9060005260206000209060020201600101549150509392505050565b6000611291846001600160a01b03166115a4565b61129d57506001610dd6565b60606113ab630a85bd0160e11b6112b2610cbd565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611319578181015183820152602001611301565b50505050905090810190601f1680156113465780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611759603291396001600160a01b03881691906115aa565b905060008180602001905160208110156113c457600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156114b9578354600019808301919081019060009087908390811061143057fe5b906000526020600020015490508087600001848154811061144d57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061147d57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610713565b6000915050610713565b60006114cf83836113e5565b61150557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610713565b506000610713565b600082815260018401602052604081205480611572575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f62565b8285600001600183038154811061158557fe5b9060005260206000209060020201600101819055506000915050610f62565b3b151590565b6060610f5f8484600085856115be856115a4565b61160f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061164e5780518252601f19909201916020918201910161162f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146116b0576040519150601f19603f3d011682016040523d82523d6000602084013e6116b5565b606091505b50915091506116c58282866116d0565b979650505050505050565b606083156116df575081610f62565b8251156116ef5782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156112135781810151838201526020016111fb56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212201d83c6658e83300f90b6334a81ebe626e27cec930a06a60e48d3442f132f568264736f6c634300060c0033",
  "deployedSourceMap": "591:16871:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:150:8;;;;;;;;;;;;;;;;-1:-1:-1;999:150:8;-1:-1:-1;;;;;;999:150:8;;:::i;:::-;;;;;;;;;;;;;;;;;;4637:100:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7423:221;;;;;;;;;;;;;;;;-1:-1:-1;7423:221:18;;:::i;:::-;;;;-1:-1:-1;;;;;7423:221:18;;;;;;;;;;;;;;6953:404;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6953:404:18;;;;;;;;:::i;:::-;;6431:211;;;:::i;:::-;;;;;;;;;;;;;;;;8313:305;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8313:305:18;;;;;;;;;;;;;;;;;:::i;6193:162::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6193:162:18;;;;;;;;:::i;8689:151::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8689:151:18;;;;;;;;;;;;;;;;;:::i;6719:172::-;;;;;;;;;;;;;;;;-1:-1:-1;6719:172:18;;:::i;4393:177::-;;;;;;;;;;;;;;;;-1:-1:-1;4393:177:18;;:::i;6012:97::-;;;:::i;4110:221::-;;;;;;;;;;;;;;;;-1:-1:-1;4110:221:18;-1:-1:-1;;;;;4110:221:18;;:::i;4806:104::-;;;:::i;7716:295::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7716:295:18;;;;;;;;;;:::i;8911:285::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8911:285:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8911:285:18;;-1:-1:-1;8911:285:18;;-1:-1:-1;;;;;8911:285:18:i;4981:792::-;;;;;;;;;;;;;;;;-1:-1:-1;4981:792:18;;:::i;8082:164::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8082:164:18;;;;;;;;;;:::i;999:150:8:-;-1:-1:-1;;;;;;1108:33:8;;1084:4;1108:33;;;;;;;;;;;;;999:150;;;;:::o;4637:100:18:-;4724:5;4717:12;;;;;;;;-1:-1:-1;;4717:12:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4691:13;;4717:12;;4724:5;;4717:12;;4724:5;4717:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4637:100;:::o;7423:221::-;7499:7;7527:16;7535:7;7527;:16::i;:::-;7519:73;;;;-1:-1:-1;;;7519:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7612:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;7612:24:18;;7423:221::o;6953:404::-;7034:13;7050:23;7065:7;7050:14;:23::i;:::-;7034:39;;7098:5;-1:-1:-1;;;;;7092:11:18;:2;-1:-1:-1;;;;;7092:11:18;;;7084:57;;;;-1:-1:-1;;;7084:57:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7178:5;-1:-1:-1;;;;;7162:21:18;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7162:21:18;;:69;;;;7187:44;7211:5;7218:12;:10;:12::i;:::-;7187:23;:44::i;:::-;7154:161;;;;-1:-1:-1;;;7154:161:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7328:21;7337:2;7341:7;7328:8;:21::i;:::-;6953:404;;;:::o;6431:211::-;6492:7;6613:21;:12;:19;:21::i;:::-;6606:28;;6431:211;:::o;8313:305::-;8474:41;8493:12;:10;:12::i;:::-;8507:7;8474:18;:41::i;:::-;8466:103;;;;-1:-1:-1;;;8466:103:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8582:28;8592:4;8598:2;8602:7;8582:9;:28::i;6193:162::-;-1:-1:-1;;;;;6317:20:18;;6290:7;6317:20;;;:13;:20;;;;;:30;;6341:5;6317:23;:30::i;:::-;6310:37;;6193:162;;;;;:::o;8689:151::-;8793:39;8810:4;8816:2;8820:7;8793:39;;;;;;;;;;;;:16;:39::i;6719:172::-;6794:7;;6836:22;:12;6852:5;6836:15;:22::i;:::-;-1:-1:-1;6814:44:18;6719:172;-1:-1:-1;;;6719:172:18:o;4393:177::-;4465:7;4492:70;4509:7;4492:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;6012:97::-;6093:8;6086:15;;;;;;;;-1:-1:-1;;6086:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6060:13;;6086:15;;6093:8;;6086:15;;6093:8;6086:15;;;;;;;;;;;;;;;;;;;;;;;;4110:221;4182:7;-1:-1:-1;;;;;4210:19:18;;4202:74;;;;-1:-1:-1;;;4202:74:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4294:20:18;;;;;;:13;:20;;;;;:29;;:27;:29::i;4806:104::-;4895:7;4888:14;;;;;;;;-1:-1:-1;;4888:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4862:13;;4888:14;;4895:7;;4888:14;;4895:7;4888:14;;;;;;;;;;;;;;;;;;;;;;;;7716:295;7831:12;:10;:12::i;:::-;-1:-1:-1;;;;;7819:24:18;:8;-1:-1:-1;;;;;7819:24:18;;;7811:62;;;;;-1:-1:-1;;;7811:62:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;7931:8;7886:18;:32;7905:12;:10;:12::i;:::-;-1:-1:-1;;;;;7886:32:18;;;;;;;;;;;;;;;;;-1:-1:-1;7886:32:18;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7886:53:18;;;;;;;;;;;7970:12;:10;:12::i;:::-;-1:-1:-1;;;;;7955:48:18;;7994:8;7955:48;;;;;;;;;;;;;;;;;;;;7716:295;;:::o;8911:285::-;9043:41;9062:12;:10;:12::i;:::-;9076:7;9043:18;:41::i;:::-;9035:103;;;;-1:-1:-1;;;9035:103:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9149:39;9163:4;9169:2;9173:7;9182:5;9149:13;:39::i;:::-;8911:285;;;;:::o;4981:792::-;5054:13;5088:16;5096:7;5088;:16::i;:::-;5080:76;;;;-1:-1:-1;;;5080:76:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5195:19;;;;:10;:19;;;;;;;;;5169:45;;;;;;-1:-1:-1;;5169:45:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5195:19;5169:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5225:18;5246:9;:7;:9::i;:::-;5225:30;;5337:4;5331:18;5353:1;5331:23;5327:72;;;-1:-1:-1;5378:9:18;-1:-1:-1;5371:16:18;;5327:72;5503:23;;:27;5499:108;;5578:4;5584:9;5561:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5561:33:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5561:33:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5561:33:18;;;;;;;;;;;;;-1:-1:-1;;5561:33:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5547:48;;;;;;5499:108;5739:4;5745:18;:7;:16;:18::i;:::-;5722:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5722:42:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5722:42:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5722:42:18;;;;;;;;;;;;;-1:-1:-1;;5722:42:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5708:57;;;;4981:792;;;:::o;8082:164::-;-1:-1:-1;;;;;8203:25:18;;;8179:4;8203:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8082:164::o;10663:127::-;10728:4;10752:30;:12;10774:7;10752:21;:30::i;613:106:24:-;701:10;613:106;:::o;16570:183:18:-;16636:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;16636:29:18;-1:-1:-1;;;;;16636:29:18;;;;;;;;:24;;16690:23;16636:24;16690:14;:23::i;:::-;-1:-1:-1;;;;;16681:46:18;;;;;;;;;;;16570:183;;:::o;8036:123:26:-;8105:7;8132:19;8140:3;8132:7;:19::i;10957:355:18:-;11050:4;11075:16;11083:7;11075;:16::i;:::-;11067:73;;;;-1:-1:-1;;;11067:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11151:13;11167:23;11182:7;11167:14;:23::i;:::-;11151:39;;11220:5;-1:-1:-1;;;;;11209:16:18;:7;-1:-1:-1;;;;;11209:16:18;;:51;;;;11253:7;-1:-1:-1;;;;;11229:31:18;:20;11241:7;11229:11;:20::i;:::-;-1:-1:-1;;;;;11229:31:18;;11209:51;:94;;;;11264:39;11288:5;11295:7;11264:23;:39::i;:::-;11201:103;10957:355;-1:-1:-1;;;;10957:355:18:o;14093:599::-;14218:4;-1:-1:-1;;;;;14191:31:18;:23;14206:7;14191:14;:23::i;:::-;-1:-1:-1;;;;;14191:31:18;;14183:85;;;;-1:-1:-1;;;14183:85:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14305:16:18;;14297:65;;;;-1:-1:-1;;;14297:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14375:39;14396:4;14402:2;14406:7;14375:20;:39::i;:::-;14479:29;14496:1;14500:7;14479:8;:29::i;:::-;-1:-1:-1;;;;;14521:19:18;;;;;;:13;:19;;;;;:35;;14548:7;14521:26;:35::i;:::-;-1:-1:-1;;;;;;14567:17:18;;;;;;:13;:17;;;;;:30;;14589:7;14567:21;:30::i;:::-;-1:-1:-1;14610:29:18;:12;14627:7;14636:2;14610:16;:29::i;:::-;;14676:7;14672:2;-1:-1:-1;;;;;14657:27:18;14666:4;-1:-1:-1;;;;;14657:27:18;;;;;;;;;;;14093:599;;;:::o;9543:137:27:-;9614:7;9649:22;9653:3;9665:5;9649:3;:22::i;8498:236:26:-;8578:7;;;;8638:22;8642:3;8654:5;8638:3;:22::i;:::-;8607:53;;;;-1:-1:-1;8498:236:26;-1:-1:-1;;;;;8498:236:26:o;9784:213::-;9891:7;9942:44;9947:3;9967;9973:12;9942:4;:44::i;:::-;9934:53;-1:-1:-1;9784:213:26;;;;;;:::o;10078:272:18:-;10192:28;10202:4;10208:2;10212:7;10192:9;:28::i;:::-;10239:48;10262:4;10268:2;10272:7;10281:5;10239:22;:48::i;:::-;10231:111;;;;-1:-1:-1;;;10231:111:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:746:28;277:13;498:10;494:53;;-1:-1:-1;525:10:28;;;;;;;;;;;;-1:-1:-1;;;525:10:28;;;;;;494:53;572:5;557:12;613:78;620:9;;613:78;;646:8;;677:2;669:10;;;;613:78;;;701:19;733:6;723:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;723:17:28;-1:-1:-1;795:5:28;;-1:-1:-1;701:39:28;-1:-1:-1;;;767:10:28;;811:117;818:9;;811:117;;887:2;880:4;:9;875:2;:14;862:29;;844:6;851:7;;;;;;;844:15;;;;;;;;;;;:47;-1:-1:-1;;;;;844:47:28;;;;;;;;-1:-1:-1;914:2:28;906:10;;;;811:117;;;-1:-1:-1;952:6:28;221:746;-1:-1:-1;;;;221:746:28:o;7797:151:26:-;7881:4;7905:35;7915:3;7935;7905:9;:35::i;4615:110::-;4698:19;;4615:110::o;8630:137:27:-;8700:4;8724:35;8732:3;8752:5;8724:7;:35::i;8323:131::-;8390:4;8414:32;8419:3;8439:5;8414:4;:32::i;7220:185:26:-;7309:4;7333:64;7338:3;7358;-1:-1:-1;;;;;7372:23:26;;7333:4;:64::i;4581:204:27:-;4676:18;;4648:7;;4676:26;-1:-1:-1;4668:73:27;;;;-1:-1:-1;;;4668:73:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4759:3;:11;;4771:5;4759:18;;;;;;;;;;;;;;;;4752:25;;4581:204;;;;:::o;5080:279:26:-;5184:19;;5147:7;;;;5184:27;-1:-1:-1;5176:74:26;;;;-1:-1:-1;;;5176:74:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5263:22;5288:3;:12;;5301:5;5288:19;;;;;;;;;;;;;;;;;;5263:44;;5326:5;:10;;;5338:5;:12;;;5318:33;;;;;5080:279;;;;;:::o;6577:319::-;6671:7;6710:17;;;:12;;;:17;;;;;;6761:12;6746:13;6738:36;;;;-1:-1:-1;;;6738:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6828:3;:12;;6852:1;6841:8;:12;6828:26;;;;;;;;;;;;;;;;;;:33;;;6821:40;;;6577:319;;;;;:::o;15958:604:18:-;16079:4;16106:15;:2;-1:-1:-1;;;;;16106:13:18;;:15::i;:::-;16101:60;;-1:-1:-1;16145:4:18;16138:11;;16101:60;16171:23;16197:252;-1:-1:-1;;;16310:12:18;:10;:12::i;:::-;16337:4;16356:7;16378:5;16213:181;;;;;;-1:-1:-1;;;;;16213:181:18;;;;;;-1:-1:-1;;;;;16213:181:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16213:181:18;;;;;;;-1:-1:-1;;;;;16213:181:18;;;;;;;;;;;16197:252;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16197:15:18;;;:252;:15;:252::i;:::-;16171:278;;16460:13;16487:10;16476:32;;;;;;;;;;;;;;;-1:-1:-1;16476:32:18;-1:-1:-1;;;;;;16527:26:18;-1:-1:-1;;;16527:26:18;;-1:-1:-1;;;15958:604:18;;;;;;:::o;4395:125:26:-;4466:4;4490:17;;;:12;;;;;:17;;;;;;:22;;;4395:125::o;2283:1544:27:-;2349:4;2488:19;;;:12;;;:19;;;;;;2524:15;;2520:1300;;2959:18;;-1:-1:-1;;2910:14:27;;;;2959:22;;;;2886:21;;2959:3;;:22;;3246;;;;;;;;;;;;;;3226:42;;3392:9;3363:3;:11;;3375:13;3363:26;;;;;;;;;;;;;;;;;;;:38;;;;3469:23;;;3511:1;3469:12;;;:23;;;;;;3495:17;;;3469:43;;3621:17;;3469:3;;3621:17;;;;;;;;;;;;;;;;;;;;;;3716:3;:12;;:19;3729:5;3716:19;;;;;;;;;;;3709:26;;;3759:4;3752:11;;;;;;;;2520:1300;3803:5;3796:12;;;;;1693:414;1756:4;1778:21;1788:3;1793:5;1778:9;:21::i;:::-;1773:327;;-1:-1:-1;1816:23:27;;;;;;;;:11;:23;;;;;;;;;;;;;1999:18;;1977:19;;;:12;;;:19;;;;;;:40;;;;2032:11;;1773:327;-1:-1:-1;2083:5:27;2076:12;;1895:692:26;1971:4;2106:17;;;:12;;;:17;;;;;;2140:13;2136:444;;-1:-1:-1;;2225:38:26;;;;;;;;;;;;;;;;;;2207:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2422:19;;2402:17;;;:12;;;:17;;;;;;;:39;2456:11;;2136:444;2536:5;2500:3;:12;;2524:1;2513:8;:12;2500:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2563:5;2556:12;;;;;751:422:23;1118:20;1157:8;;;751:422::o;3669:195::-;3772:12;3804:52;3826:6;3834:4;3840:1;3843:12;3772;4973:18;4984:6;4973:10;:18::i;:::-;4965:60;;;;;-1:-1:-1;;;4965:60:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;5099:12;5113:23;5140:6;-1:-1:-1;;;;;5140:11:23;5160:5;5168:4;5140:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5140:33:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5098:75;;;;5191:52;5209:7;5218:10;5230:12;5191:17;:52::i;:::-;5184:59;4721:530;-1:-1:-1;;;;;;;4721:530:23:o;7261:742::-;7376:12;7405:7;7401:595;;;-1:-1:-1;7436:10:23;7429:17;;7401:595;7550:17;;:21;7546:439;;7813:10;7807:17;7874:15;7861:10;7857:2;7853:19;7846:44;7761:148;7949:20;;-1:-1:-1;;;7949:20:23;;;;;;;;;;;;;;;;;7956:12;;7949:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "title": "ERC721 Non-Fungible Token Standard basic implementation",
    "version": 1
  },
  "offset": [
    591,
    17462
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x462 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2AB JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x74A JUMP JUMPDEST PUSH2 0x153 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x89C JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9A1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x522 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP3 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1888 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x190C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63C DUP2 PUSH2 0x637 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 PUSH2 0xCC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x692 PUSH1 0x2 PUSH2 0xD2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x6A2 PUSH2 0xCBD JUMP JUMPDEST DUP3 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192D PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x710 SWAP1 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x742 PUSH1 0x2 DUP5 PUSH2 0xF36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183D PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1813 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x713 SWAP1 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x8A4 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x95B PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x9AC PUSH2 0xCBD JUMP JUMPDEST DUP4 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192D PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF69 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A DUP3 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18DD PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xADA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x60 PUSH2 0xAEB PUSH2 0x772 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xAFF JUMPI POP SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xBC0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB3A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB1B JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB82 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x4AE JUMP JUMPDEST DUP1 PUSH2 0xBCA DUP6 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xBFC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xBDD JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC44 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 PUSH1 0x2 DUP4 PUSH2 0x1096 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xCF6 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 DUP3 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AF PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD8B DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDC6 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDBB DUP5 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xDD6 JUMPI POP PUSH2 0xDD6 DUP2 DUP6 PUSH2 0xC82 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF1 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B4 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x178B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE86 DUP4 DUP4 DUP4 PUSH2 0x681 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x0 DUP3 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xEB3 SWAP1 DUP3 PUSH2 0x10A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xED6 SWAP1 DUP3 PUSH2 0x10B2 JUMP JUMPDEST POP PUSH2 0xEE3 PUSH1 0x2 DUP3 DUP5 PUSH2 0x10BE JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF45 DUP7 DUP7 PUSH2 0x1138 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP5 DUP5 DUP5 PUSH2 0x11B3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF80 DUP5 DUP5 DUP5 DUP5 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1759 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xFE0 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4AE JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x103C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x108D JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x106B JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x1048 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x13E5 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x150D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1737 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1125 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1866 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x118D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x124E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1213 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11FB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1240 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH1 0x0 ADD PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1261 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1291 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x129D JUMPI POP PUSH1 0x1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13AB PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x12B2 PUSH2 0xCBD JUMP JUMPDEST DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1319 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1301 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1346 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1759 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x14B9 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1430 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x144D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x147D JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP4 DUP4 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x1505 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1572 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xF62 JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1585 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xF62 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF5F DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x15BE DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x160F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x164E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x162F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16C5 DUP3 DUP3 DUP7 PUSH2 0x16D0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16DF JUMPI POP DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x16EF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1213 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11FB JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734552433732313A20747261 PUSH15 0x7366657220746F206E6F6E20455243 CALLDATACOPY ORIGIN BALANCE MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x6573734552433732313A206F776E6572207175 PUSH6 0x727920666F72 KECCAK256 PUSH15 0x6F6E6578697374656E7420746F6B65 PUSH15 0x456E756D657261626C654D61703A20 PUSH10 0x6E646578206F7574206F PUSH7 0x20626F756E6473 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E4552433732313A207472616E73 PUSH7 0x6572206F662074 PUSH16 0x6B656E2074686174206973206E6F7420 PUSH16 0x776E4552433732314D65746164617461 GASPRICE KECCAK256 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E4552433732313A20 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0xA264697066 PUSH20 0x582212201D83C6658E83300F90B6334A81EBE626 0xE2 PUSH29 0xEC930A06A60E48D3442F132F568264736F6C634300060C003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F6CCCE7"
    },
    "38": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x349"
    },
    "64": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x351"
    },
    "75": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB88D4FDE"
    },
    "82": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37F"
    },
    "86": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87B56DD"
    },
    "93": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x445"
    },
    "97": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x462"
    },
    "108": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMP",
      "path": "18"
    },
    "113": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "114": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "115": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F6CCCE7"
    },
    "120": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "121": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E1"
    },
    "124": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6352211E"
    },
    "131": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2FE"
    },
    "135": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C0360EB"
    },
    "142": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31B"
    },
    "146": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "153": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x323"
    },
    "157": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMP",
      "path": "18"
    },
    "162": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "163": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "164": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "GT",
      "path": "18"
    },
    "170": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22F"
    },
    "184": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x249"
    },
    "195": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2F745C59"
    },
    "202": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27F"
    },
    "206": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42842E0E"
    },
    "213": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AB"
    },
    "217": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMP",
      "path": "18"
    },
    "222": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "223": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "224": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "229": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "235": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "240": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14B"
    },
    "244": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81812FC"
    },
    "251": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C8"
    },
    "255": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x201"
    },
    "266": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "DUP1",
      "path": "18"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        591,
        17462
      ],
      "op": "REVERT",
      "path": "18"
    },
    "272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x137"
    },
    "276": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "278": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "279": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "280": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SUB",
      "path": "8"
    },
    "281": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "283": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP2",
      "path": "8"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "LT",
      "path": "8"
    },
    "285": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "286": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x126"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "REVERT",
      "path": "8"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "op": "NOT"
    },
    "306": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "AND",
      "path": "8"
    },
    "307": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x490"
    },
    "310": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        999,
        1149
      ],
      "op": "JUMP",
      "path": "8"
    },
    "311": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "312": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "314": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "315": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "316": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "317": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "318": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "319": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP3",
      "path": "8"
    },
    "320": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "321": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "322": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "323": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "DUP2",
      "path": "8"
    },
    "324": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "325": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SUB",
      "path": "8"
    },
    "326": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "328": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "ADD",
      "path": "8"
    },
    "329": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "330": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "RETURN",
      "path": "8"
    },
    "331": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "332": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x153"
    },
    "335": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4B3"
    },
    "338": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "339": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "340": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "342": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "343": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "344": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "346": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "347": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "348": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "349": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "350": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "351": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "352": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "353": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "354": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "355": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "356": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "357": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "358": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "359": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "360": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "361": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "362": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "363": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "364": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "365": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP6",
      "path": "18"
    },
    "366": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "367": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "368": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "369": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "370": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "371": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "373": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "374": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "375": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "376": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "LT",
      "path": "18"
    },
    "377": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "378": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18D"
    },
    "381": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "382": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "383": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "384": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "385": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "386": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "387": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "388": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "389": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "390": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "392": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "393": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x175"
    },
    "396": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "397": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "398": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "399": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "400": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "401": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "402": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "403": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "404": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "405": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "406": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "407": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "408": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "410": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "AND",
      "path": "18"
    },
    "411": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "412": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "413": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BA"
    },
    "416": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "417": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "418": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP3",
      "path": "18"
    },
    "419": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SUB",
      "path": "18"
    },
    "420": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "421": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "422": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "424": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP4",
      "path": "18"
    },
    "425": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SUB",
      "path": "18"
    },
    "428": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "431": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "EXP",
      "path": "18"
    },
    "432": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SUB",
      "path": "18"
    },
    "433": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "NOT",
      "path": "18"
    },
    "434": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "AND",
      "path": "18"
    },
    "435": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "436": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "437": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "439": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "ADD",
      "path": "18"
    },
    "440": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "441": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "442": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "443": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "444": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "445": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "446": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "447": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "POP",
      "path": "18"
    },
    "448": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "451": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "DUP1",
      "path": "18"
    },
    "452": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "453": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SUB",
      "path": "18"
    },
    "454": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "455": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "RETURN",
      "path": "18"
    },
    "456": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "457": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E5"
    },
    "460": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "462": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP1",
      "path": "18"
    },
    "463": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "464": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SUB",
      "path": "18"
    },
    "465": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "467": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP2",
      "path": "18"
    },
    "468": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "LT",
      "path": "18"
    },
    "469": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "470": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DE"
    },
    "473": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "474": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP1",
      "path": "18"
    },
    "477": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "REVERT",
      "path": "18"
    },
    "478": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "481": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x549"
    },
    "484": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMP",
      "path": "18"
    },
    "485": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "486": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP1",
      "path": "18"
    },
    "489": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "499": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "500": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "AND",
      "path": "18"
    },
    "501": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP3",
      "path": "18"
    },
    "502": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "503": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "504": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "505": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "DUP2",
      "path": "18"
    },
    "506": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "507": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SUB",
      "path": "18"
    },
    "508": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "ADD",
      "path": "18"
    },
    "511": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "512": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "RETURN",
      "path": "18"
    },
    "513": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "514": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D"
    },
    "517": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "519": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "DUP1",
      "path": "18"
    },
    "520": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "521": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "SUB",
      "path": "18"
    },
    "522": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "524": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "DUP2",
      "path": "18"
    },
    "525": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "LT",
      "path": "18"
    },
    "526": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "527": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x217"
    },
    "530": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "531": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "533": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "DUP1",
      "path": "18"
    },
    "534": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "REVERT",
      "path": "18"
    },
    "535": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "DUP2",
      "path": "18"
    },
    "546": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "547": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "AND",
      "path": "18"
    },
    "548": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "549": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "ADD",
      "path": "18"
    },
    "552": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "553": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AB"
    },
    "556": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "557": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "558": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "STOP",
      "path": "18"
    },
    "559": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "560": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237"
    },
    "563": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x686"
    },
    "566": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6431,
        6642
      ],
      "op": "JUMP",
      "path": "18"
    },
    "567": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "568": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "570": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "DUP1",
      "path": "18"
    },
    "571": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "572": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "573": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "DUP3",
      "path": "18"
    },
    "574": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "575": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "576": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "577": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "DUP2",
      "path": "18"
    },
    "578": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "579": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SUB",
      "path": "18"
    },
    "580": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "582": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "ADD",
      "path": "18"
    },
    "583": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "584": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "RETURN",
      "path": "18"
    },
    "585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "586": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D"
    },
    "589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP1",
      "path": "18"
    },
    "592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "SUB",
      "path": "18"
    },
    "594": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP2",
      "path": "18"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "LT",
      "path": "18"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25F"
    },
    "602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP1",
      "path": "18"
    },
    "606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "REVERT",
      "path": "18"
    },
    "607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP2",
      "path": "18"
    },
    "618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP2",
      "path": "18"
    },
    "620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "AND",
      "path": "18"
    },
    "621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "DUP2",
      "path": "18"
    },
    "625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "ADD",
      "path": "18"
    },
    "626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "AND",
      "path": "18"
    },
    "630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "ADD",
      "path": "18"
    },
    "634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x697"
    },
    "638": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8313,
        8618
      ],
      "op": "JUMP",
      "path": "18"
    },
    "639": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "640": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237"
    },
    "643": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "645": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "DUP1",
      "path": "18"
    },
    "646": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "647": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "SUB",
      "path": "18"
    },
    "648": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "DUP2",
      "path": "18"
    },
    "651": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "LT",
      "path": "18"
    },
    "652": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "653": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x295"
    },
    "656": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "657": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "DUP1",
      "path": "18"
    },
    "660": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "REVERT",
      "path": "18"
    },
    "661": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "DUP2",
      "path": "18"
    },
    "672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "673": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "AND",
      "path": "18"
    },
    "674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "675": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "ADD",
      "path": "18"
    },
    "678": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6EE"
    },
    "682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMP",
      "path": "18"
    },
    "683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D"
    },
    "687": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP1",
      "path": "18"
    },
    "690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "SUB",
      "path": "18"
    },
    "692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "LT",
      "path": "18"
    },
    "696": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP1",
      "path": "18"
    },
    "704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "REVERT",
      "path": "18"
    },
    "705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "AND",
      "path": "18"
    },
    "719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "ADD",
      "path": "18"
    },
    "724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "AND",
      "path": "18"
    },
    "728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "ADD",
      "path": "18"
    },
    "732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x719"
    },
    "736": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8689,
        8840
      ],
      "op": "JUMP",
      "path": "18"
    },
    "737": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "738": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237"
    },
    "741": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "DUP1",
      "path": "18"
    },
    "744": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "745": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "SUB",
      "path": "18"
    },
    "746": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "DUP2",
      "path": "18"
    },
    "749": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "LT",
      "path": "18"
    },
    "750": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "751": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "755": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "757": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "DUP1",
      "path": "18"
    },
    "758": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "REVERT",
      "path": "18"
    },
    "759": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "762": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x734"
    },
    "765": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E5"
    },
    "770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "772": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "SUB",
      "path": "18"
    },
    "775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "LT",
      "path": "18"
    },
    "779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x314"
    },
    "783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "REVERT",
      "path": "18"
    },
    "788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "791": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "794": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4393,
        4570
      ],
      "op": "JUMP",
      "path": "18"
    },
    "795": {
      "fn": "ERC721.baseURI",
      "offset": [
        6012,
        6109
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "796": {
      "fn": "ERC721.baseURI",
      "offset": [
        6012,
        6109
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x153"
    },
    "799": {
      "fn": "ERC721.baseURI",
      "offset": [
        6012,
        6109
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x772"
    },
    "802": {
      "fn": "ERC721.baseURI",
      "jump": "i",
      "offset": [
        6012,
        6109
      ],
      "op": "JUMP",
      "path": "18"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "804": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237"
    },
    "807": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "DUP1",
      "path": "18"
    },
    "810": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "SUB",
      "path": "18"
    },
    "812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "DUP2",
      "path": "18"
    },
    "815": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "LT",
      "path": "18"
    },
    "816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "817": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x339"
    },
    "820": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "821": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "823": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "DUP1",
      "path": "18"
    },
    "824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "REVERT",
      "path": "18"
    },
    "825": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "AND",
      "path": "18"
    },
    "837": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7D3"
    },
    "840": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4110,
        4331
      ],
      "op": "JUMP",
      "path": "18"
    },
    "841": {
      "fn": "ERC721.symbol",
      "offset": [
        4806,
        4910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "842": {
      "fn": "ERC721.symbol",
      "offset": [
        4806,
        4910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x153"
    },
    "845": {
      "fn": "ERC721.symbol",
      "offset": [
        4806,
        4910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x83B"
    },
    "848": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        4806,
        4910
      ],
      "op": "JUMP",
      "path": "18"
    },
    "849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "850": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D"
    },
    "853": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "DUP1",
      "path": "18"
    },
    "856": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "857": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "SUB",
      "path": "18"
    },
    "858": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "DUP2",
      "path": "18"
    },
    "861": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "LT",
      "path": "18"
    },
    "862": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "863": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x367"
    },
    "866": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "867": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "DUP1",
      "path": "18"
    },
    "870": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "REVERT",
      "path": "18"
    },
    "871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "DUP2",
      "path": "18"
    },
    "882": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "883": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "AND",
      "path": "18"
    },
    "884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "885": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "ADD",
      "path": "18"
    },
    "888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "890": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "891": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x89C"
    },
    "894": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMP",
      "path": "18"
    },
    "895": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "896": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D"
    },
    "899": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "901": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "902": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SUB",
      "path": "18"
    },
    "904": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "906": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "907": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "LT",
      "path": "18"
    },
    "908": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "909": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x395"
    },
    "912": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "913": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "915": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "916": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "REVERT",
      "path": "18"
    },
    "917": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "927": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "928": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "929": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "AND",
      "path": "18"
    },
    "930": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "931": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "934": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "AND",
      "path": "18"
    },
    "939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "940": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "949": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "954": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "959": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "GT",
      "path": "18"
    },
    "967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "968": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D0"
    },
    "971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "REVERT",
      "path": "18"
    },
    "976": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "977": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "978": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "979": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "980": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "983": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "GT",
      "path": "18"
    },
    "985": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "986": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E2"
    },
    "989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "990": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "REVERT",
      "path": "18"
    },
    "994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "998": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MUL",
      "path": "18"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "GT",
      "path": "18"
    },
    "1010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "GT",
      "path": "18"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "OR",
      "path": "18"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x404"
    },
    "1023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1040": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DIV",
      "path": "18"
    },
    "1041": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MUL",
      "path": "18"
    },
    "1042": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1045": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1047": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1050": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1059": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "1071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "ADD",
      "path": "18"
    },
    "1075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A1"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x153"
    },
    "1097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "SUB",
      "path": "18"
    },
    "1102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1105": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "LT",
      "path": "18"
    },
    "1106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B"
    },
    "1110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9FF"
    },
    "1121": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x137"
    },
    "1126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "SUB",
      "path": "18"
    },
    "1131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "LT",
      "path": "18"
    },
    "1135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x478"
    },
    "1139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "AND",
      "path": "18"
    },
    "1158": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "ADD",
      "path": "18"
    },
    "1162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "AND",
      "path": "18"
    },
    "1164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC82"
    },
    "1167": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1168": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "op": "NOT"
    },
    "1178": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 0
    },
    "1179": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "AND",
      "path": "8"
    },
    "1180": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1084,
        1088
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1182": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1183": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1184": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1185": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1188": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1189": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1190": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1192": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1193": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1194": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1195": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1197": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1108,
        1141
      ],
      "op": "AND",
      "path": "8"
    },
    "1198": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1199": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1200": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1201": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        999,
        1149
      ],
      "op": "POP",
      "path": "8"
    },
    "1202": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        999,
        1149
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1203": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [
        4724,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 1,
      "value": "0x6"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1224": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "AND",
      "path": "18"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MUL",
      "path": "18"
    },
    "1230": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1233": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "AND",
      "path": "18"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1237": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DIV",
      "path": "18"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1243": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DIV",
      "path": "18"
    },
    "1244": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1245": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MUL",
      "path": "18"
    },
    "1246": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1247": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1248": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1249": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1250": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1251": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1252": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1253": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1254": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1255": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1256": {
      "fn": "ERC721.name",
      "offset": [
        4691,
        4704
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1258": {
      "fn": "ERC721.name",
      "offset": [
        4691,
        4704
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1259": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1260": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1261": {
      "fn": "ERC721.name",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1262": {
      "fn": "ERC721.name",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1263": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1264": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1265": {
      "fn": "ERC721.name",
      "offset": [
        4724,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1266": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1267": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1268": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1269": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "1272": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1273": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1274": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1276": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "LT",
      "path": "18"
    },
    "1277": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x514"
    },
    "1280": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1281": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1284": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1285": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1286": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1287": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DIV",
      "path": "18"
    },
    "1288": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MUL",
      "path": "18"
    },
    "1289": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1290": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1291": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1292": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1294": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1295": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1296": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "1299": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1300": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1301": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1302": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1303": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1304": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1305": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1308": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1310": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1312": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1313": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1314": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1315": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1316": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1317": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1318": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1319": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1320": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1322": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1323": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1324": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1326": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1327": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1328": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1329": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "GT",
      "path": "18"
    },
    "1330": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x522"
    },
    "1333": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1334": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1335": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1336": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SUB",
      "path": "18"
    },
    "1337": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1339": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "AND",
      "path": "18"
    },
    "1340": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1341": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "ADD",
      "path": "18"
    },
    "1342": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1343": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1344": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1345": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1346": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1347": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1348": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1349": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1350": {
      "fn": "ERC721.name",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "18"
    },
    "1351": {
      "fn": "ERC721.name",
      "offset": [
        4637,
        4737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1352": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        4637,
        4737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1353": {
      "fn": "ERC721.getApproved",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1354": {
      "fn": "ERC721.getApproved",
      "offset": [
        7499,
        7506
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1356": {
      "fn": "ERC721.getApproved",
      "offset": [
        7527,
        7543
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 2,
      "value": "0x554"
    },
    "1359": {
      "fn": "ERC721.getApproved",
      "offset": [
        7535,
        7542
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1360": {
      "fn": "ERC721.getApproved",
      "offset": [
        7527,
        7534
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCB0"
    },
    "1363": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7527,
        7543
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1364": {
      "branch": 88,
      "fn": "ERC721.getApproved",
      "offset": [
        7527,
        7543
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1365": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58F"
    },
    "1368": {
      "branch": 88,
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1369": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1371": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1380": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1381": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1383": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "ADD",
      "path": "18"
    },
    "1384": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1385": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1386": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1388": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "ADD",
      "path": "18"
    },
    "1389": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1390": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1391": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SUB",
      "path": "18"
    },
    "1392": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1393": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1394": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2C"
    },
    "1396": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1397": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1398": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "ADD",
      "path": "18"
    },
    "1401": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1402": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1888"
    },
    "1405": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2C"
    },
    "1407": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1408": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "1409": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1411": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "ADD",
      "path": "18"
    },
    "1412": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1413": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "POP",
      "path": "18"
    },
    "1414": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "POP",
      "path": "18"
    },
    "1415": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1417": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1418": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1419": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1420": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SUB",
      "path": "18"
    },
    "1421": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1422": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1423": {
      "fn": "ERC721.getApproved",
      "offset": [
        7519,
        7592
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 3,
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1428": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1429": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1430": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7627
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1432": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1434": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1435": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1437": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1438": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1439": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "AND",
      "path": "18"
    },
    "1449": {
      "fn": "ERC721.getApproved",
      "offset": [
        7612,
        7636
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1450": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        7423,
        7644
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1451": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1452": {
      "fn": "ERC721.approve",
      "offset": [
        7034,
        7047
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1454": {
      "fn": "ERC721.approve",
      "offset": [
        7050,
        7073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ERC721.approve",
      "offset": [
        7065,
        7072
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [
        7050,
        7064
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "1461": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7050,
        7073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1462": {
      "fn": "ERC721.approve",
      "offset": [
        7050,
        7073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1463": {
      "fn": "ERC721.approve",
      "offset": [
        7034,
        7073
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1464": {
      "fn": "ERC721.approve",
      "offset": [
        7034,
        7073
      ],
      "op": "POP",
      "path": "18"
    },
    "1465": {
      "fn": "ERC721.approve",
      "offset": [
        7098,
        7103
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 4
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC721.approve",
      "offset": [
        7092,
        7103
      ],
      "op": "AND",
      "path": "18"
    },
    "1475": {
      "fn": "ERC721.approve",
      "offset": [
        7092,
        7094
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "ERC721.approve",
      "offset": [
        7092,
        7103
      ],
      "op": "AND",
      "path": "18"
    },
    "1485": {
      "fn": "ERC721.approve",
      "offset": [
        7092,
        7103
      ],
      "op": "EQ",
      "path": "18"
    },
    "1486": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        7092,
        7103
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1487": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x609"
    },
    "1490": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1491": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1502": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1503": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1505": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "ADD",
      "path": "18"
    },
    "1506": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1507": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1508": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "ADD",
      "path": "18"
    },
    "1511": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1512": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1513": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SUB",
      "path": "18"
    },
    "1514": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1515": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1516": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x21"
    },
    "1518": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1519": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1520": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1522": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "ADD",
      "path": "18"
    },
    "1523": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1524": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x190C"
    },
    "1527": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x21"
    },
    "1529": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1530": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "1531": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1533": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "ADD",
      "path": "18"
    },
    "1534": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1535": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "POP",
      "path": "18"
    },
    "1536": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "POP",
      "path": "18"
    },
    "1537": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1539": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1540": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1541": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1542": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SUB",
      "path": "18"
    },
    "1543": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1544": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1545": {
      "fn": "ERC721.approve",
      "offset": [
        7084,
        7141
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1546": {
      "fn": "ERC721.approve",
      "offset": [
        7178,
        7183
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 5
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7183
      ],
      "op": "AND",
      "path": "18"
    },
    "1556": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7174
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x61B"
    },
    "1559": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7172
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "1562": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7162,
        7174
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1563": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7174
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7183
      ],
      "op": "AND",
      "path": "18"
    },
    "1573": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7183
      ],
      "op": "EQ",
      "path": "18"
    },
    "1574": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7231
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1575": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7231
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x63C"
    },
    "1578": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7231
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1579": {
      "fn": "ERC721.approve",
      "offset": [
        7162,
        7231
      ],
      "op": "POP",
      "path": "18"
    },
    "1580": {
      "fn": "ERC721.approve",
      "offset": [
        7187,
        7231
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x63C"
    },
    "1583": {
      "fn": "ERC721.approve",
      "offset": [
        7211,
        7216
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1584": {
      "fn": "ERC721.approve",
      "offset": [
        7218,
        7230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x637"
    },
    "1587": {
      "fn": "ERC721.approve",
      "offset": [
        7218,
        7228
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "1590": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7218,
        7230
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1591": {
      "fn": "ERC721.approve",
      "offset": [
        7218,
        7230
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1592": {
      "fn": "ERC721.approve",
      "offset": [
        7187,
        7210
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC82"
    },
    "1595": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7187,
        7231
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1596": {
      "branch": 91,
      "fn": "ERC721.approve",
      "offset": [
        7187,
        7231
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1597": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x677"
    },
    "1600": {
      "branch": 91,
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1601": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1603": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1612": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1613": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "ADD",
      "path": "18"
    },
    "1616": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1617": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1618": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1620": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "ADD",
      "path": "18"
    },
    "1621": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1622": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1623": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SUB",
      "path": "18"
    },
    "1624": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1625": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1626": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x38"
    },
    "1628": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1629": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1630": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "ADD",
      "path": "18"
    },
    "1633": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1634": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17DB"
    },
    "1637": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x38"
    },
    "1639": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1640": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "1641": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1643": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "ADD",
      "path": "18"
    },
    "1644": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1645": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "POP",
      "path": "18"
    },
    "1646": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "POP",
      "path": "18"
    },
    "1647": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1649": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1650": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1651": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1652": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SUB",
      "path": "18"
    },
    "1653": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1654": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1655": {
      "fn": "ERC721.approve",
      "offset": [
        7154,
        7315
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1656": {
      "fn": "ERC721.approve",
      "offset": [
        7328,
        7349
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 6,
      "value": "0x681"
    },
    "1659": {
      "fn": "ERC721.approve",
      "offset": [
        7337,
        7339
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1660": {
      "fn": "ERC721.approve",
      "offset": [
        7341,
        7348
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1661": {
      "fn": "ERC721.approve",
      "offset": [
        7328,
        7336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC1"
    },
    "1664": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7328,
        7349
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1665": {
      "fn": "ERC721.approve",
      "offset": [
        7328,
        7349
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1666": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "POP",
      "path": "18"
    },
    "1667": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "POP",
      "path": "18"
    },
    "1668": {
      "fn": "ERC721.approve",
      "offset": [
        6953,
        7357
      ],
      "op": "POP",
      "path": "18"
    },
    "1669": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        6953,
        7357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1670": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1671": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6492,
        6499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1673": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6613,
        6634
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 7,
      "value": "0x692"
    },
    "1676": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6613,
        6625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1678": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6613,
        6632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD2F"
    },
    "1681": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6613,
        6634
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1682": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6613,
        6634
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1683": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6606,
        6634
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1684": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6606,
        6634
      ],
      "op": "POP",
      "path": "18"
    },
    "1685": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6431,
        6642
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1686": {
      "fn": "ERC721.totalSupply",
      "jump": "o",
      "offset": [
        6431,
        6642
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8313,
        8618
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1688": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8474,
        8515
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 8,
      "value": "0x6A8"
    },
    "1691": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6A2"
    },
    "1694": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8493,
        8503
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "1697": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8493,
        8505
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1698": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8493,
        8505
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1699": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8507,
        8514
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1700": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8474,
        8492
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD3A"
    },
    "1703": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8474,
        8515
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1704": {
      "branch": 92,
      "fn": "ERC721.transferFrom",
      "offset": [
        8474,
        8515
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1705": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E3"
    },
    "1708": {
      "branch": 92,
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1709": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1720": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1721": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1723": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "ADD",
      "path": "18"
    },
    "1724": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1725": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1726": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "ADD",
      "path": "18"
    },
    "1729": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1731": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SUB",
      "path": "18"
    },
    "1732": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1733": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1734": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x31"
    },
    "1736": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1737": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1738": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "ADD",
      "path": "18"
    },
    "1741": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192D"
    },
    "1745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x31"
    },
    "1747": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1748": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "1749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "ADD",
      "path": "18"
    },
    "1752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1753": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "POP",
      "path": "18"
    },
    "1754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "POP",
      "path": "18"
    },
    "1755": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1759": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SUB",
      "path": "18"
    },
    "1761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1763": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8466,
        8569
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8582,
        8610
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 9,
      "value": "0x681"
    },
    "1767": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8592,
        8596
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8598,
        8600
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1769": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8582,
        8591
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDDE"
    },
    "1773": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8582,
        8610
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1774": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 10
    },
    "1784": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "AND",
      "path": "18"
    },
    "1785": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6290,
        6297
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1788": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1789": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1790": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6330
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1792": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1794": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1795": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1798": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6337
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1799": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x710"
    },
    "1802": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6347
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1803": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6341,
        6346
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1804": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6340
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF2A"
    },
    "1807": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6317,
        6347
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1808": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6317,
        6347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1809": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6310,
        6347
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1810": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6310,
        6347
      ],
      "op": "POP",
      "path": "18"
    },
    "1811": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1812": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1813": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1814": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "POP",
      "path": "18"
    },
    "1815": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6193,
        6355
      ],
      "op": "POP",
      "path": "18"
    },
    "1816": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        6193,
        6355
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8689,
        8840
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 11,
      "value": "0x681"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8810,
        8814
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8816,
        8818
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8820,
        8827
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "ADD",
      "path": "18"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8832
      ],
      "op": "POP",
      "path": "18"
    },
    "1840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8793,
        8809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A1"
    },
    "1843": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8793,
        8832
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1844": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1845": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6794,
        6801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6794,
        6801
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1848": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6836,
        6858
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x742"
    },
    "1851": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6836,
        6848
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1853": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6852,
        6857
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1854": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6836,
        6851
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF36"
    },
    "1857": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6836,
        6858
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1858": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6836,
        6858
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6814,
        6858
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1861": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6719,
        6891
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ERC721.tokenByIndex",
      "jump": "o",
      "offset": [
        6719,
        6891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4393,
        4570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4465,
        4472
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 12,
      "value": "0x713"
    },
    "1872": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4509,
        4516
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1876": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1879": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "ADD",
      "path": "18"
    },
    "1880": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1883": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1884": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x29"
    },
    "1886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1888": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "ADD",
      "path": "18"
    },
    "1891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x183D"
    },
    "1894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x29"
    },
    "1896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "1898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4504
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4504
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4562
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4492,
        4508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF52"
    },
    "1905": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4492,
        4562
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1906": {
      "fn": "ERC721.baseURI",
      "offset": [
        6012,
        6109
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1907": {
      "fn": "ERC721.baseURI",
      "offset": [
        6093,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 13,
      "value": "0x9"
    },
    "1909": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1910": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1911": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1913": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1914": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1915": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1919": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "NOT"
    },
    "1924": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1927": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1929": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1930": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "AND",
      "path": "18"
    },
    "1931": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1932": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MUL",
      "path": "18"
    },
    "1933": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1934": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1935": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1936": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "AND",
      "path": "18"
    },
    "1937": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1938": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1939": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1940": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DIV",
      "path": "18"
    },
    "1941": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1942": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1943": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1944": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1945": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1946": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DIV",
      "path": "18"
    },
    "1947": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1948": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MUL",
      "path": "18"
    },
    "1949": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1950": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1951": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1952": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1953": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1954": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1955": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1956": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1957": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1958": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1959": {
      "fn": "ERC721.baseURI",
      "offset": [
        6060,
        6073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1961": {
      "fn": "ERC721.baseURI",
      "offset": [
        6060,
        6073
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1962": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1963": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1964": {
      "fn": "ERC721.baseURI",
      "offset": [
        6093,
        6101
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1965": {
      "fn": "ERC721.baseURI",
      "offset": [
        6093,
        6101
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1966": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1967": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1968": {
      "fn": "ERC721.baseURI",
      "offset": [
        6093,
        6101
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1969": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1970": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1971": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1972": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "1975": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1976": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1977": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1979": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "LT",
      "path": "18"
    },
    "1980": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x514"
    },
    "1983": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1984": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1987": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1988": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1989": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1990": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DIV",
      "path": "18"
    },
    "1991": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MUL",
      "path": "18"
    },
    "1992": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1993": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1994": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1995": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1997": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1998": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1999": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "2002": {
      "fn": "ERC721.baseURI",
      "offset": [
        6086,
        6101
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4110,
        4331
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2004": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4182,
        4189
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "op": "SUB"
    },
    "2014": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4210,
        4229
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 14
    },
    "2015": {
      "branch": 93,
      "fn": "ERC721.balanceOf",
      "offset": [
        4210,
        4229
      ],
      "op": "AND",
      "path": "18"
    },
    "2016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x81A"
    },
    "2019": {
      "branch": 93,
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "ADD",
      "path": "18"
    },
    "2035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2037": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "ADD",
      "path": "18"
    },
    "2040": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2041": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2042": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SUB",
      "path": "18"
    },
    "2043": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2044": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2045": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2A"
    },
    "2047": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2048": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2049": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "ADD",
      "path": "18"
    },
    "2052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1813"
    },
    "2056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2A"
    },
    "2058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "2060": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "ADD",
      "path": "18"
    },
    "2063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "POP",
      "path": "18"
    },
    "2065": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "POP",
      "path": "18"
    },
    "2066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2071": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SUB",
      "path": "18"
    },
    "2072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2073": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2074": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4202,
        4276
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 15
    },
    "2084": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "AND",
      "path": "18"
    },
    "2085": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2088": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2090": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2094": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2098": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4314
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2099": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4323
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x713"
    },
    "2102": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4323
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2103": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4294,
        4321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD2F"
    },
    "2106": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4294,
        4323
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2107": {
      "fn": "ERC721.symbol",
      "offset": [
        4806,
        4910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2108": {
      "fn": "ERC721.symbol",
      "offset": [
        4895,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 16,
      "value": "0x7"
    },
    "2110": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2111": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2112": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2114": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2115": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2116": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2118": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2120": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "NOT"
    },
    "2125": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2128": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2130": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2131": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "AND",
      "path": "18"
    },
    "2132": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MUL",
      "path": "18"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2135": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2136": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "AND",
      "path": "18"
    },
    "2138": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2139": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DIV",
      "path": "18"
    },
    "2142": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2145": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2146": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DIV",
      "path": "18"
    },
    "2148": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2149": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MUL",
      "path": "18"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2151": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2152": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2154": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2156": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2157": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2159": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2160": {
      "fn": "ERC721.symbol",
      "offset": [
        4862,
        4875
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        4862,
        4875
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2163": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2164": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2165": {
      "fn": "ERC721.symbol",
      "offset": [
        4895,
        4902
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2166": {
      "fn": "ERC721.symbol",
      "offset": [
        4895,
        4902
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2167": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2168": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2169": {
      "fn": "ERC721.symbol",
      "offset": [
        4895,
        4902
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2170": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2172": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2173": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "2176": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2177": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2178": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2180": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "LT",
      "path": "18"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x514"
    },
    "2184": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2185": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2188": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2189": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2190": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2191": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DIV",
      "path": "18"
    },
    "2192": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MUL",
      "path": "18"
    },
    "2193": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2194": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2195": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2196": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "ADD",
      "path": "18"
    },
    "2199": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2200": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53F"
    },
    "2203": {
      "fn": "ERC721.symbol",
      "offset": [
        4888,
        4902
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7831,
        7843
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 17,
      "value": "0x8A4"
    },
    "2208": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7831,
        7841
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "2211": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7831,
        7843
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7831,
        7843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "op": "SUB"
    },
    "2221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7819,
        7843
      ],
      "op": "AND",
      "path": "18"
    },
    "2222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7819,
        7827
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7819,
        7843
      ],
      "op": "AND",
      "path": "18"
    },
    "2232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7819,
        7843
      ],
      "op": "EQ",
      "path": "18"
    },
    "2233": {
      "branch": 94,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7819,
        7843
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90A"
    },
    "2237": {
      "branch": 94,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2251": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2256": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "ADD",
      "path": "18"
    },
    "2257": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "2260": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2263": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "ADD",
      "path": "18"
    },
    "2264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2298": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "2300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "ADD",
      "path": "18"
    },
    "2302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2305": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "SUB",
      "path": "18"
    },
    "2309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "2311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "ADD",
      "path": "18"
    },
    "2312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7811,
        7873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2315": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7931,
        7939
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 18
    },
    "2316": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7904
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "2318": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2320": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7905,
        7917
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x917"
    },
    "2323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7905,
        7915
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "2326": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7905,
        7917
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7905,
        7917
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2337": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2338": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "AND",
      "path": "18"
    },
    "2339": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "ADD",
      "path": "18"
    },
    "2346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2353": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "ADD",
      "path": "18"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2358": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7918
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2360": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2361": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2362": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "AND",
      "path": "18"
    },
    "2363": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2364": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2365": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2366": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2367": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2368": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2371": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7928
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2372": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "AND",
      "path": "18"
    },
    "2378": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2380": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2381": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2382": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2384": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "OR",
      "path": "18"
    },
    "2385": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2386": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7886,
        7939
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7970,
        7982
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 19,
      "value": "0x95B"
    },
    "2391": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7970,
        7980
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "2394": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7970,
        7982
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7970,
        7982
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "AND",
      "path": "18"
    },
    "2405": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7994,
        8002
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2441": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2444": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2446": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2447": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2448": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "ADD",
      "path": "18"
    },
    "2451": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2452": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "POP",
      "path": "18"
    },
    "2453": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "POP",
      "path": "18"
    },
    "2454": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "SUB",
      "path": "18"
    },
    "2460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7955,
        8003
      ],
      "op": "LOG3",
      "path": "18"
    },
    "2462": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "POP",
      "path": "18"
    },
    "2463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7716,
        8011
      ],
      "op": "POP",
      "path": "18"
    },
    "2464": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        7716,
        8011
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2465": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9043,
        9084
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 20,
      "value": "0x9B2"
    },
    "2469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9062,
        9074
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9062,
        9072
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "2475": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        9062,
        9074
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9062,
        9074
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2477": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9076,
        9083
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9043,
        9061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD3A"
    },
    "2481": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        9043,
        9084
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2482": {
      "branch": 95,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9043,
        9084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9ED"
    },
    "2486": {
      "branch": 95,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "ADD",
      "path": "18"
    },
    "2502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "ADD",
      "path": "18"
    },
    "2507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2508": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SUB",
      "path": "18"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x31"
    },
    "2514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "ADD",
      "path": "18"
    },
    "2519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192D"
    },
    "2523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x31"
    },
    "2525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "2527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "ADD",
      "path": "18"
    },
    "2530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "POP",
      "path": "18"
    },
    "2532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "POP",
      "path": "18"
    },
    "2533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SUB",
      "path": "18"
    },
    "2539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9035,
        9138
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9149,
        9188
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 21,
      "value": "0x9F9"
    },
    "2545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9163,
        9167
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9169,
        9171
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9173,
        9180
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9182,
        9187
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9149,
        9162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF69"
    },
    "2552": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        9149,
        9188
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        9149,
        9188
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "POP",
      "path": "18"
    },
    "2555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "POP",
      "path": "18"
    },
    "2556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "POP",
      "path": "18"
    },
    "2557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8911,
        9196
      ],
      "op": "POP",
      "path": "18"
    },
    "2558": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        8911,
        9196
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5054,
        5067
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2562": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5088,
        5104
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 22,
      "value": "0xA0A"
    },
    "2565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5096,
        5103
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5088,
        5095
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCB0"
    },
    "2569": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5088,
        5104
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2570": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5088,
        5104
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA45"
    },
    "2574": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "ADD",
      "path": "18"
    },
    "2590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "ADD",
      "path": "18"
    },
    "2595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SUB",
      "path": "18"
    },
    "2598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2600": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2F"
    },
    "2602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2606": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "ADD",
      "path": "18"
    },
    "2607": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2608": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18DD"
    },
    "2611": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2F"
    },
    "2613": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "2615": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "ADD",
      "path": "18"
    },
    "2618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2619": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "POP",
      "path": "18"
    },
    "2620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "POP",
      "path": "18"
    },
    "2621": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2623": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2624": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2625": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2626": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SUB",
      "path": "18"
    },
    "2627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5080,
        5156
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2630": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2633": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5205
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2637": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2640": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2641": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2642": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2647": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2648": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2649": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2650": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2651": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2652": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2654": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2658": {
      "op": "NOT"
    },
    "2659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2664": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2665": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "AND",
      "path": "18"
    },
    "2666": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2667": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MUL",
      "path": "18"
    },
    "2668": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "AND",
      "path": "18"
    },
    "2672": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DIV",
      "path": "18"
    },
    "2676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2678": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2679": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2680": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2681": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DIV",
      "path": "18"
    },
    "2682": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2683": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MUL",
      "path": "18"
    },
    "2684": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2685": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2686": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2687": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2688": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2689": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2690": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2691": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2692": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2693": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2694": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5192
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2696": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5192
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2697": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2698": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2699": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2700": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5195,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2701": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2702": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2703": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2704": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xADA"
    },
    "2707": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2708": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2711": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "LT",
      "path": "18"
    },
    "2712": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAAF"
    },
    "2715": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2719": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2720": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2721": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2722": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DIV",
      "path": "18"
    },
    "2723": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MUL",
      "path": "18"
    },
    "2724": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2725": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2726": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2730": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2731": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xADA"
    },
    "2734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2735": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2740": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2753": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "GT",
      "path": "18"
    },
    "2765": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xABD"
    },
    "2768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2771": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SUB",
      "path": "18"
    },
    "2772": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "AND",
      "path": "18"
    },
    "2775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "2777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5169,
        5214
      ],
      "op": "POP",
      "path": "18"
    },
    "2786": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5225,
        5243
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5246,
        5255
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAEB"
    },
    "2791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5246,
        5253
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x772"
    },
    "2794": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5246,
        5255
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5246,
        5255
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5225,
        5255
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2797": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5225,
        5255
      ],
      "op": "POP",
      "path": "18"
    },
    "2798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5337,
        5341
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5331,
        5349
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5353,
        5354
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2802": {
      "branch": 97,
      "fn": "ERC721.tokenURI",
      "offset": [
        5331,
        5354
      ],
      "op": "EQ",
      "path": "18"
    },
    "2803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5327,
        5399
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5327,
        5399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAFF"
    },
    "2807": {
      "branch": 97,
      "fn": "ERC721.tokenURI",
      "offset": [
        5327,
        5399
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5378,
        5387
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 23
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5371,
        5387
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4AE"
    },
    "2814": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5371,
        5387
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5327,
        5399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5503,
        5526
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2817": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5503,
        5526
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2818": {
      "branch": 98,
      "fn": "ERC721.tokenURI",
      "offset": [
        5503,
        5530
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5499,
        5607
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBC0"
    },
    "2822": {
      "branch": 98,
      "fn": "ERC721.tokenURI",
      "offset": [
        5499,
        5607
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5578,
        5582
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 24
    },
    "2824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5584,
        5593
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2828": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2834": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2835": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "LT",
      "path": "18"
    },
    "2848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB3A"
    },
    "2851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2858": {
      "op": "NOT"
    },
    "2859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2860": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2861": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2862": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2863": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2865": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2866": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2869": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB1B"
    },
    "2873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2878": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SUB",
      "path": "18"
    },
    "2883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2886": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "EXP",
      "path": "18"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2889": {
      "op": "NOT"
    },
    "2890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "NOT",
      "path": "18"
    },
    "2893": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2895": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "AND",
      "path": "18"
    },
    "2896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "AND",
      "path": "18"
    },
    "2898": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "OR",
      "path": "18"
    },
    "2899": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2900": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2904": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2905": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2906": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2908": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2910": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2914": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2915": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "LT",
      "path": "18"
    },
    "2920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB82"
    },
    "2923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2924": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2925": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2927": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2930": {
      "op": "NOT"
    },
    "2931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2934": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2941": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2942": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB63"
    },
    "2945": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2946": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2947": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2949": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2950": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2952": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SUB",
      "path": "18"
    },
    "2953": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2956": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "EXP",
      "path": "18"
    },
    "2957": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SUB",
      "path": "18"
    },
    "2958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "NOT",
      "path": "18"
    },
    "2960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "AND",
      "path": "18"
    },
    "2963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "AND",
      "path": "18"
    },
    "2967": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2969": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "OR",
      "path": "18"
    },
    "2970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "ADD",
      "path": "18"
    },
    "2981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "POP",
      "path": "18"
    },
    "2985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SUB",
      "path": "18"
    },
    "2993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SUB",
      "path": "18"
    },
    "2994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2999": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5561,
        5594
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "POP",
      "path": "18"
    },
    "3002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "POP",
      "path": "18"
    },
    "3003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "POP",
      "path": "18"
    },
    "3004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4AE"
    },
    "3007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5547,
        5595
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5499,
        5607
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5739,
        5743
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 25
    },
    "3010": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5745,
        5763
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBCA"
    },
    "3013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5745,
        5752
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5745,
        5761
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFBB"
    },
    "3017": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5745,
        5763
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5745,
        5763
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3033": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3036": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3037": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3038": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3040": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3041": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "LT",
      "path": "18"
    },
    "3042": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBFC"
    },
    "3045": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3048": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3049": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3052": {
      "op": "NOT"
    },
    "3053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3054": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3055": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3056": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3057": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3059": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3060": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3061": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3062": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3064": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBDD"
    },
    "3067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3068": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3069": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3070": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3071": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3072": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3075": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3076": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SUB",
      "path": "18"
    },
    "3077": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3080": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "EXP",
      "path": "18"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3083": {
      "op": "NOT"
    },
    "3084": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3085": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3086": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "NOT",
      "path": "18"
    },
    "3087": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3088": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3089": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "AND",
      "path": "18"
    },
    "3090": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3091": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "AND",
      "path": "18"
    },
    "3092": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "OR",
      "path": "18"
    },
    "3093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3095": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3096": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3098": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3103": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3105": {
      "op": "POP"
    },
    "3106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3108": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3109": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3112": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "LT",
      "path": "18"
    },
    "3114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC44"
    },
    "3117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3119": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3120": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3121": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3124": {
      "op": "NOT"
    },
    "3125": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3126": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3127": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3128": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3129": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3131": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3132": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3133": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3134": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3135": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3136": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3139": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3140": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3141": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3143": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3144": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3146": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SUB",
      "path": "18"
    },
    "3147": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3150": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "EXP",
      "path": "18"
    },
    "3151": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SUB",
      "path": "18"
    },
    "3152": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3153": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "NOT",
      "path": "18"
    },
    "3154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3156": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "AND",
      "path": "18"
    },
    "3157": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3158": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3159": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3160": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "AND",
      "path": "18"
    },
    "3161": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3162": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3163": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "OR",
      "path": "18"
    },
    "3164": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3165": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3166": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3167": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3168": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3169": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3170": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3171": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3172": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3173": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3174": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "ADD",
      "path": "18"
    },
    "3175": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3177": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "POP",
      "path": "18"
    },
    "3179": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3182": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3184": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3185": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3186": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SUB",
      "path": "18"
    },
    "3187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SUB",
      "path": "18"
    },
    "3188": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3190": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3191": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5722,
        5764
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3194": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5708,
        5765
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3195": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5708,
        5765
      ],
      "op": "POP",
      "path": "18"
    },
    "3196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5708,
        5765
      ],
      "op": "POP",
      "path": "18"
    },
    "3197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5708,
        5765
      ],
      "op": "POP",
      "path": "18"
    },
    "3198": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3199": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4981,
        5773
      ],
      "op": "POP",
      "path": "18"
    },
    "3201": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        4981,
        5773
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3209": {
      "op": "SHL"
    },
    "3210": {
      "op": "SUB"
    },
    "3211": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 26
    },
    "3212": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3213": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "AND",
      "path": "18"
    },
    "3214": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8179,
        8183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3216": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3217": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3218": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3219": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3221": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3223": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3224": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3225": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3226": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3228": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3229": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3230": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8228
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3231": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3232": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3233": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3234": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "AND",
      "path": "18"
    },
    "3235": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3236": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3237": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3238": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3239": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3240": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3241": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3242": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3243": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3245": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "AND",
      "path": "18"
    },
    "3246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        8203,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3247": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        8082,
        8246
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3248": {
      "fn": "ERC721._exists",
      "offset": [
        10663,
        10790
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3249": {
      "fn": "ERC721._exists",
      "offset": [
        10728,
        10732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3251": {
      "fn": "ERC721._exists",
      "offset": [
        10752,
        10782
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 27,
      "value": "0x713"
    },
    "3254": {
      "fn": "ERC721._exists",
      "offset": [
        10752,
        10764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3256": {
      "fn": "ERC721._exists",
      "offset": [
        10774,
        10781
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3257": {
      "fn": "ERC721._exists",
      "offset": [
        10752,
        10773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1096"
    },
    "3260": {
      "fn": "ERC721._exists",
      "jump": "i",
      "offset": [
        10752,
        10782
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3261": {
      "fn": "Context._msgSender",
      "offset": [
        613,
        719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3262": {
      "fn": "Context._msgSender",
      "offset": [
        701,
        711
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 28
    },
    "3263": {
      "fn": "Context._msgSender",
      "offset": [
        613,
        719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3264": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        613,
        719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3265": {
      "fn": "ERC721._approve",
      "offset": [
        16570,
        16753
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3266": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 29,
      "value": "0x0"
    },
    "3268": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3269": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3270": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3271": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16651
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3273": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3275": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3276": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3278": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3279": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3280": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3281": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3288": {
      "op": "SHL"
    },
    "3289": {
      "op": "SUB"
    },
    "3290": {
      "op": "NOT"
    },
    "3291": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "AND",
      "path": "18"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3298": {
      "op": "SHL"
    },
    "3299": {
      "op": "SUB"
    },
    "3300": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3301": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "AND",
      "path": "18"
    },
    "3302": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3303": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3304": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "OR",
      "path": "18"
    },
    "3305": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3306": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3307": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16665
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3308": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3309": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3310": {
      "fn": "ERC721._approve",
      "offset": [
        16690,
        16713
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 30,
      "value": "0xCF6"
    },
    "3313": {
      "fn": "ERC721._approve",
      "offset": [
        16636,
        16660
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3314": {
      "fn": "ERC721._approve",
      "offset": [
        16690,
        16704
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "3317": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        16690,
        16713
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3318": {
      "fn": "ERC721._approve",
      "offset": [
        16690,
        16713
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3325": {
      "op": "SHL"
    },
    "3326": {
      "op": "SUB"
    },
    "3327": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "AND",
      "path": "18"
    },
    "3328": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3361": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3363": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3364": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3366": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3367": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3368": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3369": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "SUB",
      "path": "18"
    },
    "3370": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3371": {
      "fn": "ERC721._approve",
      "offset": [
        16681,
        16727
      ],
      "op": "LOG4",
      "path": "18"
    },
    "3372": {
      "fn": "ERC721._approve",
      "offset": [
        16570,
        16753
      ],
      "op": "POP",
      "path": "18"
    },
    "3373": {
      "fn": "ERC721._approve",
      "offset": [
        16570,
        16753
      ],
      "op": "POP",
      "path": "18"
    },
    "3374": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        16570,
        16753
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3375": {
      "fn": "EnumerableMap.length",
      "offset": [
        8036,
        8159
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3376": {
      "fn": "EnumerableMap.length",
      "offset": [
        8105,
        8112
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3378": {
      "fn": "EnumerableMap.length",
      "offset": [
        8132,
        8151
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 31,
      "value": "0x713"
    },
    "3381": {
      "fn": "EnumerableMap.length",
      "offset": [
        8140,
        8143
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3382": {
      "fn": "EnumerableMap.length",
      "offset": [
        8132,
        8139
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10A2"
    },
    "3385": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        8132,
        8151
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3386": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10957,
        11312
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3387": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11050,
        11054
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11075,
        11091
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 32,
      "value": "0xD45"
    },
    "3392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11083,
        11090
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3393": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11075,
        11082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCB0"
    },
    "3396": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        11075,
        11091
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3397": {
      "branch": 99,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11075,
        11091
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3398": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD80"
    },
    "3401": {
      "branch": 99,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3402": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3404": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3413": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3414": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3416": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "ADD",
      "path": "18"
    },
    "3417": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3418": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3419": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3421": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "ADD",
      "path": "18"
    },
    "3422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3424": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SUB",
      "path": "18"
    },
    "3425": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3426": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3427": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2C"
    },
    "3429": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3430": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3431": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3433": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "ADD",
      "path": "18"
    },
    "3434": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3435": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17AF"
    },
    "3438": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2C"
    },
    "3440": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3441": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "3442": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3444": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "ADD",
      "path": "18"
    },
    "3445": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3446": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "POP",
      "path": "18"
    },
    "3447": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "POP",
      "path": "18"
    },
    "3448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3450": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3451": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3452": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SUB",
      "path": "18"
    },
    "3454": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3456": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11067,
        11140
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11151,
        11164
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11167,
        11190
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD8B"
    },
    "3462": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11182,
        11189
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11167,
        11181
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "3466": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        11167,
        11190
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3467": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11167,
        11190
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3468": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11151,
        11190
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3469": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11151,
        11190
      ],
      "op": "POP",
      "path": "18"
    },
    "3470": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11220,
        11225
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 33
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3477": {
      "op": "SHL"
    },
    "3478": {
      "op": "SUB"
    },
    "3479": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11225
      ],
      "op": "AND",
      "path": "18"
    },
    "3480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11216
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "op": "SUB"
    },
    "3489": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11225
      ],
      "op": "AND",
      "path": "18"
    },
    "3490": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11225
      ],
      "op": "EQ",
      "path": "18"
    },
    "3491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11260
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11260
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC6"
    },
    "3495": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11260
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3496": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11260
      ],
      "op": "POP",
      "path": "18"
    },
    "3497": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11253,
        11260
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "op": "SUB"
    },
    "3506": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11260
      ],
      "op": "AND",
      "path": "18"
    },
    "3507": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11249
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDBB"
    },
    "3510": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11241,
        11248
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3511": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x549"
    },
    "3514": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        11229,
        11249
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3515": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11249
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3522": {
      "op": "SHL"
    },
    "3523": {
      "op": "SUB"
    },
    "3524": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11260
      ],
      "op": "AND",
      "path": "18"
    },
    "3525": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11229,
        11260
      ],
      "op": "EQ",
      "path": "18"
    },
    "3526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11260
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11303
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11303
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD6"
    },
    "3531": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11303
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3532": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11209,
        11303
      ],
      "op": "POP",
      "path": "18"
    },
    "3533": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11264,
        11303
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD6"
    },
    "3536": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11288,
        11293
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3537": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11295,
        11302
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3538": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11264,
        11287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC82"
    },
    "3541": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        11264,
        11303
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3542": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11264,
        11303
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3543": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11201,
        11304
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3544": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10957,
        11312
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        10957,
        11312
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3550": {
      "fn": "ERC721._transfer",
      "offset": [
        14093,
        14692
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3551": {
      "fn": "ERC721._transfer",
      "offset": [
        14218,
        14222
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 34
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14222
      ],
      "op": "AND",
      "path": "18"
    },
    "3561": {
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDF1"
    },
    "3564": {
      "fn": "ERC721._transfer",
      "offset": [
        14206,
        14213
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3565": {
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14205
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "3568": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14191,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3569": {
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "SUB"
    },
    "3578": {
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14222
      ],
      "op": "AND",
      "path": "18"
    },
    "3579": {
      "branch": 100,
      "fn": "ERC721._transfer",
      "offset": [
        14191,
        14222
      ],
      "op": "EQ",
      "path": "18"
    },
    "3580": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE36"
    },
    "3583": {
      "branch": 100,
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3584": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3586": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3593": {
      "op": "SHL"
    },
    "3594": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3595": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3596": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3598": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "3599": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3600": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3601": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3603": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "3604": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3605": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3606": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SUB",
      "path": "18"
    },
    "3607": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3608": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3609": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x29"
    },
    "3611": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3612": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3613": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3615": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "3616": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3617": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18B4"
    },
    "3620": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x29"
    },
    "3622": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3623": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "3624": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3626": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "3627": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3628": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "3629": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "3630": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3632": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3633": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3634": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3635": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SUB",
      "path": "18"
    },
    "3636": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3637": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3638": {
      "fn": "ERC721._transfer",
      "offset": [
        14183,
        14268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "fn": "ERC721._transfer",
      "offset": [
        14305,
        14321
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 35
    },
    "3648": {
      "branch": 101,
      "fn": "ERC721._transfer",
      "offset": [
        14305,
        14321
      ],
      "op": "AND",
      "path": "18"
    },
    "3649": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE7B"
    },
    "3652": {
      "branch": 101,
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3653": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3655": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3662": {
      "op": "SHL"
    },
    "3663": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3664": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3665": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3667": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "ADD",
      "path": "18"
    },
    "3668": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3669": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3670": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3672": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "ADD",
      "path": "18"
    },
    "3673": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3674": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3675": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SUB",
      "path": "18"
    },
    "3676": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3677": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3678": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3680": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3681": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3682": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3684": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "ADD",
      "path": "18"
    },
    "3685": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3686": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x178B"
    },
    "3689": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3691": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3692": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "3693": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3695": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "ADD",
      "path": "18"
    },
    "3696": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3697": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "POP",
      "path": "18"
    },
    "3698": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "POP",
      "path": "18"
    },
    "3699": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3701": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3702": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3703": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3704": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SUB",
      "path": "18"
    },
    "3705": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3706": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3707": {
      "fn": "ERC721._transfer",
      "offset": [
        14297,
        14362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3708": {
      "fn": "ERC721._transfer",
      "offset": [
        14375,
        14414
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 36,
      "value": "0xE86"
    },
    "3711": {
      "fn": "ERC721._transfer",
      "offset": [
        14396,
        14400
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3712": {
      "fn": "ERC721._transfer",
      "offset": [
        14402,
        14404
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3713": {
      "fn": "ERC721._transfer",
      "offset": [
        14406,
        14413
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3714": {
      "fn": "ERC721._transfer",
      "offset": [
        14375,
        14395
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x681"
    },
    "3717": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14375,
        14414
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3718": {
      "fn": "ERC721._transfer",
      "offset": [
        14375,
        14414
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3719": {
      "fn": "ERC721._transfer",
      "offset": [
        14479,
        14508
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 37,
      "value": "0xE91"
    },
    "3722": {
      "fn": "ERC721._transfer",
      "offset": [
        14496,
        14497
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3724": {
      "fn": "ERC721._transfer",
      "offset": [
        14500,
        14507
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3725": {
      "fn": "ERC721._transfer",
      "offset": [
        14479,
        14487
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC1"
    },
    "3728": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14479,
        14508
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3729": {
      "fn": "ERC721._transfer",
      "offset": [
        14479,
        14508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "op": "SUB"
    },
    "3738": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 38
    },
    "3739": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "AND",
      "path": "18"
    },
    "3740": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3742": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3743": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3744": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3745": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14534
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3747": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3749": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3750": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3752": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3753": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14540
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3754": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14556
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEB3"
    },
    "3757": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14556
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3758": {
      "fn": "ERC721._transfer",
      "offset": [
        14548,
        14555
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3759": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14547
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10A6"
    },
    "3762": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14521,
        14556
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3763": {
      "fn": "ERC721._transfer",
      "offset": [
        14521,
        14556
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "op": "SUB"
    },
    "3773": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 39
    },
    "3774": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "AND",
      "path": "18"
    },
    "3775": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3777": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3778": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3779": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3780": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3782": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3784": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3785": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3787": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3788": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14584
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3789": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14597
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xED6"
    },
    "3792": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14597
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3793": {
      "fn": "ERC721._transfer",
      "offset": [
        14589,
        14596
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3794": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14588
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B2"
    },
    "3797": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14567,
        14597
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3798": {
      "fn": "ERC721._transfer",
      "offset": [
        14567,
        14597
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "fn": "ERC721._transfer",
      "offset": [
        14610,
        14639
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 40,
      "value": "0xEE3"
    },
    "3803": {
      "fn": "ERC721._transfer",
      "offset": [
        14610,
        14622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3805": {
      "fn": "ERC721._transfer",
      "offset": [
        14627,
        14634
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3806": {
      "fn": "ERC721._transfer",
      "offset": [
        14636,
        14638
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3807": {
      "fn": "ERC721._transfer",
      "offset": [
        14610,
        14626
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10BE"
    },
    "3810": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14610,
        14639
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3811": {
      "fn": "ERC721._transfer",
      "offset": [
        14610,
        14639
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3812": {
      "fn": "ERC721._transfer",
      "offset": [
        14610,
        14639
      ],
      "op": "POP",
      "path": "18"
    },
    "3813": {
      "fn": "ERC721._transfer",
      "offset": [
        14676,
        14683
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 41
    },
    "3814": {
      "fn": "ERC721._transfer",
      "offset": [
        14672,
        14674
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "AND",
      "path": "18"
    },
    "3824": {
      "fn": "ERC721._transfer",
      "offset": [
        14666,
        14670
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "op": "SUB"
    },
    "3833": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "AND",
      "path": "18"
    },
    "3834": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3867": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3869": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3870": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3872": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3873": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3874": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3875": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "SUB",
      "path": "18"
    },
    "3876": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3877": {
      "fn": "ERC721._transfer",
      "offset": [
        14657,
        14684
      ],
      "op": "LOG4",
      "path": "18"
    },
    "3878": {
      "fn": "ERC721._transfer",
      "offset": [
        14093,
        14692
      ],
      "op": "POP",
      "path": "18"
    },
    "3879": {
      "fn": "ERC721._transfer",
      "offset": [
        14093,
        14692
      ],
      "op": "POP",
      "path": "18"
    },
    "3880": {
      "fn": "ERC721._transfer",
      "offset": [
        14093,
        14692
      ],
      "op": "POP",
      "path": "18"
    },
    "3881": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        14093,
        14692
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3882": {
      "fn": "EnumerableSet.at",
      "offset": [
        9543,
        9680
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3883": {
      "fn": "EnumerableSet.at",
      "offset": [
        9614,
        9621
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3885": {
      "fn": "EnumerableSet.at",
      "offset": [
        9649,
        9671
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 42,
      "value": "0x710"
    },
    "3888": {
      "fn": "EnumerableSet.at",
      "offset": [
        9653,
        9656
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3889": {
      "fn": "EnumerableSet.at",
      "offset": [
        9665,
        9670
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3890": {
      "fn": "EnumerableSet.at",
      "offset": [
        9649,
        9652
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10D4"
    },
    "3893": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9649,
        9671
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3894": {
      "fn": "EnumerableMap.at",
      "offset": [
        8498,
        8734
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3895": {
      "fn": "EnumerableMap.at",
      "offset": [
        8578,
        8585
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3897": {
      "fn": "EnumerableMap.at",
      "offset": [
        8578,
        8585
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3898": {
      "fn": "EnumerableMap.at",
      "offset": [
        8578,
        8585
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3899": {
      "fn": "EnumerableMap.at",
      "offset": [
        8578,
        8585
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3900": {
      "fn": "EnumerableMap.at",
      "offset": [
        8638,
        8660
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF45"
    },
    "3903": {
      "fn": "EnumerableMap.at",
      "offset": [
        8642,
        8645
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3904": {
      "fn": "EnumerableMap.at",
      "offset": [
        8654,
        8659
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3905": {
      "fn": "EnumerableMap.at",
      "offset": [
        8638,
        8641
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1138"
    },
    "3908": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        8638,
        8660
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3909": {
      "fn": "EnumerableMap.at",
      "offset": [
        8638,
        8660
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3910": {
      "fn": "EnumerableMap.at",
      "offset": [
        8607,
        8660
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3911": {
      "fn": "EnumerableMap.at",
      "offset": [
        8607,
        8660
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "3912": {
      "fn": "EnumerableMap.at",
      "offset": [
        8607,
        8660
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3913": {
      "fn": "EnumerableMap.at",
      "offset": [
        8607,
        8660
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "fn": "EnumerableMap.at",
      "offset": [
        8498,
        8734
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3916": {
      "op": "POP"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        8498,
        8734
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3922": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3923": {
      "fn": "EnumerableMap.get",
      "offset": [
        9891,
        9898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3925": {
      "fn": "EnumerableMap.get",
      "offset": [
        9942,
        9986
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 43,
      "value": "0xF5F"
    },
    "3928": {
      "fn": "EnumerableMap.get",
      "offset": [
        9947,
        9950
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3929": {
      "fn": "EnumerableMap.get",
      "offset": [
        9967,
        9970
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3930": {
      "fn": "EnumerableMap.get",
      "offset": [
        9973,
        9985
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3931": {
      "fn": "EnumerableMap.get",
      "offset": [
        9942,
        9946
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11B3"
    },
    "3934": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        9942,
        9986
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3935": {
      "fn": "EnumerableMap.get",
      "offset": [
        9942,
        9986
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3936": {
      "fn": "EnumerableMap.get",
      "offset": [
        9934,
        9987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3939": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3940": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3941": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "POP",
      "path": "26"
    },
    "3942": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "POP",
      "path": "26"
    },
    "3943": {
      "fn": "EnumerableMap.get",
      "offset": [
        9784,
        9997
      ],
      "op": "POP",
      "path": "26"
    },
    "3944": {
      "fn": "EnumerableMap.get",
      "jump": "o",
      "offset": [
        9784,
        9997
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3945": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10078,
        10350
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3946": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10192,
        10220
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0xF74"
    },
    "3949": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10202,
        10206
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3950": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10208,
        10210
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3951": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10212,
        10219
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3952": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10192,
        10201
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDDE"
    },
    "3955": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        10192,
        10220
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3956": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10192,
        10220
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3957": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10239,
        10287
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 45,
      "value": "0xF80"
    },
    "3960": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10262,
        10266
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3961": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10268,
        10270
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3962": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10272,
        10279
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3963": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10281,
        10286
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3964": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10239,
        10261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x127D"
    },
    "3967": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        10239,
        10287
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3968": {
      "branch": 102,
      "fn": "ERC721._safeTransfer",
      "offset": [
        10239,
        10287
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3969": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9F9"
    },
    "3972": {
      "branch": 102,
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3973": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3975": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3982": {
      "op": "SHL"
    },
    "3983": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3984": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3985": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "ADD",
      "path": "18"
    },
    "3988": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3989": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3990": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3992": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "ADD",
      "path": "18"
    },
    "3993": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3994": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3995": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SUB",
      "path": "18"
    },
    "3996": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3997": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3998": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "4000": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4001": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4002": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4004": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "ADD",
      "path": "18"
    },
    "4005": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4006": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1759"
    },
    "4009": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "4011": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4012": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "4013": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4015": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "ADD",
      "path": "18"
    },
    "4016": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4017": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "POP",
      "path": "18"
    },
    "4018": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "POP",
      "path": "18"
    },
    "4019": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4021": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4022": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4023": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4024": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SUB",
      "path": "18"
    },
    "4025": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4026": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10231,
        10342
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4027": {
      "fn": "Strings.toString",
      "offset": [
        221,
        967
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4028": {
      "fn": "Strings.toString",
      "offset": [
        277,
        290
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "4030": {
      "branch": 113,
      "fn": "Strings.toString",
      "offset": [
        498,
        508
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4031": {
      "fn": "Strings.toString",
      "offset": [
        494,
        547
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFE0"
    },
    "4034": {
      "branch": 113,
      "fn": "Strings.toString",
      "offset": [
        494,
        547
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 46,
      "value": "0x40"
    },
    "4038": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4039": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4040": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4041": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4042": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "ADD",
      "path": "28"
    },
    "4043": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4044": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4045": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4046": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4048": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4049": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4054": {
      "op": "SHL"
    },
    "4055": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4057": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4058": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "ADD",
      "path": "28"
    },
    "4059": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4060": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4AE"
    },
    "4063": {
      "fn": "Strings.toString",
      "offset": [
        525,
        535
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4064": {
      "fn": "Strings.toString",
      "offset": [
        494,
        547
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4065": {
      "fn": "Strings.toString",
      "offset": [
        572,
        577
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4066": {
      "fn": "Strings.toString",
      "offset": [
        557,
        569
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4068": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4069": {
      "fn": "Strings.toString",
      "offset": [
        620,
        629
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4070": {
      "fn": "Strings.toString",
      "offset": [
        620,
        629
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4071": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFF8"
    },
    "4074": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [
        646,
        654
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 47,
      "value": "0x1"
    },
    "4077": {
      "fn": "Strings.toString",
      "offset": [
        646,
        654
      ],
      "op": "ADD",
      "path": "28"
    },
    "4078": {
      "fn": "Strings.toString",
      "offset": [
        677,
        679
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 48,
      "value": "0xA"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [
        669,
        679
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4081": {
      "fn": "Strings.toString",
      "offset": [
        669,
        679
      ],
      "op": "DIV",
      "path": "28"
    },
    "4082": {
      "fn": "Strings.toString",
      "offset": [
        669,
        679
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4083": {
      "fn": "Strings.toString",
      "offset": [
        669,
        679
      ],
      "op": "POP",
      "path": "28"
    },
    "4084": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFE4"
    },
    "4087": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4088": {
      "fn": "Strings.toString",
      "offset": [
        613,
        691
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4089": {
      "fn": "Strings.toString",
      "offset": [
        701,
        720
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "4091": {
      "fn": "Strings.toString",
      "offset": [
        733,
        739
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4092": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH8",
      "path": "28",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4101": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4102": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "GT",
      "path": "28"
    },
    "4103": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4104": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4105": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1011"
    },
    "4108": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4109": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4111": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4112": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "REVERT",
      "path": "28"
    },
    "4113": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "POP",
      "path": "28"
    },
    "4115": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4117": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4118": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4119": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4120": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4121": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4122": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4125": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ADD",
      "path": "28"
    },
    "4126": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4128": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "NOT",
      "path": "28"
    },
    "4129": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "AND",
      "path": "28"
    },
    "4130": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4132": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ADD",
      "path": "28"
    },
    "4133": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4134": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ADD",
      "path": "28"
    },
    "4135": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4137": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4138": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4139": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4140": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x103C"
    },
    "4143": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4144": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4146": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4147": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ADD",
      "path": "28"
    },
    "4148": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4149": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4150": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "4151": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4152": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "CALLDATACOPY",
      "path": "28"
    },
    "4153": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "ADD",
      "path": "28"
    },
    "4154": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "fn": "Strings.toString",
      "offset": [
        723,
        740
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "fn": "Strings.toString",
      "offset": [
        795,
        800
      ],
      "op": "DUP6",
      "path": "28",
      "statement": 49
    },
    "4159": {
      "fn": "Strings.toString",
      "offset": [
        795,
        800
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4160": {
      "op": "POP"
    },
    "4161": {
      "fn": "Strings.toString",
      "offset": [
        701,
        740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4165": {
      "op": "NOT"
    },
    "4166": {
      "fn": "Strings.toString",
      "offset": [
        767,
        777
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4167": {
      "fn": "Strings.toString",
      "offset": [
        767,
        777
      ],
      "op": "ADD",
      "path": "28"
    },
    "4168": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4169": {
      "fn": "Strings.toString",
      "offset": [
        818,
        827
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4170": {
      "fn": "Strings.toString",
      "offset": [
        818,
        827
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4171": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x108D"
    },
    "4174": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4175": {
      "fn": "Strings.toString",
      "offset": [
        887,
        889
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 50,
      "value": "0xA"
    },
    "4177": {
      "fn": "Strings.toString",
      "offset": [
        880,
        884
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4178": {
      "fn": "Strings.toString",
      "offset": [
        880,
        889
      ],
      "op": "MOD",
      "path": "28"
    },
    "4179": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x30"
    },
    "4181": {
      "fn": "Strings.toString",
      "offset": [
        875,
        889
      ],
      "op": "ADD",
      "path": "28"
    },
    "4182": {
      "fn": "Strings.toString",
      "offset": [
        862,
        891
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "4184": {
      "fn": "Strings.toString",
      "offset": [
        862,
        891
      ],
      "op": "SHL",
      "path": "28"
    },
    "4185": {
      "fn": "Strings.toString",
      "offset": [
        844,
        850
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4186": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4187": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4188": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4190": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4191": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "SUB",
      "path": "28"
    },
    "4192": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4193": {
      "fn": "Strings.toString",
      "offset": [
        851,
        858
      ],
      "op": "POP",
      "path": "28"
    },
    "4194": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4195": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4196": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4197": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "LT",
      "path": "28"
    },
    "4198": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x106B"
    },
    "4201": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4202": {
      "dev": "Index out of range",
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4203": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4204": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4206": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "ADD",
      "path": "28"
    },
    "4207": {
      "fn": "Strings.toString",
      "offset": [
        844,
        859
      ],
      "op": "ADD",
      "path": "28"
    },
    "4208": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4215": {
      "op": "SHL"
    },
    "4216": {
      "op": "SUB"
    },
    "4217": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "NOT",
      "path": "28"
    },
    "4218": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "AND",
      "path": "28"
    },
    "4219": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4220": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4221": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4223": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "BYTE",
      "path": "28"
    },
    "4224": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4225": {
      "fn": "Strings.toString",
      "offset": [
        844,
        891
      ],
      "op": "MSTORE8",
      "path": "28"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "fn": "Strings.toString",
      "offset": [
        914,
        916
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 51,
      "value": "0xA"
    },
    "4229": {
      "fn": "Strings.toString",
      "offset": [
        906,
        916
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4230": {
      "fn": "Strings.toString",
      "offset": [
        906,
        916
      ],
      "op": "DIV",
      "path": "28"
    },
    "4231": {
      "fn": "Strings.toString",
      "offset": [
        906,
        916
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4232": {
      "fn": "Strings.toString",
      "offset": [
        906,
        916
      ],
      "op": "POP",
      "path": "28"
    },
    "4233": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1048"
    },
    "4236": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4237": {
      "fn": "Strings.toString",
      "offset": [
        811,
        928
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "fn": "Strings.toString",
      "offset": [
        952,
        958
      ],
      "op": "SWAP5",
      "path": "28",
      "statement": 52
    },
    "4240": {
      "fn": "Strings.toString",
      "offset": [
        221,
        967
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        221,
        967
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4246": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7797,
        7948
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4247": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7881,
        7885
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4249": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7905,
        7940
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 53,
      "value": "0x710"
    },
    "4252": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7915,
        7918
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4253": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7935,
        7938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4254": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7905,
        7914
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E5"
    },
    "4257": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        7905,
        7940
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4258": {
      "fn": "EnumerableMap._length",
      "offset": [
        4615,
        4725
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4259": {
      "fn": "EnumerableMap._length",
      "offset": [
        4698,
        4717
      ],
      "op": "SLOAD",
      "path": "26",
      "statement": 54
    },
    "4260": {
      "fn": "EnumerableMap._length",
      "offset": [
        4698,
        4717
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4261": {
      "fn": "EnumerableMap._length",
      "jump": "o",
      "offset": [
        4615,
        4725
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4262": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8630,
        8767
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4263": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8700,
        8704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4265": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8724,
        8759
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 55,
      "value": "0x710"
    },
    "4268": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8732,
        8735
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4269": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8752,
        8757
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4270": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8724,
        8731
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13FD"
    },
    "4273": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8724,
        8759
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4274": {
      "fn": "EnumerableSet.add",
      "offset": [
        8323,
        8454
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4275": {
      "fn": "EnumerableSet.add",
      "offset": [
        8390,
        8394
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4277": {
      "fn": "EnumerableSet.add",
      "offset": [
        8414,
        8446
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 56,
      "value": "0x710"
    },
    "4280": {
      "fn": "EnumerableSet.add",
      "offset": [
        8419,
        8422
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4281": {
      "fn": "EnumerableSet.add",
      "offset": [
        8439,
        8444
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4282": {
      "fn": "EnumerableSet.add",
      "offset": [
        8414,
        8418
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14C3"
    },
    "4285": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8414,
        8446
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4286": {
      "fn": "EnumerableMap.set",
      "offset": [
        7220,
        7405
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4287": {
      "fn": "EnumerableMap.set",
      "offset": [
        7309,
        7313
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4289": {
      "fn": "EnumerableMap.set",
      "offset": [
        7333,
        7397
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 57,
      "value": "0xF5F"
    },
    "4292": {
      "fn": "EnumerableMap.set",
      "offset": [
        7338,
        7341
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4293": {
      "fn": "EnumerableMap.set",
      "offset": [
        7358,
        7361
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "fn": "EnumerableMap.set",
      "offset": [
        7372,
        7395
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4303": {
      "fn": "EnumerableMap.set",
      "offset": [
        7372,
        7395
      ],
      "op": "AND",
      "path": "26"
    },
    "4304": {
      "fn": "EnumerableMap.set",
      "offset": [
        7333,
        7337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x150D"
    },
    "4307": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        7333,
        7397
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4308": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4785
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4309": {
      "fn": "EnumerableSet._at",
      "offset": [
        4676,
        4694
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 58
    },
    "4310": {
      "fn": "EnumerableSet._at",
      "offset": [
        4676,
        4694
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4311": {
      "fn": "EnumerableSet._at",
      "offset": [
        4648,
        4655
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4313": {
      "fn": "EnumerableSet._at",
      "offset": [
        4648,
        4655
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4314": {
      "branch": 110,
      "fn": "EnumerableSet._at",
      "offset": [
        4676,
        4702
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4315": {
      "op": "LT"
    },
    "4316": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1116"
    },
    "4319": {
      "branch": 110,
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4320": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4322": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4331": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4332": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4334": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "ADD",
      "path": "27"
    },
    "4335": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4336": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4337": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4339": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "ADD",
      "path": "27"
    },
    "4340": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4341": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4342": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SUB",
      "path": "27"
    },
    "4343": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x22"
    },
    "4347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4348": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4351": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "ADD",
      "path": "27"
    },
    "4352": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4353": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1737"
    },
    "4356": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x22"
    },
    "4358": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4359": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4360": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4362": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "ADD",
      "path": "27"
    },
    "4363": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4364": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "POP",
      "path": "27"
    },
    "4365": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "POP",
      "path": "27"
    },
    "4366": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4369": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4371": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SUB",
      "path": "27"
    },
    "4372": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4373": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4374": {
      "fn": "EnumerableSet._at",
      "offset": [
        4668,
        4741
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4762
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 59
    },
    "4376": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4770
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4770
      ],
      "op": "ADD",
      "path": "27"
    },
    "4379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4771,
        4776
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4380": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4381": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4382": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "LT",
      "path": "27"
    },
    "4384": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1125"
    },
    "4387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4388": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "INVALID",
      "path": "27"
    },
    "4389": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4390": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4391": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4393": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4394": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4399": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "ADD",
      "path": "27"
    },
    "4400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4759,
        4777
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4401": {
      "fn": "EnumerableSet._at",
      "offset": [
        4752,
        4777
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4752,
        4777
      ],
      "op": "POP",
      "path": "27"
    },
    "4403": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4785
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4404": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4785
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4405": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4785
      ],
      "op": "POP",
      "path": "27"
    },
    "4406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4785
      ],
      "op": "POP",
      "path": "27"
    },
    "4407": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4581,
        4785
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4408": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4409": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5203
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 60
    },
    "4410": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5203
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4411": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5154
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4413": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5154
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4414": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5154
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4415": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5154
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4416": {
      "branch": 107,
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5211
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4417": {
      "op": "LT"
    },
    "4418": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x117C"
    },
    "4421": {
      "branch": 107,
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4422": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4424": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4433": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4434": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4436": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "ADD",
      "path": "26"
    },
    "4437": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4438": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4439": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4441": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "ADD",
      "path": "26"
    },
    "4442": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4443": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4444": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SUB",
      "path": "26"
    },
    "4445": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4446": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4447": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x22"
    },
    "4449": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4450": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4451": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4453": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "ADD",
      "path": "26"
    },
    "4454": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4455": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1866"
    },
    "4458": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x22"
    },
    "4460": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4461": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "CODECOPY",
      "path": "26"
    },
    "4462": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4464": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "ADD",
      "path": "26"
    },
    "4465": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4466": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "POP",
      "path": "26"
    },
    "4467": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "POP",
      "path": "26"
    },
    "4468": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4470": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4471": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4472": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4473": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SUB",
      "path": "26"
    },
    "4474": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4475": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4476": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5250
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4477": {
      "fn": "EnumerableMap._at",
      "offset": [
        5263,
        5285
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4479": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5291
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4480": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4482": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5300
      ],
      "op": "ADD",
      "path": "26"
    },
    "4483": {
      "fn": "EnumerableMap._at",
      "offset": [
        5301,
        5306
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4484": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4485": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4486": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4487": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "LT",
      "path": "26"
    },
    "4488": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x118D"
    },
    "4491": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4492": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "INVALID",
      "path": "26"
    },
    "4493": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4494": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4495": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4497": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4498": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4500": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4502": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4503": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4504": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "4506": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "MUL",
      "path": "26"
    },
    "4507": {
      "fn": "EnumerableMap._at",
      "offset": [
        5288,
        5307
      ],
      "op": "ADD",
      "path": "26"
    },
    "4508": {
      "fn": "EnumerableMap._at",
      "offset": [
        5263,
        5307
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4509": {
      "fn": "EnumerableMap._at",
      "offset": [
        5263,
        5307
      ],
      "op": "POP",
      "path": "26"
    },
    "4510": {
      "fn": "EnumerableMap._at",
      "offset": [
        5326,
        5331
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 61
    },
    "4511": {
      "fn": "EnumerableMap._at",
      "offset": [
        5326,
        5336
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4513": {
      "fn": "EnumerableMap._at",
      "offset": [
        5326,
        5336
      ],
      "op": "ADD",
      "path": "26"
    },
    "4514": {
      "fn": "EnumerableMap._at",
      "offset": [
        5326,
        5336
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4515": {
      "fn": "EnumerableMap._at",
      "offset": [
        5338,
        5343
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4516": {
      "fn": "EnumerableMap._at",
      "offset": [
        5338,
        5350
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4518": {
      "fn": "EnumerableMap._at",
      "offset": [
        5338,
        5350
      ],
      "op": "ADD",
      "path": "26"
    },
    "4519": {
      "fn": "EnumerableMap._at",
      "offset": [
        5338,
        5350
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4520": {
      "fn": "EnumerableMap._at",
      "offset": [
        5318,
        5351
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4521": {
      "fn": "EnumerableMap._at",
      "offset": [
        5318,
        5351
      ],
      "op": "POP",
      "path": "26"
    },
    "4522": {
      "fn": "EnumerableMap._at",
      "offset": [
        5318,
        5351
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4523": {
      "fn": "EnumerableMap._at",
      "offset": [
        5318,
        5351
      ],
      "op": "POP",
      "path": "26"
    },
    "4524": {
      "fn": "EnumerableMap._at",
      "offset": [
        5318,
        5351
      ],
      "op": "POP",
      "path": "26"
    },
    "4525": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4526": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "POP",
      "path": "26"
    },
    "4527": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4528": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4529": {
      "fn": "EnumerableMap._at",
      "offset": [
        5080,
        5359
      ],
      "op": "POP",
      "path": "26"
    },
    "4530": {
      "fn": "EnumerableMap._at",
      "jump": "o",
      "offset": [
        5080,
        5359
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4531": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4532": {
      "fn": "EnumerableMap._get",
      "offset": [
        6671,
        6678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4534": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4535": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4536": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4537": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6722
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4539": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6722
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4540": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6722
      ],
      "op": "ADD",
      "path": "26"
    },
    "4541": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4543": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4544": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4546": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4547": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4548": {
      "fn": "EnumerableMap._get",
      "offset": [
        6710,
        6727
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4549": {
      "fn": "EnumerableMap._get",
      "offset": [
        6761,
        6773
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 62
    },
    "4550": {
      "branch": 108,
      "fn": "EnumerableMap._get",
      "offset": [
        6746,
        6759
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4551": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x124E"
    },
    "4554": {
      "branch": 108,
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4555": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4557": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4558": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4564": {
      "op": "SHL"
    },
    "4565": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4566": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4567": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4569": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4570": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4571": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4572": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4574": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4575": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4576": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4577": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SUB",
      "path": "26"
    },
    "4578": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4579": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4580": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4581": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4582": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4583": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4584": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4585": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4586": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4588": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4589": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4590": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4591": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4592": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4593": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4594": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4596": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4597": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4598": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4599": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4600": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4601": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4603": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4604": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4605": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4606": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "LT",
      "path": "26"
    },
    "4607": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4608": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1213"
    },
    "4611": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4612": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4613": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4614": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4615": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4616": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4617": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4618": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4619": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4620": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4622": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4623": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11FB"
    },
    "4626": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4627": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4628": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4629": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4630": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4631": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4632": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4633": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4634": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4635": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4636": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4637": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4638": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4640": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "AND",
      "path": "26"
    },
    "4641": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4642": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4643": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1240"
    },
    "4646": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4647": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4648": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4649": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SUB",
      "path": "26"
    },
    "4650": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4651": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4652": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4654": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4655": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4657": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SUB",
      "path": "26"
    },
    "4658": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "4661": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "EXP",
      "path": "26"
    },
    "4662": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SUB",
      "path": "26"
    },
    "4663": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "NOT",
      "path": "26"
    },
    "4664": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "AND",
      "path": "26"
    },
    "4665": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4666": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4667": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4669": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "ADD",
      "path": "26"
    },
    "4670": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4671": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4672": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4673": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4674": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4675": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4676": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4677": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4678": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4680": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4681": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4682": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4683": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SUB",
      "path": "26"
    },
    "4684": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4685": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4686": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4687": {
      "fn": "EnumerableMap._get",
      "offset": [
        6738,
        6774
      ],
      "op": "POP",
      "path": "26"
    },
    "4688": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6831
      ],
      "op": "DUP5",
      "path": "26",
      "statement": 63
    },
    "4689": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6840
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4691": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6840
      ],
      "op": "ADD",
      "path": "26"
    },
    "4692": {
      "fn": "EnumerableMap._get",
      "offset": [
        6852,
        6853
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4694": {
      "fn": "EnumerableMap._get",
      "offset": [
        6841,
        6849
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4695": {
      "fn": "EnumerableMap._get",
      "offset": [
        6841,
        6853
      ],
      "op": "SUB",
      "path": "26"
    },
    "4696": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4697": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4698": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4699": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "LT",
      "path": "26"
    },
    "4700": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1261"
    },
    "4703": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4704": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "INVALID",
      "path": "26"
    },
    "4705": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4706": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4707": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4709": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4710": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4712": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4714": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4715": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4716": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "4718": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "MUL",
      "path": "26"
    },
    "4719": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6854
      ],
      "op": "ADD",
      "path": "26"
    },
    "4720": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6861
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4722": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6861
      ],
      "op": "ADD",
      "path": "26"
    },
    "4723": {
      "fn": "EnumerableMap._get",
      "offset": [
        6828,
        6861
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4724": {
      "fn": "EnumerableMap._get",
      "offset": [
        6821,
        6861
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4725": {
      "fn": "EnumerableMap._get",
      "offset": [
        6821,
        6861
      ],
      "op": "POP",
      "path": "26"
    },
    "4726": {
      "fn": "EnumerableMap._get",
      "offset": [
        6821,
        6861
      ],
      "op": "POP",
      "path": "26"
    },
    "4727": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4728": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4729": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "POP",
      "path": "26"
    },
    "4730": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "POP",
      "path": "26"
    },
    "4731": {
      "fn": "EnumerableMap._get",
      "offset": [
        6577,
        6896
      ],
      "op": "POP",
      "path": "26"
    },
    "4732": {
      "fn": "EnumerableMap._get",
      "jump": "o",
      "offset": [
        6577,
        6896
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4733": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16079,
        16083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4736": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16106,
        16121
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1291"
    },
    "4739": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16106,
        16108
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4746": {
      "op": "SHL"
    },
    "4747": {
      "op": "SUB"
    },
    "4748": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16106,
        16119
      ],
      "op": "AND",
      "path": "18"
    },
    "4749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16106,
        16119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15A4"
    },
    "4752": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        16106,
        16121
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4753": {
      "branch": 103,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16106,
        16121
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16101,
        16161
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x129D"
    },
    "4757": {
      "branch": 103,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16101,
        16161
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16145,
        16149
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 64,
      "value": "0x1"
    },
    "4761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16138,
        16149
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD6"
    },
    "4764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16138,
        16149
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4765": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16101,
        16161
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16171,
        16194
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13AB"
    },
    "4771": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4778": {
      "op": "SHL"
    },
    "4779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16310,
        16322
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12B2"
    },
    "4782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16310,
        16320
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCBD"
    },
    "4785": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        16310,
        16322
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16310,
        16322
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16337,
        16341
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16356,
        16363
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16378,
        16383
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4796": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4797": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4804": {
      "op": "SHL"
    },
    "4805": {
      "op": "SUB"
    },
    "4806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4808": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4809": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4819": {
      "op": "SHL"
    },
    "4820": {
      "op": "SUB"
    },
    "4821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4853": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "LT",
      "path": "18"
    },
    "4869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1319"
    },
    "4873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1301"
    },
    "4888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1346"
    },
    "4908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "EXP",
      "path": "18"
    },
    "4924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "NOT",
      "path": "18"
    },
    "4926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "4937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SUB",
      "path": "18"
    },
    "4952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4965": {
      "op": "SHL"
    },
    "4966": {
      "op": "SUB"
    },
    "4967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "NOT",
      "path": "18"
    },
    "4968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "ADD",
      "path": "18"
    },
    "4973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4981": {
      "op": "SHL"
    },
    "4982": {
      "op": "SUB"
    },
    "4983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "AND",
      "path": "18"
    },
    "4987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "OR",
      "path": "18"
    },
    "4988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16213,
        16394
      ],
      "op": "POP",
      "path": "18"
    },
    "4994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "5000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "ADD",
      "path": "18"
    },
    "5001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "5007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "ADD",
      "path": "18"
    },
    "5012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1759"
    },
    "5015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "5017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "op": "SUB"
    },
    "5027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16212
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16212
      ],
      "op": "AND",
      "path": "18"
    },
    "5029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16212
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15AA"
    },
    "5034": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        16197,
        16449
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16197,
        16449
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16171,
        16449
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16171,
        16449
      ],
      "op": "POP",
      "path": "18"
    },
    "5038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16460,
        16473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16487,
        16497
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "ADD",
      "path": "18"
    },
    "5045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "LT",
      "path": "18"
    },
    "5051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13C4"
    },
    "5055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16476,
        16508
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5069": {
      "op": "SHL"
    },
    "5070": {
      "op": "SUB"
    },
    "5071": {
      "op": "NOT"
    },
    "5072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16527,
        16553
      ],
      "op": "AND",
      "path": "18",
      "statement": 65
    },
    "5073": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5080": {
      "op": "SHL"
    },
    "5081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16527,
        16553
      ],
      "op": "EQ",
      "path": "18"
    },
    "5082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16527,
        16553
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "POP"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "POP",
      "path": "18"
    },
    "5089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "POP",
      "path": "18"
    },
    "5090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "POP",
      "path": "18"
    },
    "5091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15958,
        16562
      ],
      "op": "POP",
      "path": "18"
    },
    "5092": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        15958,
        16562
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5093": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4395,
        4520
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5094": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4466,
        4470
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5096": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 66
    },
    "5097": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5098": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5099": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4502
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5101": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4502
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5102": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4502
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5103": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4502
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5104": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4502
      ],
      "op": "ADD",
      "path": "26"
    },
    "5105": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5107": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5108": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5110": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5111": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5112": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4507
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5113": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4512
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5114": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4512
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5115": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4490,
        4512
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5116": {
      "fn": "EnumerableMap._contains",
      "jump": "o",
      "offset": [
        4395,
        4520
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5117": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2283,
        3827
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5118": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2349,
        2353
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5120": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5121": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5122": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5123": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2500
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5125": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2500
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5126": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2500
      ],
      "op": "ADD",
      "path": "27"
    },
    "5127": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5129": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5130": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5132": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5133": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5134": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2488,
        2507
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5135": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2524,
        2539
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5136": {
      "branch": 111,
      "fn": "EnumerableSet._remove",
      "offset": [
        2524,
        2539
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5137": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2520,
        3820
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14B9"
    },
    "5140": {
      "branch": 111,
      "fn": "EnumerableSet._remove",
      "offset": [
        2520,
        3820
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5141": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2977
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5142": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2977
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5145": {
      "op": "NOT"
    },
    "5146": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2910,
        2924
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5147": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2910,
        2924
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5148": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2910,
        2924
      ],
      "op": "ADD",
      "path": "27"
    },
    "5149": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2910,
        2924
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5150": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5151": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5152": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "ADD",
      "path": "27"
    },
    "5153": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5154": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2886,
        2907
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2886,
        2907
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5157": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2962
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5158": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2962
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5159": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5160": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2959,
        2981
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5162": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "LT",
      "path": "27"
    },
    "5163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1430"
    },
    "5166": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5167": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "INVALID",
      "path": "27"
    },
    "5168": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5169": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5170": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5172": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5173": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5175": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5177": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5178": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "ADD",
      "path": "27"
    },
    "5179": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3268
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5180": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3226,
        3268
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5181": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3226,
        3268
      ],
      "op": "POP",
      "path": "27"
    },
    "5182": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3392,
        3401
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 67
    },
    "5183": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3366
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3374
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5186": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3374
      ],
      "op": "ADD",
      "path": "27"
    },
    "5187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3388
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5188": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5189": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5190": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5191": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "LT",
      "path": "27"
    },
    "5192": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x144D"
    },
    "5195": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5196": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "INVALID",
      "path": "27"
    },
    "5197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5198": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5200": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5201": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5202": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5203": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5205": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5206": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5207": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5208": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5209": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5210": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3389
      ],
      "op": "ADD",
      "path": "27"
    },
    "5211": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3401
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5212": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3401
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5213": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3401
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5214": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3401
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5215": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 68
    },
    "5216": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5217": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5218": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3511,
        3512
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5220": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3481
      ],
      "op": "DUP10",
      "path": "27"
    },
    "5221": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3481
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5222": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3481
      ],
      "op": "ADD",
      "path": "27"
    },
    "5223": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5224": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5225": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5226": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5228": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5229": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3492
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5230": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3495,
        3512
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5231": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5232": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3495,
        3512
      ],
      "op": "ADD",
      "path": "27"
    },
    "5233": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3512
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5234": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3512
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5235": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "DUP7",
      "path": "27",
      "statement": 69
    },
    "5236": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5237": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3472
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5238": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3469,
        3472
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5239": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5240": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x147D"
    },
    "5243": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5244": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "INVALID",
      "path": "27"
    },
    "5245": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5246": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5248": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5249": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SUB",
      "path": "27"
    },
    "5250": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5251": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5252": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5253": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5255": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5256": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5258": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5260": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5261": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "ADD",
      "path": "27"
    },
    "5262": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5264": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5265": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5266": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5267": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3638
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5268": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3719
      ],
      "op": "DUP7",
      "path": "27",
      "statement": 70
    },
    "5269": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3728
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5271": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3728
      ],
      "op": "ADD",
      "path": "27"
    },
    "5272": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5274": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3729,
        3734
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5275": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5276": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5277": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5279": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "ADD",
      "path": "27"
    },
    "5280": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5281": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5282": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5283": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5285": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "ADD",
      "path": "27"
    },
    "5286": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5288": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3716,
        3735
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5289": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3709,
        3735
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5291": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3709,
        3735
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5292": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3709,
        3735
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5293": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3759,
        3763
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 71,
      "value": "0x1"
    },
    "5295": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "5296": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "POP",
      "path": "27"
    },
    "5297": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "POP",
      "path": "27"
    },
    "5298": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "POP",
      "path": "27"
    },
    "5299": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "POP",
      "path": "27"
    },
    "5300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "POP",
      "path": "27"
    },
    "5301": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x713"
    },
    "5304": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3752,
        3763
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5305": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2520,
        3820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5306": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3803,
        3808
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 72,
      "value": "0x0"
    },
    "5308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3796,
        3808
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5309": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3796,
        3808
      ],
      "op": "POP",
      "path": "27"
    },
    "5310": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3796,
        3808
      ],
      "op": "POP",
      "path": "27"
    },
    "5311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3796,
        3808
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x713"
    },
    "5314": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3796,
        3808
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5315": {
      "fn": "EnumerableSet._add",
      "offset": [
        1693,
        2107
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5316": {
      "fn": "EnumerableSet._add",
      "offset": [
        1756,
        1760
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5318": {
      "fn": "EnumerableSet._add",
      "offset": [
        1778,
        1799
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14CF"
    },
    "5321": {
      "fn": "EnumerableSet._add",
      "offset": [
        1788,
        1791
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5322": {
      "fn": "EnumerableSet._add",
      "offset": [
        1793,
        1798
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5323": {
      "fn": "EnumerableSet._add",
      "offset": [
        1778,
        1787
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13E5"
    },
    "5326": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1778,
        1799
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5327": {
      "branch": 112,
      "fn": "EnumerableSet._add",
      "offset": [
        1778,
        1799
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5328": {
      "fn": "EnumerableSet._add",
      "offset": [
        1773,
        2100
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1505"
    },
    "5331": {
      "branch": 112,
      "fn": "EnumerableSet._add",
      "offset": [
        1773,
        2100
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 73
    },
    "5334": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5335": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5337": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5338": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5339": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "ADD",
      "path": "27"
    },
    "5340": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5341": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5342": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1827
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5344": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5345": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5346": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5347": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5349": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5350": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5351": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5352": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5353": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5354": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "ADD",
      "path": "27"
    },
    "5355": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5356": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5357": {
      "fn": "EnumerableSet._add",
      "offset": [
        1816,
        1839
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5358": {
      "fn": "EnumerableSet._add",
      "offset": [
        1999,
        2017
      ],
      "op": "DUP5",
      "path": "27",
      "statement": 74
    },
    "5359": {
      "fn": "EnumerableSet._add",
      "offset": [
        1999,
        2017
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5360": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5361": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5362": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5363": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1989
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5364": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1989
      ],
      "op": "DUP7",
      "path": "27"
    },
    "5365": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1989
      ],
      "op": "ADD",
      "path": "27"
    },
    "5366": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5367": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5368": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5369": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5371": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5372": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        1996
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5373": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        2017
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5374": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        2017
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5375": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        2017
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5376": {
      "fn": "EnumerableSet._add",
      "offset": [
        1977,
        2017
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5377": {
      "fn": "EnumerableSet._add",
      "offset": [
        2032,
        2043
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 75,
      "value": "0x713"
    },
    "5380": {
      "fn": "EnumerableSet._add",
      "offset": [
        2032,
        2043
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5381": {
      "fn": "EnumerableSet._add",
      "offset": [
        1773,
        2100
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5382": {
      "op": "POP"
    },
    "5383": {
      "fn": "EnumerableSet._add",
      "offset": [
        2083,
        2088
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 76,
      "value": "0x0"
    },
    "5385": {
      "fn": "EnumerableSet._add",
      "offset": [
        2076,
        2088
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x713"
    },
    "5388": {
      "fn": "EnumerableSet._add",
      "offset": [
        2076,
        2088
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5389": {
      "fn": "EnumerableMap._set",
      "offset": [
        1895,
        2587
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5390": {
      "fn": "EnumerableMap._set",
      "offset": [
        1971,
        1975
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5392": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5393": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5394": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5395": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2118
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5397": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2118
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5398": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2118
      ],
      "op": "ADD",
      "path": "26"
    },
    "5399": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5401": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5402": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5404": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5405": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5406": {
      "fn": "EnumerableMap._set",
      "offset": [
        2106,
        2123
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5407": {
      "branch": 109,
      "fn": "EnumerableMap._set",
      "offset": [
        2140,
        2153
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5408": {
      "fn": "EnumerableMap._set",
      "offset": [
        2136,
        2580
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1572"
    },
    "5411": {
      "branch": 109,
      "fn": "EnumerableMap._set",
      "offset": [
        2136,
        2580
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5412": {
      "op": "POP"
    },
    "5413": {
      "op": "POP"
    },
    "5414": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 77,
      "value": "0x40"
    },
    "5416": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5417": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5418": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5419": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5420": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "ADD",
      "path": "26"
    },
    "5421": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5422": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5423": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5424": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5425": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5426": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5428": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5429": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5430": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "ADD",
      "path": "26"
    },
    "5431": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5432": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5433": {
      "fn": "EnumerableMap._set",
      "offset": [
        2225,
        2263
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5434": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5435": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5436": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5438": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5439": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5440": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "ADD",
      "path": "26"
    },
    "5441": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP10",
      "path": "26"
    },
    "5442": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5443": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2219
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5445": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP10",
      "path": "26"
    },
    "5446": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5447": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5448": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5449": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5450": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5451": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "5452": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5453": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5455": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5456": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "5457": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "MUL",
      "path": "26"
    },
    "5458": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5459": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "5460": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "ADD",
      "path": "26"
    },
    "5461": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5462": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5463": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5464": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5465": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5466": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5467": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5468": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "ADD",
      "path": "26"
    },
    "5469": {
      "fn": "EnumerableMap._set",
      "offset": [
        2207,
        2264
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5470": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2441
      ],
      "op": "DUP7",
      "path": "26",
      "statement": 78
    },
    "5471": {
      "fn": "EnumerableMap._set",
      "offset": [
        2422,
        2441
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5472": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5473": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5474": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5475": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2414
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5476": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2414
      ],
      "op": "DUP9",
      "path": "26"
    },
    "5477": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2414
      ],
      "op": "ADD",
      "path": "26"
    },
    "5478": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5479": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5480": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5481": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5482": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5483": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5484": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2419
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5485": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2441
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5486": {
      "fn": "EnumerableMap._set",
      "offset": [
        2456,
        2467
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 79,
      "value": "0xF62"
    },
    "5489": {
      "fn": "EnumerableMap._set",
      "offset": [
        2456,
        2467
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5490": {
      "fn": "EnumerableMap._set",
      "offset": [
        2136,
        2580
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5491": {
      "fn": "EnumerableMap._set",
      "offset": [
        2536,
        2541
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 80
    },
    "5492": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2503
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5493": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2512
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5495": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2512
      ],
      "op": "ADD",
      "path": "26"
    },
    "5496": {
      "fn": "EnumerableMap._set",
      "offset": [
        2524,
        2525
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5498": {
      "fn": "EnumerableMap._set",
      "offset": [
        2513,
        2521
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5499": {
      "fn": "EnumerableMap._set",
      "offset": [
        2513,
        2525
      ],
      "op": "SUB",
      "path": "26"
    },
    "5500": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5501": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5502": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5503": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "LT",
      "path": "26"
    },
    "5504": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1585"
    },
    "5507": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5508": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "INVALID",
      "path": "26"
    },
    "5509": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5510": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5511": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5513": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5514": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5516": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5518": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5519": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5520": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5522": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "MUL",
      "path": "26"
    },
    "5523": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2526
      ],
      "op": "ADD",
      "path": "26"
    },
    "5524": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5526": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2533
      ],
      "op": "ADD",
      "path": "26"
    },
    "5527": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2541
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5528": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2541
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5529": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2541
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5530": {
      "fn": "EnumerableMap._set",
      "offset": [
        2500,
        2541
      ],
      "op": "POP",
      "path": "26"
    },
    "5531": {
      "fn": "EnumerableMap._set",
      "offset": [
        2563,
        2568
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 81,
      "value": "0x0"
    },
    "5533": {
      "fn": "EnumerableMap._set",
      "offset": [
        2556,
        2568
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5534": {
      "fn": "EnumerableMap._set",
      "offset": [
        2556,
        2568
      ],
      "op": "POP",
      "path": "26"
    },
    "5535": {
      "fn": "EnumerableMap._set",
      "offset": [
        2556,
        2568
      ],
      "op": "POP",
      "path": "26"
    },
    "5536": {
      "fn": "EnumerableMap._set",
      "offset": [
        2556,
        2568
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF62"
    },
    "5539": {
      "fn": "EnumerableMap._set",
      "offset": [
        2556,
        2568
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5540": {
      "fn": "Address.isContract",
      "offset": [
        751,
        1173
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5541": {
      "fn": "Address.isContract",
      "offset": [
        1118,
        1138
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "5542": {
      "fn": "Address.isContract",
      "offset": [
        1157,
        1165
      ],
      "op": "ISZERO",
      "path": "23",
      "statement": 82
    },
    "5543": {
      "fn": "Address.isContract",
      "offset": [
        1157,
        1165
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5544": {
      "fn": "Address.isContract",
      "offset": [
        1157,
        1165
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5545": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        751,
        1173
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5546": {
      "fn": "Address.functionCall",
      "offset": [
        3669,
        3864
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5547": {
      "fn": "Address.functionCall",
      "offset": [
        3772,
        3784
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5549": {
      "fn": "Address.functionCall",
      "offset": [
        3804,
        3856
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 83,
      "value": "0xF5F"
    },
    "5552": {
      "fn": "Address.functionCall",
      "offset": [
        3826,
        3832
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5553": {
      "fn": "Address.functionCall",
      "offset": [
        3834,
        3838
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5554": {
      "fn": "Address.functionCall",
      "offset": [
        3840,
        3841
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5556": {
      "fn": "Address.functionCall",
      "offset": [
        3843,
        3855
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5557": {
      "fn": "Address.functionCall",
      "offset": [
        3772,
        3784
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4991
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 84,
      "value": "0x15BE"
    },
    "5561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4984,
        4990
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4983
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15A4"
    },
    "5565": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4973,
        4991
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5566": {
      "branch": 104,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4991
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160F"
    },
    "5570": {
      "branch": 104,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5581": {
      "op": "SHL"
    },
    "5582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "ADD",
      "path": "23"
    },
    "5590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1D"
    },
    "5593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "ADD",
      "path": "23"
    },
    "5597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "ADD",
      "path": "23"
    },
    "5635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "SUB",
      "path": "23"
    },
    "5642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "5644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "ADD",
      "path": "23"
    },
    "5645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4965,
        5025
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5111
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5136
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5146
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5659": {
      "op": "SHL"
    },
    "5660": {
      "op": "SUB"
    },
    "5661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5151
      ],
      "op": "AND",
      "path": "23"
    },
    "5662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5160,
        5165
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5168,
        5172
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "LT",
      "path": "23"
    },
    "5684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x164E"
    },
    "5687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5694": {
      "op": "NOT"
    },
    "5695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x162F"
    },
    "5709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "5713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SUB",
      "path": "23"
    },
    "5717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "5720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "EXP",
      "path": "23"
    },
    "5721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SUB",
      "path": "23"
    },
    "5722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "NOT",
      "path": "23"
    },
    "5724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "AND",
      "path": "23"
    },
    "5727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "AND",
      "path": "23"
    },
    "5731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "OR",
      "path": "23"
    },
    "5734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SUB",
      "path": "23"
    },
    "5756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "GAS",
      "path": "23"
    },
    "5760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "CALL",
      "path": "23"
    },
    "5761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5769": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "EQ",
      "path": "23"
    },
    "5771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16B0"
    },
    "5774": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5775": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "5782": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "NOT",
      "path": "23"
    },
    "5783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3F"
    },
    "5785": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5786": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "AND",
      "path": "23"
    },
    "5788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5789": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5795": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "ADD",
      "path": "23"
    },
    "5803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "5804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16B5"
    },
    "5807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5808": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5140,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5173
      ],
      "op": "POP",
      "path": "23"
    },
    "5819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5191,
        5243
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 85,
      "value": "0x16C5"
    },
    "5822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5209,
        5216
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5218,
        5228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5230,
        5242
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5191,
        5208
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D0"
    },
    "5828": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5191,
        5243
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5191,
        5243
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5184,
        5243
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "5831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4721,
        5251
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "op": "POP"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4721,
        5251
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5840": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        8003
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5841": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7376,
        7388
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5843": {
      "branch": 105,
      "fn": "Address._verifyCallResult",
      "offset": [
        7405,
        7412
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5844": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7401,
        7996
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5845": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7401,
        7996
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16DF"
    },
    "5848": {
      "branch": 105,
      "fn": "Address._verifyCallResult",
      "offset": [
        7401,
        7996
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5849": {
      "op": "POP"
    },
    "5850": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7436,
        7446
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 86
    },
    "5851": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7429,
        7446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF62"
    },
    "5854": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7429,
        7446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5855": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7401,
        7996
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5856": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7550,
        7567
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5857": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7550,
        7567
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5858": {
      "branch": 106,
      "fn": "Address._verifyCallResult",
      "offset": [
        7550,
        7571
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5859": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7546,
        7985
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16EF"
    },
    "5862": {
      "branch": 106,
      "fn": "Address._verifyCallResult",
      "offset": [
        7546,
        7985
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5863": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7813,
        7823
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5864": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7807,
        7824
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5865": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7874,
        7889
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5866": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7861,
        7871
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5867": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7857,
        7859
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5869": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7853,
        7872
      ],
      "op": "ADD",
      "path": "23"
    },
    "5870": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7846,
        7890
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5871": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7761,
        7909
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5872": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 87,
      "value": "0x40"
    },
    "5874": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5881": {
      "op": "SHL"
    },
    "5882": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5883": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5884": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5886": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5888": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5889": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5890": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5891": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5892": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5893": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5894": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5895": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5897": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5898": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5899": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5900": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5901": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5902": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7956,
        7968
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5903": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7956,
        7968
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5904": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5905": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5906": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5907": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5908": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5910": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5911": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5912": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5913": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5914": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5915": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5916": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5917": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5918": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5919": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5921": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5922": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5923": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1213"
    },
    "5926": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5927": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5928": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5929": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5930": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5931": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5932": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5933": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5934": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5935": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5937": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "ADD",
      "path": "23"
    },
    "5938": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11FB"
    },
    "5941": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7949,
        7969
      ],
      "op": "JUMP",
      "path": "23"
    }
  },
  "sha1": "3049443791a8b85dce804d3ed46975840839b110",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC721.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./IERC721Enumerable.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/EnumerableSet.sol\";\nimport \"../../utils/EnumerableMap.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using SafeMath for uint256;\n    using Address for address;\n    using EnumerableSet for EnumerableSet.UintSet;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n    using Strings for uint256;\n\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n\n    // Mapping from holder address to their (enumerable) set of owned tokens\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n\n    // Enumerable mapping from token ids to their owners\n    EnumerableMap.UintToAddressMap private _tokenOwners;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Optional mapping for token URIs\n    mapping (uint256 => string) private _tokenURIs;\n\n    // Base URI\n    string private _baseURI;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\n     *\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\n     *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /*\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\n     *\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721);\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _holderTokens[owner].length();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return _tokenOwners.get(tokenId, \"ERC721: owner query for nonexistent token\");\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n        return string(abi.encodePacked(base, tokenId.toString()));\n    }\n\n    /**\n    * @dev Returns the base URI set via {_setBaseURI}. This will be\n    * automatically added as a prefix in {tokenURI} to each token's URI, or\n    * to the token ID if no specific URI is set for that token ID.\n    */\n    function baseURI() public view virtual returns (string memory) {\n        return _baseURI;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        return _holderTokens[owner].at(index);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds\n        return _tokenOwners.length();\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        (uint256 tokenId, ) = _tokenOwners.at(index);\n        return tokenId;\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _tokenOwners.contains(tokenId);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     d*\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId); // internal owner\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        // Clear metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n\n        _holderTokens[owner].remove(tokenId);\n\n        _tokenOwners.remove(tokenId);\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\"); // internal owner\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _holderTokens[from].remove(tokenId);\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721Metadata: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI},\n     * or to the token ID if {tokenURI} is empty.\n     */\n    function _setBaseURI(string memory baseURI_) internal virtual {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (!to.isContract()) {\n            return true;\n        }\n        bytes memory returndata = to.functionCall(abi.encodeWithSelector(\n            IERC721Receiver(to).onERC721Received.selector,\n            _msgSender(),\n            from,\n            tokenId,\n            _data\n        ), \"ERC721: transfer to non ERC721Receiver implementer\");\n        bytes4 retval = abi.decode(returndata, (bytes4));\n        return (retval == _ERC721_RECEIVED);\n    }\n\n    function _approve(address to, uint256 tokenId) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId); // internal owner\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "591:16871:18:-:0;;;3669:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3669:377:18;;;;;;;;;;-1:-1:-1;3669:377:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3669:377:18;;;;;;;;;;-1:-1:-1;3669:377:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3669:377:18;;-1:-1:-1;794:40:8;;-1:-1:-1;;;;813:20:8;-1:-1:-1;794:18:8;:40::i;:::-;3744:13:18;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3768:17:18;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3876:40:18;-1:-1:-1;;;3876:18:18;:40::i;:::-;3927:49;-1:-1:-1;;;3927:18:18;:49::i;:::-;3987:51;-1:-1:-1;;;3987:18:18;:51::i;:::-;3669:377;;591:16871;;1556:201:8;-1:-1:-1;;;;;;1640:25:8;;;;;1632:66;;;;;-1:-1:-1;;;1632:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1709:33:8;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1709:40:8;1745:4;1709:40;;;1556:201::o;591:16871:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;591:16871:18;;;-1:-1:-1;591:16871:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}