{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NerveToken",
          "name": "_nerve",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nervePerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nerve",
      "outputs": [
        {
          "internalType": "contract NerveToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nervePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingNerve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accNervePerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nervePerBlock",
          "type": "uint256"
        }
      ],
      "name": "setNervePerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "123": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "124": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
    "128": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "129": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "143": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "145": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "149": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "20": "contracts/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "21": "contracts/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "35": "contracts/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "6": "contracts/MasterMind.sol",
    "9": "contracts/NerveToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterMind.sol",
    "exportedSymbols": {
      "MasterMind": [
        911
      ]
    },
    "id": 912,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 95,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 23377,
        "src": "58:73:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "./openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 23590,
        "src": "132:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
        "file": "./openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 27846,
        "src": "209:74:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "./openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 13827,
        "src": "284:68:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "./openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 11645,
        "src": "353:69:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NerveToken.sol",
        "file": "./NerveToken.sol",
        "id": 101,
        "nodeType": "ImportDirective",
        "scope": 912,
        "sourceUnit": 5470,
        "src": "423:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 102,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11644,
              "src": "777:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$11644",
                "typeString": "contract Ownable"
              }
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "777:7:6"
          }
        ],
        "contractDependencies": [
          11644,
          26632
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 911,
        "linearizedBaseContracts": [
          911,
          11644,
          26632
        ],
        "name": "MasterMind",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 106,
            "libraryName": {
              "contractScope": null,
              "id": 104,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13826,
              "src": "797:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$13826",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "791:27:6",
            "typeName": {
              "id": 105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 109,
            "libraryName": {
              "contractScope": null,
              "id": 107,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23589,
              "src": "829:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$23589",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "823:27:6",
            "typeName": {
              "contractScope": null,
              "id": 108,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23376,
              "src": "843:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$23376",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "MasterMind.UserInfo",
            "id": 114,
            "members": [
              {
                "constant": false,
                "id": 111,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 114,
                "src": "907:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 110,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "907:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 113,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 114,
                "src": "976:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 112,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "976:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 911,
            "src": "881:777:6",
            "visibility": "public"
          },
          {
            "canonicalName": "MasterMind.PoolInfo",
            "id": 123,
            "members": [
              {
                "constant": false,
                "id": 116,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 123,
                "src": "1715:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$23376",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 115,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 23376,
                  "src": "1715:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$23376",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 118,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 123,
                "src": "1772:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 117,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1772:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 123,
                "src": "1882:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 119,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "accNervePerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 123,
                "src": "1966:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 121,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1966:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 911,
            "src": "1689:361:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd4eb5db",
            "id": 125,
            "mutability": "mutable",
            "name": "nerve",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2079:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NerveToken_$5469",
              "typeString": "contract NerveToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 124,
              "name": "NerveToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5469,
              "src": "2079:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NerveToken_$5469",
                "typeString": "contract NerveToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 127,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2128:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 126,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2128:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 129,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2206:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2206:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89c0a57f",
            "id": 131,
            "mutability": "mutable",
            "name": "nervePerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2279:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2279:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8aa28550",
            "id": 134,
            "mutability": "constant",
            "name": "BONUS_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2360:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 132,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2360:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2403:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 137,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2437:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
              "typeString": "struct MasterMind.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 135,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 123,
                "src": "2437:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                  "typeString": "struct MasterMind.PoolInfo"
                }
              },
              "id": 136,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2437:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage_ptr",
                "typeString": "struct MasterMind.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 143,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2517:64:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo))"
            },
            "typeName": {
              "id": 142,
              "keyType": {
                "id": 138,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2525:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2517:48:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo))"
              },
              "valueType": {
                "id": 141,
                "keyType": {
                  "id": 139,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2544:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2536:28:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$",
                  "typeString": "mapping(address => struct MasterMind.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 140,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 114,
                  "src": "2555:8:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                    "typeString": "struct MasterMind.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 146,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2674:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 144,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2674:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 145,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2707:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 148,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 911,
            "src": "2764:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2764:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 156,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "2809:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "2831:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "2852:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2808:59:6"
            },
            "src": "2795:73:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 164,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 164,
                  "src": "2888:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2888:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 164,
                  "src": "2910:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 164,
                  "src": "2931:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2887:59:6"
            },
            "src": "2873:74:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 172,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2985:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "3015:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "3044:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2975:89:6"
            },
            "src": "2952:113:6"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "3242:173:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "nerve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "3252:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NerveToken_$5469",
                        "typeString": "contract NerveToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "_nerve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "3260:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NerveToken_$5469",
                        "typeString": "contract NerveToken"
                      }
                    },
                    "src": "3252:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NerveToken_$5469",
                      "typeString": "contract NerveToken"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:14:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3276:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "3286:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3276:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:18:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "nervePerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3304:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_nervePerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "3320:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3304:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "3344:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3360:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3344:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3384:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "3397:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3384:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3384:24:6"
                }
              ]
            },
            "documentation": null,
            "id": 206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "_nerve",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "3092:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NerveToken_$5469",
                    "typeString": "contract NerveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 173,
                    "name": "NerveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5469,
                    "src": "3092:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NerveToken_$5469",
                      "typeString": "contract NerveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "3119:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_nervePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "3145:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "3177:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3177:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "3206:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3082:152:6"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3242:0:6"
            },
            "scope": 911,
            "src": "3071:344:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "3475:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3492:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3492:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 210,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "3485:22:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3440:2:6"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 215,
                  "src": "3466:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3465:9:6"
            },
            "scope": 911,
            "src": "3421:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "3587:47:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "nervePerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3597:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_nervePerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3613:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3597:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:30:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "341065b7",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 220,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 219,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11593,
                  "src": "3577:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3577:9:6"
              }
            ],
            "name": "setNervePerBlock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_nervePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 227,
                  "src": "3546:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3545:24:6"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3587:0:6"
            },
            "scope": 911,
            "src": "3520:114:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3915:470:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 238,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 233,
                    "src": "3929:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 243,
                  "nodeType": "IfStatement",
                  "src": "3925:59:6",
                  "trueBody": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "3942:42:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 239,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "3956:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3956:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "3956:17:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 273,
                      "src": "3993:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3993:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 254,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4031:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4031:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "4046:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4031:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "4074:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4031:53:6",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4059:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4059:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3993:91:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "4094:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 258,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "4132:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 256,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "4112:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13653,
                        "src": "4112:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4112:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4094:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 266,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "4217:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$23376",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4255:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 268,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "4301:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4352:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$23376",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 265,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "4181:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$123_storage_ptr_$",
                            "typeString": "type(struct MasterMind.PoolInfo storage pointer)"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accNervePerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4181:187:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_memory_ptr",
                          "typeString": "struct MasterMind.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_memory_ptr",
                          "typeString": "struct MasterMind.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4154:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                          "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4154:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$123_storage_$returns$__$",
                        "typeString": "function (struct MasterMind.PoolInfo storage ref)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:224:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:224:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1eaaa045",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 236,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 235,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11593,
                  "src": "3905:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3905:9:6"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 274,
                  "src": "3821:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3821:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 274,
                  "src": "3850:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$23376",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 230,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23376,
                    "src": "3850:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$23376",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 274,
                  "src": "3875:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3875:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3811:86:6"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3915:0:6"
            },
            "scope": 911,
            "src": "3799:586:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4592:237:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 285,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 280,
                    "src": "4606:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 290,
                  "nodeType": "IfStatement",
                  "src": "4602:59:6",
                  "trueBody": {
                    "id": 289,
                    "nodeType": "Block",
                    "src": "4619:42:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 286,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "4633:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4633:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "4633:17:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 291,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "4670:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 300,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "4752:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 294,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "4708:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                                    "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 296,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 295,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "4717:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4708:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                                  "typeString": "struct MasterMind.PoolInfo storage ref"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 118,
                              "src": "4708:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "4688:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13675,
                            "src": "4688:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4688:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13653,
                        "src": "4688:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4688:85:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4670:103:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4670:103:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "4783:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                            "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 305,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "4792:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4783:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                          "typeString": "struct MasterMind.PoolInfo storage ref"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "4783:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 308,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4811:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4783:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:39:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 283,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 282,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11593,
                  "src": "4582:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4582:9:6"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "4501:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "4523:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "4552:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4491:83:6"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4592:0:6"
            },
            "scope": 911,
            "src": "4479:350:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "5011:356:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 321,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "5025:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "5032:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5025:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "5125:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 334,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "5134:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5125:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 356,
                      "nodeType": "Block",
                      "src": "5201:160:6",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 352,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 129,
                                    "src": "5318:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 350,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "5310:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13675,
                                  "src": "5310:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5310:22:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 347,
                                    "name": "BONUS_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 134,
                                    "src": "5267:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 344,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 314,
                                        "src": "5256:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 342,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 129,
                                        "src": "5238:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13675,
                                      "src": "5238:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5238:24:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13709,
                                  "src": "5238:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5238:46:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13653,
                              "src": "5238:50:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5238:112:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 320,
                          "id": 355,
                          "nodeType": "Return",
                          "src": "5215:135:6"
                        }
                      ]
                    },
                    "id": 357,
                    "nodeType": "IfStatement",
                    "src": "5121:240:6",
                    "trueBody": {
                      "id": 341,
                      "nodeType": "Block",
                      "src": "5149:46:6",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 338,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 314,
                                "src": "5178:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 336,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "5170:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13675,
                              "src": "5170:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5170:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 320,
                          "id": 340,
                          "nodeType": "Return",
                          "src": "5163:21:6"
                        }
                      ]
                    }
                  },
                  "id": 358,
                  "nodeType": "IfStatement",
                  "src": "5021:340:6",
                  "trueBody": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "5047:68:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "BONUS_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "5087:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 326,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 314,
                                  "src": "5076:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 324,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "5068:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13675,
                                "src": "5068:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5068:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13709,
                            "src": "5068:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5068:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 320,
                        "id": 331,
                        "nodeType": "Return",
                        "src": "5061:43:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 360,
                  "src": "4925:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4925:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 360,
                  "src": "4940:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4940:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4924:28:6"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 360,
                  "src": "4998:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4997:9:6"
            },
            "scope": 911,
            "src": "4902:465:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "5539:774:6",
              "statements": [
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 459,
                      "src": "5549:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 369,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 123,
                        "src": "5549:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 371,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "5573:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 372,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "5582:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5573:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                      "typeString": "struct MasterMind.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5549:38:6"
                },
                {
                  "assignments": [
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 459,
                      "src": "5597:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                        "typeString": "struct MasterMind.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 375,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 114,
                        "src": "5597:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 377,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "5621:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo storage ref))"
                        }
                      },
                      "id": 379,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5630:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5621:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$",
                        "typeString": "mapping(address => struct MasterMind.UserInfo storage ref)"
                      }
                    },
                    "id": 381,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 380,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "5636:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5621:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$114_storage",
                      "typeString": "struct MasterMind.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5597:45:6"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "accNervePerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 459,
                      "src": "5652:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5652:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 387,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "5679:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo storage pointer"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accNervePerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 122,
                    "src": "5679:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5652:48:6"
                },
                {
                  "assignments": [
                    389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 459,
                      "src": "5710:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5710:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 395,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5760:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          ],
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5752:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5752:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5752:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "5729:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "5729:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23315,
                      "src": "5729:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5729:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5710:56:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5780:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5780:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "5795:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "5795:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5780:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "5819:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5831:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5819:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5780:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 445,
                  "nodeType": "IfStatement",
                  "src": "5776:450:6",
                  "trueBody": {
                    "id": 444,
                    "nodeType": "Block",
                    "src": "5834:392:6",
                    "statements": [
                      {
                        "assignments": [
                          409
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 409,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 444,
                            "src": "5848:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 408,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5848:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 416,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 411,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "5899:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                  "typeString": "struct MasterMind.PoolInfo storage pointer"
                                }
                              },
                              "id": 412,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120,
                              "src": "5899:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 413,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5921:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5921:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 410,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "5885:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5885:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5848:86:6"
                      },
                      {
                        "assignments": [
                          418
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 418,
                            "mutability": "mutable",
                            "name": "nerveReward",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 444,
                            "src": "5948:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 417,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5948:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 430,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 428,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "6062:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 424,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "6020:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                      "typeString": "struct MasterMind.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 118,
                                  "src": "6020:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 421,
                                      "name": "nervePerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 131,
                                      "src": "6001:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 419,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 409,
                                      "src": "5986:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13709,
                                    "src": "5986:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5986:29:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13709,
                                "src": "5986:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5986:50:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13731,
                            "src": "5986:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5986:109:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5948:147:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 431,
                            "name": "accNervePerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6109:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 439,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 389,
                                    "src": "6192:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 436,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6182:4:6",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 434,
                                        "name": "nerveReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 418,
                                        "src": "6166:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13709,
                                      "src": "6166:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6166:21:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13731,
                                  "src": "6166:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6166:35:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 432,
                                "name": "accNervePerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "6128:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13653,
                              "src": "6128:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6128:87:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6109:106:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "6109:106:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 455,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "6290:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                            "typeString": "struct MasterMind.UserInfo storage pointer"
                          }
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 113,
                        "src": "6290:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6280:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 449,
                                "name": "accNervePerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "6258:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 446,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "6242:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                    "typeString": "struct MasterMind.UserInfo storage pointer"
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 111,
                                "src": "6242:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13709,
                              "src": "6242:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6242:33:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13731,
                          "src": "6242:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6242:43:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13675,
                      "src": "6242:47:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 368,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "6235:71:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "44b0cdbe",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingNerve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "5450:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5450:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "5464:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5449:29:6"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "5526:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5525:9:6"
            },
            "scope": 911,
            "src": "5428:885:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "6427:141:6",
              "statements": [
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 484,
                      "src": "6437:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6437:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 465,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "6454:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6454:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6437:32:6"
                },
                {
                  "body": {
                    "id": 482,
                    "nodeType": "Block",
                    "src": "6522:40:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 479,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "6547:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 478,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 595,
                            "src": "6536:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6536:15:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "6536:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "6501:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 473,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "6507:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6501:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 483,
                  "initializationExpression": {
                    "assignments": [
                      469
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 483,
                        "src": "6484:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6484:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 471,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6498:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6484:15:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6515:5:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "6517:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 477,
                    "nodeType": "ExpressionStatement",
                    "src": "6515:5:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "6479:83:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6417:2:6"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6427:0:6"
            },
            "scope": 911,
            "src": "6393:175:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "6682:797:6",
              "statements": [
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 594,
                      "src": "6692:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 490,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 123,
                        "src": "6692:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 495,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "6716:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 494,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 493,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "6725:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6716:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                      "typeString": "struct MasterMind.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6692:38:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6744:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6744:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 498,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "6760:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo storage pointer"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120,
                      "src": "6760:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6744:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 503,
                  "nodeType": "IfStatement",
                  "src": "6740:73:6",
                  "trueBody": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "6782:31:6",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 489,
                        "id": 501,
                        "nodeType": "Return",
                        "src": "6796:7:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 505,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 594,
                      "src": "6822:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 504,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6822:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 511,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6872:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          ],
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6864:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 509,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6864:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6864:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "6841:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "6841:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23315,
                      "src": "6841:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6841:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6822:56:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 515,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "6892:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6904:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6892:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 527,
                  "nodeType": "IfStatement",
                  "src": "6888:99:6",
                  "trueBody": {
                    "id": 526,
                    "nodeType": "Block",
                    "src": "6907:80:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 518,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "6921:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                "typeString": "struct MasterMind.PoolInfo storage pointer"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 120,
                            "src": "6921:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 521,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6944:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6944:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6921:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "6921:35:6"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 489,
                        "id": 525,
                        "nodeType": "Return",
                        "src": "6970:7:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 594,
                      "src": "6996:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6996:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 531,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "7031:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "7031:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7053:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7053:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 530,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "7017:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7017:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6996:70:6"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "nerveReward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 594,
                      "src": "7076:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7076:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 550,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "7182:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 544,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "7144:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                "typeString": "struct MasterMind.PoolInfo storage pointer"
                              }
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 118,
                            "src": "7144:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 541,
                                "name": "nervePerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "7125:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 539,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 529,
                                "src": "7110:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13709,
                              "src": "7110:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7110:29:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13709,
                          "src": "7110:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7110:50:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13731,
                      "src": "7110:54:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7110:101:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7076:135:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "7232:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7257:2:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "nerveReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "7241:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13731,
                          "src": "7241:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7241:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 551,
                        "name": "nerve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "7221:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NerveToken_$5469",
                          "typeString": "contract NerveToken"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4867,
                      "src": "7221:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:40:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 566,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7290:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          ],
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7282:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7282:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7282:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "nerveReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "7297:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "nerve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "7271:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NerveToken_$5469",
                          "typeString": "contract NerveToken"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4867,
                      "src": "7271:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7271:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "7271:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 571,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "7319:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo storage pointer"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accNervePerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122,
                      "src": "7319:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 582,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "7408:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7398:4:6",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 577,
                                  "name": "nerveReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "7382:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13709,
                                "src": "7382:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7382:21:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13731,
                            "src": "7382:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7382:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 574,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "7343:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                              "typeString": "struct MasterMind.PoolInfo storage pointer"
                            }
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accNervePerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 122,
                          "src": "7343:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13653,
                        "src": "7343:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7343:84:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7319:108:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:108:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "7437:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo storage pointer"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120,
                      "src": "7437:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7460:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7460:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7437:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "7437:35:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "6661:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6661:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6660:14:6"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6682:0:6"
            },
            "scope": 911,
            "src": "6641:838:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "7601:692:6",
              "statements": [
                {
                  "assignments": [
                    603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 697,
                      "src": "7611:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 602,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 123,
                        "src": "7611:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 604,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "7635:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 606,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 605,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7644:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7635:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                      "typeString": "struct MasterMind.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7611:38:6"
                },
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 697,
                      "src": "7659:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                        "typeString": "struct MasterMind.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 608,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 114,
                        "src": "7659:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "7683:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo storage ref))"
                        }
                      },
                      "id": 612,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "7692:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7683:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$",
                        "typeString": "mapping(address => struct MasterMind.UserInfo storage ref)"
                      }
                    },
                    "id": 615,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7698:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7698:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7683:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$114_storage",
                      "typeString": "struct MasterMind.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7659:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "7730:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 617,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "7719:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7719:16:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "7719:16:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 621,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "7749:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "7749:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7763:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7749:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 648,
                  "nodeType": "IfStatement",
                  "src": "7745:239:6",
                  "trueBody": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "7766:218:6",
                    "statements": [
                      {
                        "assignments": [
                          626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 626,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 647,
                            "src": "7780:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 625,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7780:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 640,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 637,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "7888:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                  "typeString": "struct MasterMind.UserInfo storage pointer"
                                }
                              },
                              "id": 638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 113,
                              "src": "7888:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7857:4:6",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 630,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 603,
                                        "src": "7830:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                          "typeString": "struct MasterMind.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 631,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accNervePerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 122,
                                      "src": "7830:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 627,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 609,
                                        "src": "7814:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                          "typeString": "struct MasterMind.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 628,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "7814:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13709,
                                    "src": "7814:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7814:38:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13731,
                                "src": "7814:42:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7814:48:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13675,
                            "src": "7814:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7814:107:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7780:141:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 642,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7953:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7953:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 644,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "7965:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 641,
                            "name": "safeNerveTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "7935:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7935:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "7935:38:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 656,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8044:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8044:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8036:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8036:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8036:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 661,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8077:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          ],
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8069:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 659,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8069:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8069:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "8096:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 649,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 603,
                          "src": "7993:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "7993:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23435,
                      "src": "7993:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$23376_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$23376_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7993:120:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "7993:120:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "8123:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "8123:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "8153:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 669,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "8137:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                              "typeString": "struct MasterMind.UserInfo storage pointer"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "8137:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13653,
                        "src": "8137:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8137:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8123:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "8123:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "8171:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "8171:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8232:4:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 682,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 603,
                                "src": "8205:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                  "typeString": "struct MasterMind.PoolInfo storage pointer"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accNervePerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122,
                              "src": "8205:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 679,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "8189:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                  "typeString": "struct MasterMind.UserInfo storage pointer"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "8189:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13709,
                            "src": "8189:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8189:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13731,
                        "src": "8189:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8189:48:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8171:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "8171:66:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 691,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8260:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8260:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "8272:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "8278:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 690,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "8252:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8252:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "EmitStatement",
                  "src": "8247:39:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 698,
                  "src": "7563:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7563:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 698,
                  "src": "7577:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7577:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7562:31:6"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7601:0:6"
            },
            "scope": 911,
            "src": "7546:747:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "8398:630:6",
              "statements": [
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 798,
                      "src": "8408:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 705,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 123,
                        "src": "8408:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 710,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 707,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "8432:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 709,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 708,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "8441:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8432:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                      "typeString": "struct MasterMind.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8408:38:6"
                },
                {
                  "assignments": [
                    712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 712,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 798,
                      "src": "8456:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                        "typeString": "struct MasterMind.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 711,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 114,
                        "src": "8456:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 719,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "8480:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo storage ref))"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8489:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8480:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$",
                        "typeString": "mapping(address => struct MasterMind.UserInfo storage ref)"
                      }
                    },
                    "id": 718,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 716,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8495:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8495:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8480:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$114_storage",
                      "typeString": "struct MasterMind.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8456:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 721,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "8524:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                              "typeString": "struct MasterMind.UserInfo storage pointer"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "8524:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 723,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "8539:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8524:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8548:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8516:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8516:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "8516:53:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8590:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 728,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "8579:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8579:16:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "8579:16:6"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 798,
                      "src": "8605:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8605:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 744,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "8705:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                            "typeString": "struct MasterMind.UserInfo storage pointer"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 113,
                        "src": "8705:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8678:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 737,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 706,
                                  "src": "8651:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                    "typeString": "struct MasterMind.PoolInfo storage pointer"
                                  }
                                },
                                "id": 738,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accNervePerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 122,
                                "src": "8651:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 734,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 712,
                                  "src": "8635:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                    "typeString": "struct MasterMind.UserInfo storage pointer"
                                  }
                                },
                                "id": 735,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 111,
                                "src": "8635:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13709,
                              "src": "8635:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8635:38:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13731,
                          "src": "8635:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8635:48:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13675,
                      "src": "8635:52:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8635:99:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8605:129:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 749,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8762:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8762:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "8774:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 748,
                      "name": "safeNerveTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "8744:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8744:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "8792:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "8792:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 760,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "8822:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 757,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "8806:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                              "typeString": "struct MasterMind.UserInfo storage pointer"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "8806:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13675,
                        "src": "8806:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8806:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8792:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "8792:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "8840:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "8840:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8901:4:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 770,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 706,
                                "src": "8874:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                                  "typeString": "struct MasterMind.PoolInfo storage pointer"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accNervePerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122,
                              "src": "8874:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 767,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "8858:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                                  "typeString": "struct MasterMind.UserInfo storage pointer"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "8858:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13709,
                            "src": "8858:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8858:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13731,
                        "src": "8858:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8858:48:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8840:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "8840:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 785,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8950:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8950:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8942:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8942:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8942:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "8963:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 778,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "8916:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "8916:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23410,
                      "src": "8916:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$23376_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$23376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8916:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "8916:55:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 792,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8995:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8995:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "9007:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "9013:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "8986:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8986:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "EmitStatement",
                  "src": "8981:40:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 799,
                  "src": "8360:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8360:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 799,
                  "src": "8374:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8374:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8359:31:6"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8398:0:6"
            },
            "scope": 911,
            "src": "8342:686:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "9144:301:6",
              "statements": [
                {
                  "assignments": [
                    805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 853,
                      "src": "9154:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                        "typeString": "struct MasterMind.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 804,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 123,
                        "src": "9154:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                          "typeString": "struct MasterMind.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 809,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 806,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "9178:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$123_storage_$dyn_storage",
                        "typeString": "struct MasterMind.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 808,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 807,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "9187:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9178:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$123_storage",
                      "typeString": "struct MasterMind.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9154:38:6"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 853,
                      "src": "9202:21:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                        "typeString": "struct MasterMind.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 810,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 114,
                        "src": "9202:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "9226:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterMind.UserInfo storage ref))"
                        }
                      },
                      "id": 814,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 813,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "9235:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9226:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$114_storage_$",
                        "typeString": "mapping(address => struct MasterMind.UserInfo storage ref)"
                      }
                    },
                    "id": 817,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9241:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9241:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9226:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$114_storage",
                      "typeString": "struct MasterMind.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9202:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 826,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9296:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9296:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9288:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 824,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9288:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9288:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 811,
                          "src": "9309:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                            "typeString": "struct MasterMind.UserInfo storage pointer"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "9309:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 819,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "9262:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$123_storage_ptr",
                            "typeString": "struct MasterMind.PoolInfo storage pointer"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "9262:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23410,
                      "src": "9262:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$23376_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$23376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9262:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "9262:59:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9354:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9354:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 836,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "9366:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 837,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 811,
                          "src": "9372:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                            "typeString": "struct MasterMind.UserInfo storage pointer"
                          }
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "9372:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 833,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "9336:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9336:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "EmitStatement",
                  "src": "9331:53:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9394:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "9394:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9408:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9394:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "9394:15:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 847,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9419:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$114_storage_ptr",
                          "typeString": "struct MasterMind.UserInfo storage pointer"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "9419:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9437:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9419:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "9419:19:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 854,
                  "src": "9123:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9123:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9122:14:6"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9144:0:6"
            },
            "scope": 911,
            "src": "9096:349:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "9624:212:6",
              "statements": [
                {
                  "assignments": [
                    862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 862,
                      "mutability": "mutable",
                      "name": "nerveBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 891,
                      "src": "9634:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 861,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9634:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 870,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 867,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9677:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterMind_$911",
                              "typeString": "contract MasterMind"
                            }
                          ],
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9669:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9669:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9669:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 863,
                        "name": "nerve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "9653:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NerveToken_$5469",
                          "typeString": "contract NerveToken"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22405,
                      "src": "9653:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9653:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9634:49:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 871,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "9697:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 872,
                      "name": "nerveBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "9707:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9697:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 889,
                    "nodeType": "Block",
                    "src": "9777:53:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 885,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "9806:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 886,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "9811:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 882,
                              "name": "nerve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "9791:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NerveToken_$5469",
                                "typeString": "contract NerveToken"
                              }
                            },
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22426,
                            "src": "9791:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9791:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "9791:28:6"
                      }
                    ]
                  },
                  "id": 890,
                  "nodeType": "IfStatement",
                  "src": "9693:137:6",
                  "trueBody": {
                    "id": 881,
                    "nodeType": "Block",
                    "src": "9717:54:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 877,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "9746:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 878,
                              "name": "nerveBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "9751:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 874,
                              "name": "nerve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "9731:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NerveToken_$5469",
                                "typeString": "contract NerveToken"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22426,
                            "src": "9731:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9731:29:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "9731:29:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeNerveTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "9585:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9585:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "9598:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9598:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9584:30:6"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9624:0:6"
            },
            "scope": 911,
            "src": "9558:278:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "9927:88:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 898,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9945:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9945:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 900,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "9959:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9945:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9968:11:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9937:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9937:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "9937:43:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 905,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "9990:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 906,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "10000:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9990:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "9990:18:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 910,
                  "src": "9902:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9901:18:6"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9927:0:6"
            },
            "scope": 911,
            "src": "9889:126:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 912,
        "src": "754:9263:6"
      }
    ],
    "src": "33:9985:6"
  },
  "bytecode": "6080604052600060075534801561001557600080fd5b50604051611928380380611928833981810160405260a081101561003857600080fd5b5080516020820151604083015160608401516080909401519293919290919060006100616100e9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039687166001600160a01b03199182161790915560028054959096169416939093179093556004556003556008556100ed565b3390565b61182c806100fc6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806364482f79116100c35780638dbb1e3a1161007c5780638dbb1e3a1461034d57806393f1a40b14610370578063cd4eb5db146103b5578063d49e77cd146103bd578063e2bbb158146103c5578063f2fde38b146103e857610158565b806364482f79146102c0578063715018a6146102eb57806389c0a57f146102f35780638aa28550146102fb5780638d88a90e146103035780638da5cb5b1461032957610158565b8063441a3e7011610115578063441a3e701461022757806344b0cdbe1461024a57806348cd4cb11461027657806351eb05a61461027e5780635312ea8e1461029b578063630b5ba1146102b857610158565b8063081e3eda1461015d5780631526fe271461017757806317caf6f1146101c45780631aed6553146101cc5780631eaaa045146101d4578063341065b71461020a575b600080fd5b61016561040e565b60408051918252519081900360200190f35b6101946004803603602081101561018d57600080fd5b5035610414565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b610165610455565b61016561045b565b610208600480360360608110156101ea57600080fd5b508035906001600160a01b0360208201351690604001351515610461565b005b6102086004803603602081101561022057600080fd5b50356105e6565b6102086004803603604081101561023d57600080fd5b508035906020013561064d565b6101656004803603604081101561026057600080fd5b50803590602001356001600160a01b03166107a0565b61016561090a565b6102086004803603602081101561029457600080fd5b5035610910565b610208600480360360208110156102b157600080fd5b5035610b31565b610208610bcc565b610208600480360360608110156102d657600080fd5b50803590602081013590604001351515610bef565b610208610cca565b610165610d76565b610165610d7c565b6102086004803603602081101561031957600080fd5b50356001600160a01b0316610d81565b610331610dee565b604080516001600160a01b039092168252519081900360200190f35b6101656004803603604081101561036357600080fd5b5080359060200135610dfd565b61039c6004803603604081101561038657600080fd5b50803590602001356001600160a01b0316610e63565b6040805192835260208301919091528051918290030190f35b610331610e87565b610331610e96565b610208600480360360408110156103db57600080fd5b5080359060200135610ea5565b610208600480360360208110156103fe57600080fd5b50356001600160a01b0316610faa565b60055490565b6005818154811061042157fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60075481565b60035481565b6104696110ac565b6001600160a01b031661047a610dee565b6001600160a01b0316146104c3576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b80156104d1576104d1610bcc565b600060085443116104e4576008546104e6565b435b6007549091506104f690856110b0565b600755604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260058054600181018255925291517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600490920291820180546001600160a01b031916919096161790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db28301555090517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db390910155565b6105ee6110ac565b6001600160a01b03166105ff610dee565b6001600160a01b031614610648576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b600455565b60006005838154811061065c57fe5b6000918252602080832086845260068252604080852033865290925292208054600490920290920192508311156106cf576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6106d884610910565b6000610712826001015461070c64e8d4a510006107068760030154876000015461111190919063ffffffff16565b9061116a565b906111d1565b905061071e338261122e565b815461072a90856111d1565b80835560038401546107479164e8d4a51000916107069190611111565b60018301558254610762906001600160a01b031633866113bf565b604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600080600584815481106107b057fe5b600091825260208083208784526006825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d602081101561085857600080fd5b505160028501549091504311801561086f57508015155b156108d5576000610884856002015443610dfd565b905060006108b160075461070688600101546108ab6004548761111190919063ffffffff16565b90611111565b90506108d06108c9846107068464e8d4a51000611111565b85906110b0565b935050505b6108fd836001015461070c64e8d4a5100061070686886000015461111190919063ffffffff16565b9450505050505b92915050565b60085481565b60006005828154811061091f57fe5b90600052602060002090600402019050806002015443116109405750610b2e565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561098a57600080fd5b505afa15801561099e573d6000803e3d6000fd5b505050506040513d60208110156109b457600080fd5b50519050806109ca575043600290910155610b2e565b60006109da836002015443610dfd565b90506000610a0160075461070686600101546108ab6004548761111190919063ffffffff16565b6001546002549192506001600160a01b03908116916340c10f199116610a2884600a61116a565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b5050600154604080516340c10f1960e01b81523060048201526024810186905290516001600160a01b0390921693506340c10f19925060448082019260009290919082900301818387803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b50505050610b1b610b108461070664e8d4a510008561111190919063ffffffff16565b6003860154906110b0565b6003850155505043600290920191909155505b50565b600060058281548110610b4057fe5b60009182526020808320858452600682526040808520338087529352909320805460049093029093018054909450610b85926001600160a01b039190911691906113bf565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b60055460005b81811015610beb57610be381610910565b600101610bd2565b5050565b610bf76110ac565b6001600160a01b0316610c08610dee565b6001600160a01b031614610c51576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b8015610c5f57610c5f610bcc565b610c9c82610c9660058681548110610c7357fe5b9060005260206000209060040201600101546007546111d190919063ffffffff16565b906110b0565b6007819055508160058481548110610cb057fe5b906000526020600020906004020160010181905550505050565b610cd26110ac565b6001600160a01b0316610ce3610dee565b6001600160a01b031614610d2c576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60045481565b600a81565b6002546001600160a01b03163314610dcc576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60006003548211610e1e57610e17600a6108ab84866111d1565b9050610904565b6003548310610e3157610e1782846111d1565b610e17610e49600354846111d190919063ffffffff16565b610c96600a6108ab876003546111d190919063ffffffff16565b60066020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b6002546001600160a01b031681565b600060058381548110610eb457fe5b60009182526020808320868452600682526040808520338652909252922060049091029091019150610ee584610910565b805415610f28576000610f1a826001015461070c64e8d4a510006107068760030154876000015461111190919063ffffffff16565b9050610f26338261122e565b505b8154610f3f906001600160a01b0316333086611411565b8054610f4b90846110b0565b8082556003830154610f689164e8d4a51000916107069190611111565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610fb26110ac565b6001600160a01b0316610fc3610dee565b6001600160a01b03161461100c576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b6001600160a01b0381166110515760405162461bcd60e51b81526004018080602001828103825260268152602001806117406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b60008282018381101561110a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008261112057506000610904565b8282028284828161112d57fe5b041461110a5760405162461bcd60e51b815260040180806020018281038252602181526020018061178c6021913960400191505060405180910390fd5b60008082116111c0576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816111c957fe5b049392505050565b600082821115611228576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561127957600080fd5b505afa15801561128d573d6000803e3d6000fd5b505050506040513d60208110156112a357600080fd5b5051905080821115611337576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561130557600080fd5b505af1158015611319573d6000803e3d6000fd5b505050506040513d602081101561132f57600080fd5b506113ba9050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561138d57600080fd5b505af11580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b50505b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113ba908490611471565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261146b908590611471565b50505050565b60606114c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115229092919063ffffffff16565b8051909150156113ba578080602001905160208110156114e557600080fd5b50516113ba5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117cd602a913960400191505060405180910390fd5b60606115318484600085611539565b949350505050565b60608247101561157a5760405162461bcd60e51b81526004018080602001828103825260268152602001806117666026913960400191505060405180910390fd5b61158385611695565b6115d4576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106116135780518252601f1990920191602091820191016115f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611675576040519150601f19603f3d011682016040523d82523d6000602084013e61167a565b606091505b509150915061168a82828661169b565b979650505050505050565b3b151590565b606083156116aa57508161110a565b8251156116ba5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117045781810151838201526020016116ec565b50505050905090810190601f1680156117315780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e94d3a96d23bed79b6f4d384a8f621e948cdf4072c2321786eebedc9fae2b6e264736f6c634300060c0033",
  "bytecodeSha1": "1eec7a96f1fcd83266411ec76f57c82527e6705c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MasterMind",
  "coverageMap": {
    "branches": {
      "123": {},
      "124": {},
      "128": {},
      "129": {
        "SafeERC20._callOptionalReturn": {
          "87": [
            3495,
            3516,
            false
          ],
          "88": [
            3624,
            3654,
            true
          ]
        }
      },
      "143": {
        "Address._verifyCallResult": {
          "83": [
            7234,
            7241,
            false
          ],
          "84": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "81": [
            4767,
            4797,
            true
          ],
          "82": [
            4858,
            4876,
            true
          ]
        }
      },
      "145": {},
      "149": {},
      "20": {},
      "21": {
        "Ownable.transferOwnership": {
          "85": [
            1297,
            1320,
            true
          ],
          "86": [
            2099,
            2121,
            true
          ]
        }
      },
      "35": {
        "SafeMath.add": {
          "89": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "92": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "90": [
            3619,
            3625,
            false
          ],
          "91": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "93": [
            3221,
            3227,
            true
          ]
        }
      },
      "6": {
        "MasterMind.add": {
          "68": [
            3929,
            3940,
            false
          ],
          "69": [
            4031,
            4056,
            true
          ]
        },
        "MasterMind.deposit": {
          "79": [
            7749,
            7764,
            false
          ]
        },
        "MasterMind.dev": {
          "76": [
            9945,
            9966,
            true
          ]
        },
        "MasterMind.getMultiplier": {
          "77": [
            5025,
            5045,
            false
          ],
          "78": [
            5125,
            5147,
            false
          ]
        },
        "MasterMind.pendingNerve": {
          "71": [
            5780,
            5815,
            false
          ],
          "72": [
            5819,
            5832,
            false
          ]
        },
        "MasterMind.safeNerveTransfer": {
          "80": [
            9697,
            9715,
            false
          ]
        },
        "MasterMind.set": {
          "75": [
            4606,
            4617,
            false
          ]
        },
        "MasterMind.updatePool": {
          "73": [
            6744,
            6780,
            false
          ],
          "74": [
            6892,
            6905,
            false
          ]
        },
        "MasterMind.withdraw": {
          "70": [
            8524,
            8546,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "123": {},
      "124": {},
      "128": {},
      "129": {
        "SafeERC20._callOptionalReturn": {
          "60": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransfer": {
          "58": [
            786,
            872
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "59": [
            985,
            1081
          ]
        }
      },
      "143": {
        "Address._verifyCallResult": {
          "66": [
            7257,
            7274
          ],
          "67": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "61": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "62": [
            4759,
            4840
          ],
          "63": [
            4850,
            4910
          ],
          "64": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "65": [
            1117,
            1132
          ]
        }
      },
      "145": {
        "Context._msgSender": {
          "47": [
            678,
            695
          ]
        }
      },
      "149": {},
      "20": {},
      "21": {
        "Ownable.owner": {
          "34": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1781,
            1826
          ],
          "31": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "44": [
            2091,
            2164
          ],
          "45": [
            2174,
            2217
          ],
          "46": [
            2227,
            2244
          ]
        }
      },
      "35": {
        "SafeMath.add": {
          "48": [
            2794,
            2840
          ],
          "49": [
            2850,
            2858
          ]
        },
        "SafeMath.div": {
          "52": [
            4294,
            4338
          ],
          "53": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "50": [
            3627,
            3635
          ],
          "51": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "54": [
            3213,
            3262
          ],
          "55": [
            3272,
            3284
          ]
        }
      },
      "6": {
        "MasterMind.add": {
          "1": [
            3956,
            3973
          ],
          "2": [
            4094,
            4144
          ],
          "3": [
            4154,
            4378
          ]
        },
        "MasterMind.deposit": {
          "38": [
            7719,
            7735
          ],
          "39": [
            7935,
            7973
          ],
          "40": [
            7993,
            8113
          ],
          "41": [
            8123,
            8161
          ],
          "42": [
            8171,
            8237
          ],
          "43": [
            8247,
            8286
          ]
        },
        "MasterMind.dev": {
          "32": [
            9937,
            9980
          ],
          "33": [
            9990,
            10008
          ]
        },
        "MasterMind.emergencyWithdraw": {
          "21": [
            9262,
            9321
          ],
          "22": [
            9331,
            9384
          ],
          "23": [
            9394,
            9409
          ],
          "24": [
            9419,
            9438
          ]
        },
        "MasterMind.getMultiplier": {
          "35": [
            5061,
            5104
          ],
          "36": [
            5163,
            5184
          ],
          "37": [
            5215,
            5350
          ]
        },
        "MasterMind.massUpdatePools": {
          "25": [
            6536,
            6551
          ],
          "26": [
            6515,
            6520
          ]
        },
        "MasterMind.pendingNerve": {
          "12": [
            6109,
            6215
          ],
          "13": [
            6235,
            6306
          ]
        },
        "MasterMind.poolLength": {
          "0": [
            3485,
            3507
          ]
        },
        "MasterMind.safeNerveTransfer": {
          "56": [
            9731,
            9760
          ],
          "57": [
            9791,
            9819
          ]
        },
        "MasterMind.set": {
          "27": [
            4633,
            4650
          ],
          "28": [
            4670,
            4773
          ],
          "29": [
            4783,
            4822
          ]
        },
        "MasterMind.setNervePerBlock": {
          "4": [
            3597,
            3627
          ]
        },
        "MasterMind.updatePool": {
          "14": [
            6796,
            6803
          ],
          "15": [
            6921,
            6956
          ],
          "16": [
            6970,
            6977
          ],
          "17": [
            7221,
            7261
          ],
          "18": [
            7271,
            7309
          ],
          "19": [
            7319,
            7427
          ],
          "20": [
            7437,
            7472
          ]
        },
        "MasterMind.withdraw": {
          "5": [
            8516,
            8569
          ],
          "6": [
            8579,
            8595
          ],
          "7": [
            8744,
            8782
          ],
          "8": [
            8792,
            8830
          ],
          "9": [
            8840,
            8906
          ],
          "10": [
            8916,
            8971
          ],
          "11": [
            8981,
            9021
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "AccessControl",
    "Address",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "EnumerableSet",
    "IERC20",
    "NerveToken",
    "Ownable",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101585760003560e01c806364482f79116100c35780638dbb1e3a1161007c5780638dbb1e3a1461034d57806393f1a40b14610370578063cd4eb5db146103b5578063d49e77cd146103bd578063e2bbb158146103c5578063f2fde38b146103e857610158565b806364482f79146102c0578063715018a6146102eb57806389c0a57f146102f35780638aa28550146102fb5780638d88a90e146103035780638da5cb5b1461032957610158565b8063441a3e7011610115578063441a3e701461022757806344b0cdbe1461024a57806348cd4cb11461027657806351eb05a61461027e5780635312ea8e1461029b578063630b5ba1146102b857610158565b8063081e3eda1461015d5780631526fe271461017757806317caf6f1146101c45780631aed6553146101cc5780631eaaa045146101d4578063341065b71461020a575b600080fd5b61016561040e565b60408051918252519081900360200190f35b6101946004803603602081101561018d57600080fd5b5035610414565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b610165610455565b61016561045b565b610208600480360360608110156101ea57600080fd5b508035906001600160a01b0360208201351690604001351515610461565b005b6102086004803603602081101561022057600080fd5b50356105e6565b6102086004803603604081101561023d57600080fd5b508035906020013561064d565b6101656004803603604081101561026057600080fd5b50803590602001356001600160a01b03166107a0565b61016561090a565b6102086004803603602081101561029457600080fd5b5035610910565b610208600480360360208110156102b157600080fd5b5035610b31565b610208610bcc565b610208600480360360608110156102d657600080fd5b50803590602081013590604001351515610bef565b610208610cca565b610165610d76565b610165610d7c565b6102086004803603602081101561031957600080fd5b50356001600160a01b0316610d81565b610331610dee565b604080516001600160a01b039092168252519081900360200190f35b6101656004803603604081101561036357600080fd5b5080359060200135610dfd565b61039c6004803603604081101561038657600080fd5b50803590602001356001600160a01b0316610e63565b6040805192835260208301919091528051918290030190f35b610331610e87565b610331610e96565b610208600480360360408110156103db57600080fd5b5080359060200135610ea5565b610208600480360360208110156103fe57600080fd5b50356001600160a01b0316610faa565b60055490565b6005818154811061042157fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60075481565b60035481565b6104696110ac565b6001600160a01b031661047a610dee565b6001600160a01b0316146104c3576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b80156104d1576104d1610bcc565b600060085443116104e4576008546104e6565b435b6007549091506104f690856110b0565b600755604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260058054600181018255925291517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600490920291820180546001600160a01b031916919096161790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db28301555090517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db390910155565b6105ee6110ac565b6001600160a01b03166105ff610dee565b6001600160a01b031614610648576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b600455565b60006005838154811061065c57fe5b6000918252602080832086845260068252604080852033865290925292208054600490920290920192508311156106cf576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6106d884610910565b6000610712826001015461070c64e8d4a510006107068760030154876000015461111190919063ffffffff16565b9061116a565b906111d1565b905061071e338261122e565b815461072a90856111d1565b80835560038401546107479164e8d4a51000916107069190611111565b60018301558254610762906001600160a01b031633866113bf565b604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600080600584815481106107b057fe5b600091825260208083208784526006825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d602081101561085857600080fd5b505160028501549091504311801561086f57508015155b156108d5576000610884856002015443610dfd565b905060006108b160075461070688600101546108ab6004548761111190919063ffffffff16565b90611111565b90506108d06108c9846107068464e8d4a51000611111565b85906110b0565b935050505b6108fd836001015461070c64e8d4a5100061070686886000015461111190919063ffffffff16565b9450505050505b92915050565b60085481565b60006005828154811061091f57fe5b90600052602060002090600402019050806002015443116109405750610b2e565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561098a57600080fd5b505afa15801561099e573d6000803e3d6000fd5b505050506040513d60208110156109b457600080fd5b50519050806109ca575043600290910155610b2e565b60006109da836002015443610dfd565b90506000610a0160075461070686600101546108ab6004548761111190919063ffffffff16565b6001546002549192506001600160a01b03908116916340c10f199116610a2884600a61116a565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b5050600154604080516340c10f1960e01b81523060048201526024810186905290516001600160a01b0390921693506340c10f19925060448082019260009290919082900301818387803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b50505050610b1b610b108461070664e8d4a510008561111190919063ffffffff16565b6003860154906110b0565b6003850155505043600290920191909155505b50565b600060058281548110610b4057fe5b60009182526020808320858452600682526040808520338087529352909320805460049093029093018054909450610b85926001600160a01b039190911691906113bf565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b60055460005b81811015610beb57610be381610910565b600101610bd2565b5050565b610bf76110ac565b6001600160a01b0316610c08610dee565b6001600160a01b031614610c51576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b8015610c5f57610c5f610bcc565b610c9c82610c9660058681548110610c7357fe5b9060005260206000209060040201600101546007546111d190919063ffffffff16565b906110b0565b6007819055508160058481548110610cb057fe5b906000526020600020906004020160010181905550505050565b610cd26110ac565b6001600160a01b0316610ce3610dee565b6001600160a01b031614610d2c576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60045481565b600a81565b6002546001600160a01b03163314610dcc576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60006003548211610e1e57610e17600a6108ab84866111d1565b9050610904565b6003548310610e3157610e1782846111d1565b610e17610e49600354846111d190919063ffffffff16565b610c96600a6108ab876003546111d190919063ffffffff16565b60066020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b6002546001600160a01b031681565b600060058381548110610eb457fe5b60009182526020808320868452600682526040808520338652909252922060049091029091019150610ee584610910565b805415610f28576000610f1a826001015461070c64e8d4a510006107068760030154876000015461111190919063ffffffff16565b9050610f26338261122e565b505b8154610f3f906001600160a01b0316333086611411565b8054610f4b90846110b0565b8082556003830154610f689164e8d4a51000916107069190611111565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610fb26110ac565b6001600160a01b0316610fc3610dee565b6001600160a01b03161461100c576040805162461bcd60e51b815260206004820181905260248201526000805160206117ad833981519152604482015290519081900360640190fd5b6001600160a01b0381166110515760405162461bcd60e51b81526004018080602001828103825260268152602001806117406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b60008282018381101561110a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008261112057506000610904565b8282028284828161112d57fe5b041461110a5760405162461bcd60e51b815260040180806020018281038252602181526020018061178c6021913960400191505060405180910390fd5b60008082116111c0576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816111c957fe5b049392505050565b600082821115611228576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561127957600080fd5b505afa15801561128d573d6000803e3d6000fd5b505050506040513d60208110156112a357600080fd5b5051905080821115611337576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561130557600080fd5b505af1158015611319573d6000803e3d6000fd5b505050506040513d602081101561132f57600080fd5b506113ba9050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561138d57600080fd5b505af11580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b50505b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113ba908490611471565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261146b908590611471565b50505050565b60606114c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115229092919063ffffffff16565b8051909150156113ba578080602001905160208110156114e557600080fd5b50516113ba5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117cd602a913960400191505060405180910390fd5b60606115318484600085611539565b949350505050565b60608247101561157a5760405162461bcd60e51b81526004018080602001828103825260268152602001806117666026913960400191505060405180910390fd5b61158385611695565b6115d4576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106116135780518252601f1990920191602091820191016115f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611675576040519150601f19603f3d011682016040523d82523d6000602084013e61167a565b606091505b509150915061168a82828661169b565b979650505050505050565b3b151590565b606083156116aa57508161110a565b8251156116ba5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117045781810151838201526020016116ec565b50505050905090810190601f1680156117315780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e94d3a96d23bed79b6f4d384a8f621e948cdf4072c2321786eebedc9fae2b6e264736f6c634300060c0033",
  "deployedSourceMap": "754:9263:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3421:93;;;:::i;:::-;;;;;;;;;;;;;;;;2437:26;;;;;;;;;;;;;;;;-1:-1:-1;2437:26:6;;:::i;:::-;;;;-1:-1:-1;;;;;2437:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2674:34;;;:::i;2206:28::-;;;:::i;3799:586::-;;;;;;;;;;;;;;;;-1:-1:-1;3799:586:6;;;-1:-1:-1;;;;;3799:586:6;;;;;;;;;;;;:::i;:::-;;3520:114;;;;;;;;;;;;;;;;-1:-1:-1;3520:114:6;;:::i;8342:686::-;;;;;;;;;;;;;;;;-1:-1:-1;8342:686:6;;;;;;;:::i;5428:885::-;;;;;;;;;;;;;;;;-1:-1:-1;5428:885:6;;;;;;-1:-1:-1;;;;;5428:885:6;;:::i;2764:25::-;;;:::i;6641:838::-;;;;;;;;;;;;;;;;-1:-1:-1;6641:838:6;;:::i;9096:349::-;;;;;;;;;;;;;;;;-1:-1:-1;9096:349:6;;:::i;6393:175::-;;;:::i;4479:350::-;;;;;;;;;;;;;;;;-1:-1:-1;4479:350:6;;;;;;;;;;;;;;:::i;1717:145:21:-;;;:::i;2279:28:6:-;;;:::i;2360:45::-;;;:::i;9889:126::-;;;;;;;;;;;;;;;;-1:-1:-1;9889:126:6;-1:-1:-1;;;;;9889:126:6;;:::i;1085:85:21:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:21;;;;;;;;;;;;;;4902:465:6;;;;;;;;;;;;;;;;-1:-1:-1;4902:465:6;;;;;;;:::i;2517:64::-;;;;;;;;;;;;;;;;-1:-1:-1;2517:64:6;;;;;;-1:-1:-1;;;;;2517:64:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2079:23;;;:::i;2128:22::-;;;:::i;7546:747::-;;;;;;;;;;;;;;;;-1:-1:-1;7546:747:6;;;;;;;:::i;2011:240:21:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:21;-1:-1:-1;;;;;2011:240:21;;:::i;3421:93:6:-;3492:8;:15;3421:93;:::o;2437:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2437:26:6;;;;-1:-1:-1;2437:26:6;;;:::o;2674:34::-;;;;:::o;2206:28::-;;;;:::o;3799:586::-;1308:12:21;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:21;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:21;;1289:68;;;;;-1:-1:-1;;;1289:68:21;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:21;;;;;;;;;;;;;;;3929:11:6::1;3925:59;;;3956:17;:15;:17::i;:::-;3993:23;4046:10;;4031:12;:25;:53;;4074:10;;4031:53;;;4059:12;4031:53;4112:15;::::0;3993:91;;-1:-1:-1;4112:32:6::1;::::0;4132:11;4112:19:::1;:32::i;:::-;4094:15;:50:::0;4181:187:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4181:187:6;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4181:187:6;;;;;;4154:8:::1;:224:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4154:224:6::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;-1:-1:-1;4154:224:6;;;;;;;3799:586::o;3520:114::-;1308:12:21;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:21;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:21;;1289:68;;;;;-1:-1:-1;;;1289:68:21;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:21;;;;;;;;;;;;;;;3597:13:6::1;:30:::0;3520:114::o;8342:686::-;8408:21;8432:8;8441:4;8432:14;;;;;;;;;;;;;;;;8480;;;:8;:14;;;;;;8495:10;8480:26;;;;;;;8524:11;;8432:14;;;;;;;;-1:-1:-1;8524:22:6;-1:-1:-1;8524:22:6;8516:53;;;;;-1:-1:-1;;;8516:53:6;;;;;;;;;;;;-1:-1:-1;;;8516:53:6;;;;;;;;;;;;;;;8579:16;8590:4;8579:10;:16::i;:::-;8605:15;8635:99;8705:4;:15;;;8635:48;8678:4;8635:38;8651:4;:21;;;8635:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48::i;:::-;:52;;:99::i;:::-;8605:129;;8744:38;8762:10;8774:7;8744:17;:38::i;:::-;8806:11;;:24;;8822:7;8806:15;:24::i;:::-;8792:38;;;8874:21;;;;8858:48;;8901:4;;8858:38;;8792;8858:15;:38::i;:48::-;8840:15;;;:66;8916:12;;:55;;-1:-1:-1;;;;;8916:12:6;8950:10;8963:7;8916:25;:55::i;:::-;8986:35;;;;;;;;9007:4;;8995:10;;8986:35;;;;;;;;;8342:686;;;;;:::o;5428:885::-;5526:7;5549:21;5573:8;5582:4;5573:14;;;;;;;;;;;;;;;;5621;;;:8;:14;;;;;;-1:-1:-1;;;;;5621:21:6;;;;;;;;;;;5573:14;;;;;;;5679:21;;;;5729:12;;:37;;-1:-1:-1;;;5729:37:6;;5760:4;5729:37;;;;;;;;;5573:14;;-1:-1:-1;5621:21:6;;5679;;5573:14;;5729:12;;;;;:22;;:37;;;;;5573:14;;5729:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5729:37:6;5795:20;;;;5729:37;;-1:-1:-1;5780:12:6;:35;:52;;;;-1:-1:-1;5819:13:6;;;5780:52;5776:450;;;5848:18;5885:49;5899:4;:20;;;5921:12;5885:13;:49::i;:::-;5848:86;;5948:19;5986:109;6062:15;;5986:50;6020:4;:15;;;5986:29;6001:13;;5986:10;:14;;:29;;;;:::i;:::-;:33;;:50::i;:109::-;5948:147;-1:-1:-1;6128:87:6;6166:35;6192:8;6166:21;5948:147;6182:4;6166:15;:21::i;:35::-;6128:16;;:20;:87::i;:::-;6109:106;;5776:450;;;6242:64;6290:4;:15;;;6242:43;6280:4;6242:33;6258:16;6242:4;:11;;;:15;;:33;;;;:::i;:64::-;6235:71;;;;;;5428:885;;;;;:::o;2764:25::-;;;;:::o;6641:838::-;6692:21;6716:8;6725:4;6716:14;;;;;;;;;;;;;;;;;;6692:38;;6760:4;:20;;;6744:12;:36;6740:73;;6796:7;;;6740:73;6841:12;;:37;;;-1:-1:-1;;;6841:37:6;;6872:4;6841:37;;;;;;6822:16;;-1:-1:-1;;;;;6841:12:6;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6841:37:6;;-1:-1:-1;6892:13:6;6888:99;;-1:-1:-1;6944:12:6;6921:20;;;;:35;6970:7;;6888:99;6996:18;7017:49;7031:4;:20;;;7053:12;7017:13;:49::i;:::-;6996:70;;7076:19;7110:101;7182:15;;7110:50;7144:4;:15;;;7110:29;7125:13;;7110:10;:14;;:29;;;;:::i;:101::-;7221:5;;7232:7;;7076:135;;-1:-1:-1;;;;;;7221:5:6;;;;:10;;7232:7;7241:19;7076:135;7257:2;7241:15;:19::i;:::-;7221:40;;;;;;;;;;;;;-1:-1:-1;;;;;7221:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7271:5:6;;:38;;;-1:-1:-1;;;7271:38:6;;7290:4;7271:38;;;;;;;;;;;;-1:-1:-1;;;;;7271:5:6;;;;-1:-1:-1;7271:10:6;;-1:-1:-1;7271:38:6;;;;;:5;;:38;;;;;;;;:5;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7343:84;7382:35;7408:8;7382:21;7398:4;7382:11;:15;;:21;;;;:::i;:35::-;7343:21;;;;;:25;:84::i;:::-;7319:21;;;:108;-1:-1:-1;;7460:12:6;7437:20;;;;:35;;;;-1:-1:-1;6641:838:6;;:::o;9096:349::-;9154:21;9178:8;9187:4;9178:14;;;;;;;;;;;;;;;;9226;;;:8;:14;;;;;;9241:10;9226:26;;;;;;;;9309:11;;9178:14;;;;;;;9262:12;;9178:14;;-1:-1:-1;9262:59:6;;-1:-1:-1;;;;;9262:12:6;;;;;9241:10;9262:25;:59::i;:::-;9372:11;;9336:48;;;;;;;9366:4;;9354:10;;9336:48;;;;;;;;;9408:1;9394:15;;;9419;;;;:19;-1:-1:-1;;9096:349:6:o;6393:175::-;6454:8;:15;6437:14;6479:83;6507:6;6501:3;:12;6479:83;;;6536:15;6547:3;6536:10;:15::i;:::-;6515:5;;6479:83;;;;6393:175;:::o;4479:350::-;1308:12:21;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:21;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:21;;1289:68;;;;;-1:-1:-1;;;1289:68:21;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:21;;;;;;;;;;;;;;;4606:11:6::1;4602:59;;;4633:17;:15;:17::i;:::-;4688:85;4752:11;4688:46;4708:8;4717:4;4708:14;;;;;;;;;;;;;;;;;;:25;;;4688:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:85::i;:::-;4670:15;:103;;;;4811:11;4783:8;4792:4;4783:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;4479:350:::0;;;:::o;1717:145:21:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:21;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:21;;1289:68;;;;;-1:-1:-1;;;1289:68:21;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:21;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:21;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:21::1;::::0;;1717:145::o;2279:28:6:-;;;;:::o;2360:45::-;2403:2;2360:45;:::o;9889:126::-;9959:7;;-1:-1:-1;;;;;9959:7:6;9945:10;:21;9937:43;;;;;-1:-1:-1;;;9937:43:6;;;;;;;;;;;;-1:-1:-1;;;9937:43:6;;;;;;;;;;;;;;;9990:7;:18;;-1:-1:-1;;;;;;9990:18:6;-1:-1:-1;;;;;9990:18:6;;;;;;;;;;9889:126::o;1085:85:21:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:21;1085:85;:::o;4902:465:6:-;4998:7;5032:13;;5025:3;:20;5021:340;;5068:36;2403:2;5068:14;:3;5076:5;5068:7;:14::i;:36::-;5061:43;;;;5021:340;5134:13;;5125:5;:22;5121:240;;5170:14;:3;5178:5;5170:7;:14::i;5121:240::-;5238:112;5310:22;5318:13;;5310:3;:7;;:22;;;;:::i;:::-;5238:46;2403:2;5238:24;5256:5;5238:13;;:17;;:24;;;;:::i;2517:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2079:23::-;;;-1:-1:-1;;;;;2079:23:6;;:::o;2128:22::-;;;-1:-1:-1;;;;;2128:22:6;;:::o;7546:747::-;7611:21;7635:8;7644:4;7635:14;;;;;;;;;;;;;;;;7683;;;:8;:14;;;;;;7698:10;7683:26;;;;;;;7635:14;;;;;;;;-1:-1:-1;7719:16:6;7692:4;7719:10;:16::i;:::-;7749:11;;:15;7745:239;;7780:15;7814:107;7888:4;:15;;;7814:48;7857:4;7814:38;7830:4;:21;;;7814:4;:11;;;:15;;:38;;;;:::i;:107::-;7780:141;;7935:38;7953:10;7965:7;7935:17;:38::i;:::-;7745:239;;7993:12;;:120;;-1:-1:-1;;;;;7993:12:6;8044:10;8077:4;8096:7;7993:29;:120::i;:::-;8137:11;;:24;;8153:7;8137:15;:24::i;:::-;8123:38;;;8205:21;;;;8189:48;;8232:4;;8189:38;;8123;8189:15;:38::i;:48::-;8171:15;;;:66;8252:34;;;;;;;;8272:4;;8260:10;;8252:34;;;;;;;;;7546:747;;;;:::o;2011:240:21:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:21;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:21;;1289:68;;;;;-1:-1:-1;;;1289:68:21;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:21;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:21::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:21;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:21::1;-1:-1:-1::0;;;;;2227:17:21;;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:145:-;685:10;598:104;:::o;2690:175:35:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:35:o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:35;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:35:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:35;;;3136:155::o;9558:278:6:-;9653:5;;:30;;;-1:-1:-1;;;9653:30:6;;9677:4;9653:30;;;;;;9634:16;;-1:-1:-1;;;;;9653:5:6;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9653:30:6;;-1:-1:-1;9697:18:6;;;9693:137;;;9731:5;;:29;;;-1:-1:-1;;;9731:29:6;;-1:-1:-1;;;;;9731:29:6;;;;;;;;;;;;;;;:5;;;;;:14;;:29;;;;;;;;;;;;;;:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9693:137:6;;-1:-1:-1;9693:137:6;;9791:5;;:28;;;-1:-1:-1;;;9791:28:6;;-1:-1:-1;;;;;9791:28:6;;;;;;;;;;;;;;;:5;;;;;:14;;:28;;;;;;;;;;;;;;:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9693:137:6;9558:278;;;:::o;704:175:129:-;813:58;;;-1:-1:-1;;;;;813:58:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:129;-1:-1:-1;;;813:58:129;;;786:86;;806:5;;786:19;:86::i;885:203::-;1012:68;;;-1:-1:-1;;;;;1012:68:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:129;-1:-1:-1;;;1012:68:129;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:129;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:129;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:129;3616:85;;;;-1:-1:-1;;;3616:85:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:143;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:143:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:143;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:143:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:143;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    754,
    10017
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xCD4EB5DB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E8 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x89C0A57F EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x329 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x44B0CDBE EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2B8 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x341065B7 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x461 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x910 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x208 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x165 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x165 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x331 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x331 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x421 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x469 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47A PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17AD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD NUMBER GT PUSH2 0x4E4 JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E6 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x4F6 SWAP1 DUP6 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP5 ADD SSTORE MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5FF PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x648 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17AD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x65C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6D8 DUP5 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x70C PUSH5 0xE8D4A51000 PUSH2 0x706 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x116A JUMP JUMPDEST SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x71E CALLER DUP3 PUSH2 0x122E JUMP JUMPDEST DUP2 SLOAD PUSH2 0x72A SWAP1 DUP6 PUSH2 0x11D1 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x747 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x762 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7B0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0x86F JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 PUSH2 0x884 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8B1 PUSH1 0x7 SLOAD PUSH2 0x706 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x8AB PUSH1 0x4 SLOAD DUP8 PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D0 PUSH2 0x8C9 DUP5 PUSH2 0x706 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x1111 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x8FD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x70C PUSH5 0xE8D4A51000 PUSH2 0x706 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x91F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x940 JUMPI POP PUSH2 0xB2E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x9CA JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DA DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA01 PUSH1 0x7 SLOAD PUSH2 0x706 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x8AB PUSH1 0x4 SLOAD DUP8 PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 AND PUSH2 0xA28 DUP5 PUSH1 0xA PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xB1B PUSH2 0xB10 DUP5 PUSH2 0x706 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB40 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP5 POP PUSH2 0xB85 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBE3 DUP2 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBF7 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC08 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17AD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xC5F JUMPI PUSH2 0xC5F PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xC9C DUP3 PUSH2 0xC96 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC73 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x11D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCB0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCD2 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE3 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17AD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDCC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0xE1E JUMPI PUSH2 0xE17 PUSH1 0xA PUSH2 0x8AB DUP5 DUP7 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x904 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xE31 JUMPI PUSH2 0xE17 DUP3 DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0xE17 PUSH2 0xE49 PUSH1 0x3 SLOAD DUP5 PUSH2 0x11D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC96 PUSH1 0xA PUSH2 0x8AB DUP8 PUSH1 0x3 SLOAD PUSH2 0x11D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEB4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xEE5 DUP5 PUSH2 0x910 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 PUSH2 0xF1A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x70C PUSH5 0xE8D4A51000 PUSH2 0x706 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF26 CALLER DUP3 PUSH2 0x122E JUMP JUMPDEST POP JUMPDEST DUP2 SLOAD PUSH2 0xF3F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1411 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xF4B SWAP1 DUP5 PUSH2 0x10B0 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0xF68 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xFB2 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC3 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x100C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17AD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1051 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1740 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1120 JUMPI POP PUSH1 0x0 PUSH2 0x904 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x112D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x178C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x11C0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x11C9 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1337 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1319 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13BA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x13BA SWAP1 DUP5 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x146B SWAP1 DUP6 SWAP1 PUSH2 0x1471 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14C6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1522 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x13BA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CD PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1531 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1539 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x157A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1766 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1583 DUP6 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x15D4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1613 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1675 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x167A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x168A DUP3 DUP3 DUP7 PUSH2 0x169B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16AA JUMPI POP DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x16BA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1704 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16EC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1731 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220E94D3A96 0xD2 EXTCODESIZE 0xED PUSH26 0xB6F4D384A8F621E948CDF4072C2321786EEBEDC9FAE2B6E26473 PUSH16 0x6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x64482F79"
    },
    "38": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DBB1E3A"
    },
    "49": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DBB1E3A"
    },
    "60": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34D"
    },
    "64": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x93F1A40B"
    },
    "71": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x370"
    },
    "75": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCD4EB5DB"
    },
    "82": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B5"
    },
    "86": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD49E77CD"
    },
    "93": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BD"
    },
    "97": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C5"
    },
    "108": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E8"
    },
    "119": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158"
    },
    "123": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMP",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x64482F79"
    },
    "131": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C0"
    },
    "135": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "142": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EB"
    },
    "146": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x89C0A57F"
    },
    "153": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3"
    },
    "157": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8AA28550"
    },
    "164": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FB"
    },
    "168": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8D88A90E"
    },
    "175": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x303"
    },
    "179": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "186": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x329"
    },
    "190": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158"
    },
    "194": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMP",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x441A3E70"
    },
    "202": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "GT",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x441A3E70"
    },
    "213": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x227"
    },
    "217": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x44B0CDBE"
    },
    "224": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24A"
    },
    "228": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x48CD4CB1"
    },
    "235": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x276"
    },
    "239": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x51EB05A6"
    },
    "246": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "247": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27E"
    },
    "250": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "251": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5312EA8E"
    },
    "257": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "258": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29B"
    },
    "261": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x630B5BA1"
    },
    "268": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "269": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "272": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "273": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158"
    },
    "276": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMP",
      "path": "6"
    },
    "277": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x81E3EDA"
    },
    "284": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1526FE27"
    },
    "295": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x177"
    },
    "299": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x17CAF6F1"
    },
    "306": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C4"
    },
    "310": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "311": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1AED6553"
    },
    "317": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CC"
    },
    "321": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1EAAA045"
    },
    "328": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "329": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D4"
    },
    "332": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "333": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x341065B7"
    },
    "339": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "EQ",
      "path": "6"
    },
    "340": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20A"
    },
    "343": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "344": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        754,
        10017
      ],
      "op": "REVERT",
      "path": "6"
    },
    "349": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "350": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "353": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40E"
    },
    "356": {
      "fn": "MasterMind.poolLength",
      "jump": "i",
      "offset": [
        3421,
        3514
      ],
      "op": "JUMP",
      "path": "6"
    },
    "357": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "358": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "360": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "362": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "363": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "DUP3",
      "path": "6"
    },
    "364": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "365": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "366": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "367": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "DUP2",
      "path": "6"
    },
    "368": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "369": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SUB",
      "path": "6"
    },
    "370": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "372": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "ADD",
      "path": "6"
    },
    "373": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "374": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "RETURN",
      "path": "6"
    },
    "375": {
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "376": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x194"
    },
    "379": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "381": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "382": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "383": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SUB",
      "path": "6"
    },
    "384": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "386": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "387": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "LT",
      "path": "6"
    },
    "388": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "389": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "392": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "393": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "395": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "396": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "REVERT",
      "path": "6"
    },
    "397": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "offset": [
        2437,
        2463
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "400": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x414"
    },
    "403": {
      "fn": "MasterMind.poolLength",
      "jump": "i",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "404": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "405": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "407": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "408": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "415": {
      "op": "SHL"
    },
    "416": {
      "op": "SUB"
    },
    "417": {
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "418": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "419": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "AND",
      "path": "6"
    },
    "420": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP6",
      "path": "6"
    },
    "421": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "422": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "424": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP6",
      "path": "6"
    },
    "425": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "426": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "427": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "428": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "429": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "430": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "431": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "432": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "433": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "434": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "435": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "436": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "437": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "439": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "440": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "441": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "442": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "443": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "444": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "445": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "446": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SUB",
      "path": "6"
    },
    "447": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "449": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "450": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "451": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "RETURN",
      "path": "6"
    },
    "452": {
      "offset": [
        2674,
        2708
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "453": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2674,
        2708
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "456": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2674,
        2708
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x455"
    },
    "459": {
      "fn": "MasterMind.poolLength",
      "jump": "i",
      "offset": [
        2674,
        2708
      ],
      "op": "JUMP",
      "path": "6"
    },
    "460": {
      "offset": [
        2206,
        2234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "461": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2206,
        2234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "464": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2206,
        2234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45B"
    },
    "467": {
      "fn": "MasterMind.poolLength",
      "jump": "i",
      "offset": [
        2206,
        2234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "468": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "469": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "472": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "474": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "DUP1",
      "path": "6"
    },
    "475": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "476": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "SUB",
      "path": "6"
    },
    "477": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "479": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "DUP2",
      "path": "6"
    },
    "480": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "LT",
      "path": "6"
    },
    "481": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "482": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EA"
    },
    "485": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "486": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "488": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "DUP1",
      "path": "6"
    },
    "489": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "REVERT",
      "path": "6"
    },
    "490": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "491": {
      "op": "POP"
    },
    "492": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "DUP1",
      "path": "6"
    },
    "493": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "494": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "505": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "DUP3",
      "path": "6"
    },
    "506": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "ADD",
      "path": "6"
    },
    "507": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "508": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "AND",
      "path": "6"
    },
    "509": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "510": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "512": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "ADD",
      "path": "6"
    },
    "513": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "514": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "515": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "516": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x461"
    },
    "519": {
      "fn": "MasterMind.add",
      "jump": "i",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMP",
      "path": "6"
    },
    "520": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "521": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "STOP",
      "path": "6"
    },
    "522": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "523": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "526": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "528": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "DUP1",
      "path": "6"
    },
    "529": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "530": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "SUB",
      "path": "6"
    },
    "531": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "533": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "DUP2",
      "path": "6"
    },
    "534": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "LT",
      "path": "6"
    },
    "535": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "536": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x220"
    },
    "539": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "540": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "542": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "DUP1",
      "path": "6"
    },
    "543": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "REVERT",
      "path": "6"
    },
    "544": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "547": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E6"
    },
    "550": {
      "fn": "MasterMind.setNervePerBlock",
      "jump": "i",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "551": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "552": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "555": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "557": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "558": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "559": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "SUB",
      "path": "6"
    },
    "560": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "562": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "DUP2",
      "path": "6"
    },
    "563": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "LT",
      "path": "6"
    },
    "564": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "565": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23D"
    },
    "568": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "569": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "571": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "572": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "573": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "574": {
      "op": "POP"
    },
    "575": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "576": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "577": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "578": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "580": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "ADD",
      "path": "6"
    },
    "581": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "582": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64D"
    },
    "585": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "586": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "587": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "590": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "592": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "593": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "594": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "SUB",
      "path": "6"
    },
    "595": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "597": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "598": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "LT",
      "path": "6"
    },
    "599": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "600": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x260"
    },
    "603": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "604": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "606": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "607": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "REVERT",
      "path": "6"
    },
    "608": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "611": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "612": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "613": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "615": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "ADD",
      "path": "6"
    },
    "616": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "623": {
      "op": "SHL"
    },
    "624": {
      "op": "SUB"
    },
    "625": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "AND",
      "path": "6"
    },
    "626": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A0"
    },
    "629": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "630": {
      "offset": [
        2764,
        2789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "631": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        2764,
        2789
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "634": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        2764,
        2789
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90A"
    },
    "637": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        2764,
        2789
      ],
      "op": "JUMP",
      "path": "6"
    },
    "638": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "639": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "642": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "644": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "DUP1",
      "path": "6"
    },
    "645": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "646": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "SUB",
      "path": "6"
    },
    "647": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "649": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "DUP2",
      "path": "6"
    },
    "650": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "LT",
      "path": "6"
    },
    "651": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "652": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x294"
    },
    "655": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "656": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "658": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "DUP1",
      "path": "6"
    },
    "659": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "REVERT",
      "path": "6"
    },
    "660": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "663": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "666": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMP",
      "path": "6"
    },
    "667": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "668": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "671": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "673": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "DUP1",
      "path": "6"
    },
    "674": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "675": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "SUB",
      "path": "6"
    },
    "676": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "678": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "DUP2",
      "path": "6"
    },
    "679": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "LT",
      "path": "6"
    },
    "680": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "681": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B1"
    },
    "684": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "685": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "687": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "DUP1",
      "path": "6"
    },
    "688": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "REVERT",
      "path": "6"
    },
    "689": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "692": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB31"
    },
    "695": {
      "fn": "MasterMind.emergencyWithdraw",
      "jump": "i",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMP",
      "path": "6"
    },
    "696": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6393,
        6568
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6393,
        6568
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "700": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6393,
        6568
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCC"
    },
    "703": {
      "fn": "MasterMind.massUpdatePools",
      "jump": "i",
      "offset": [
        6393,
        6568
      ],
      "op": "JUMP",
      "path": "6"
    },
    "704": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "705": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "708": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "710": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "DUP1",
      "path": "6"
    },
    "711": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "712": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "SUB",
      "path": "6"
    },
    "713": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "715": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "716": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "LT",
      "path": "6"
    },
    "717": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "718": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D6"
    },
    "721": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "722": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "724": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "DUP1",
      "path": "6"
    },
    "725": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "REVERT",
      "path": "6"
    },
    "726": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "727": {
      "op": "POP"
    },
    "728": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "DUP1",
      "path": "6"
    },
    "729": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "730": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "731": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "733": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "734": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "ADD",
      "path": "6"
    },
    "735": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "736": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "737": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "739": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "ADD",
      "path": "6"
    },
    "740": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "741": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "742": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "743": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEF"
    },
    "746": {
      "fn": "MasterMind.set",
      "jump": "i",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x208"
    },
    "751": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCCA"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "21"
    },
    "755": {
      "offset": [
        2279,
        2307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "756": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2279,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2279,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD76"
    },
    "762": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2279,
        2307
      ],
      "op": "JUMP",
      "path": "6"
    },
    "763": {
      "offset": [
        2360,
        2405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2360,
        2405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2360,
        2405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7C"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2360,
        2405
      ],
      "op": "JUMP",
      "path": "6"
    },
    "771": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "772": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "775": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "777": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "DUP1",
      "path": "6"
    },
    "778": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "779": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "SUB",
      "path": "6"
    },
    "780": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "782": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "DUP2",
      "path": "6"
    },
    "783": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "LT",
      "path": "6"
    },
    "784": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "785": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x319"
    },
    "788": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "789": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "791": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "DUP1",
      "path": "6"
    },
    "792": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "REVERT",
      "path": "6"
    },
    "793": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "AND",
      "path": "6"
    },
    "805": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD81"
    },
    "808": {
      "fn": "MasterMind.dev",
      "jump": "i",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "809": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "810": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x331"
    },
    "813": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "816": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "21"
    },
    "817": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "818": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "820": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "21"
    },
    "821": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "832": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "AND",
      "path": "21"
    },
    "833": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP3",
      "path": "21"
    },
    "834": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "835": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "836": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP2",
      "path": "21"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SUB",
      "path": "21"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ADD",
      "path": "21"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "RETURN",
      "path": "21"
    },
    "845": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "846": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "849": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "851": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "852": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "853": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "SUB",
      "path": "6"
    },
    "854": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "856": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "DUP2",
      "path": "6"
    },
    "857": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "LT",
      "path": "6"
    },
    "858": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "859": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "862": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "863": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "865": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "866": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "REVERT",
      "path": "6"
    },
    "867": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "870": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "871": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "872": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "874": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "ADD",
      "path": "6"
    },
    "875": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "876": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDFD"
    },
    "879": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        4902,
        5367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "880": {
      "offset": [
        2517,
        2581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "881": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39C"
    },
    "884": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "886": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "887": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "888": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SUB",
      "path": "6"
    },
    "889": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "891": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "892": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "LT",
      "path": "6"
    },
    "893": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "894": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x386"
    },
    "897": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "898": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "900": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "901": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "REVERT",
      "path": "6"
    },
    "902": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "905": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "906": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "907": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "909": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "ADD",
      "path": "6"
    },
    "910": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "op": "SUB"
    },
    "919": {
      "offset": [
        2517,
        2581
      ],
      "op": "AND",
      "path": "6"
    },
    "920": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE63"
    },
    "923": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        2517,
        2581
      ],
      "op": "JUMP",
      "path": "6"
    },
    "924": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "925": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "927": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "928": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "929": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "930": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP4",
      "path": "6"
    },
    "931": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "932": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "934": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP4",
      "path": "6"
    },
    "935": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "ADD",
      "path": "6"
    },
    "936": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "937": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "938": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "939": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "940": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "941": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "942": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "943": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP3",
      "path": "6"
    },
    "944": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "945": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SUB",
      "path": "6"
    },
    "946": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "ADD",
      "path": "6"
    },
    "947": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "948": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "RETURN",
      "path": "6"
    },
    "949": {
      "offset": [
        2079,
        2102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "950": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2079,
        2102
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x331"
    },
    "953": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2079,
        2102
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE87"
    },
    "956": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        2079,
        2102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "957": {
      "offset": [
        2128,
        2150
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "958": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x331"
    },
    "961": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE96"
    },
    "964": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        2128,
        2150
      ],
      "op": "JUMP",
      "path": "6"
    },
    "965": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "966": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208"
    },
    "969": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "971": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "DUP1",
      "path": "6"
    },
    "972": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "973": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "SUB",
      "path": "6"
    },
    "974": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "976": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "DUP2",
      "path": "6"
    },
    "977": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "LT",
      "path": "6"
    },
    "978": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "979": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DB"
    },
    "982": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "983": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "985": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "DUP1",
      "path": "6"
    },
    "986": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "REVERT",
      "path": "6"
    },
    "987": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "DUP1",
      "path": "6"
    },
    "990": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "991": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "992": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "994": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "ADD",
      "path": "6"
    },
    "995": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "996": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA5"
    },
    "999": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x208"
    },
    "1004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1008": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "SUB",
      "path": "21"
    },
    "1009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "LT",
      "path": "21"
    },
    "1013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3FE"
    },
    "1017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "AND",
      "path": "21"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFAA"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1038": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1039": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3492,
        3500
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x5"
    },
    "1041": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3492,
        3507
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1042": {
      "fn": "MasterMind.poolLength",
      "offset": [
        3421,
        3514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1043": {
      "fn": "MasterMind.poolLength",
      "jump": "o",
      "offset": [
        3421,
        3514
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1044": {
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1045": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1047": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1048": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1049": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1050": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1051": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "LT",
      "path": "6"
    },
    "1052": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x421"
    },
    "1055": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1056": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1057": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1058": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1060": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1061": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1062": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1063": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1065": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1066": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1067": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1068": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1070": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1071": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1072": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "MUL",
      "path": "6"
    },
    "1073": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "1074": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1075": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1076": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1078": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1079": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "1080": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1081": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1083": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1084": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "1085": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1086": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1088": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1089": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1090": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "ADD",
      "path": "6"
    },
    "1091": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "op": "SUB"
    },
    "1100": {
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1101": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1102": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "AND",
      "path": "6"
    },
    "1103": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1106": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1107": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2437,
        2463
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1108": {
      "fn": "MasterMind.poolLength",
      "jump": "o",
      "offset": [
        2437,
        2463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1109": {
      "offset": [
        2674,
        2708
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1110": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2674,
        2708
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1112": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2674,
        2708
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1113": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2674,
        2708
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1114": {
      "fn": "MasterMind.poolLength",
      "jump": "o",
      "offset": [
        2674,
        2708
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1115": {
      "offset": [
        2206,
        2234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1116": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2206,
        2234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1118": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2206,
        2234
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1119": {
      "fn": "MasterMind.poolLength",
      "offset": [
        2206,
        2234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1120": {
      "fn": "MasterMind.poolLength",
      "jump": "o",
      "offset": [
        2206,
        2234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1121": {
      "fn": "MasterMind.add",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1122": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x469"
    },
    "1125": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10AC"
    },
    "1128": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1129": {
      "fn": "MasterMind.add",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "1139": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x47A"
    },
    "1142": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "1145": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1146": {
      "fn": "MasterMind.add",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "op": "SUB"
    },
    "1155": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "1156": {
      "fn": "MasterMind.add",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "21"
    },
    "1157": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4C3"
    },
    "1160": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1161": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1163": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1164": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1173": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1174": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1176": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1178": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1179": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1180": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1181": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1182": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1183": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "1185": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1186": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1187": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1190": {
      "op": "DUP1"
    },
    "1191": {
      "op": "MLOAD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "1197": {
      "op": "DUP4"
    },
    "1198": {
      "op": "CODECOPY"
    },
    "1199": {
      "op": "DUP2"
    },
    "1200": {
      "op": "MLOAD"
    },
    "1201": {
      "op": "SWAP2"
    },
    "1202": {
      "op": "MSTORE"
    },
    "1203": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x44"
    },
    "1205": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1206": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1207": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1208": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1209": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1210": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1211": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1212": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1213": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "21"
    },
    "1214": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "1216": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1217": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1218": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1219": {
      "fn": "MasterMind.add",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1220": {
      "branch": 68,
      "fn": "MasterMind.add",
      "offset": [
        3929,
        3940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1221": {
      "fn": "MasterMind.add",
      "offset": [
        3925,
        3984
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1222": {
      "fn": "MasterMind.add",
      "offset": [
        3925,
        3984
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D1"
    },
    "1225": {
      "branch": 68,
      "fn": "MasterMind.add",
      "offset": [
        3925,
        3984
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1226": {
      "fn": "MasterMind.add",
      "offset": [
        3956,
        3973
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x4D1"
    },
    "1229": {
      "fn": "MasterMind.add",
      "offset": [
        3956,
        3971
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCC"
    },
    "1232": {
      "fn": "MasterMind.add",
      "jump": "i",
      "offset": [
        3956,
        3973
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1233": {
      "fn": "MasterMind.add",
      "offset": [
        3956,
        3973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1234": {
      "fn": "MasterMind.add",
      "offset": [
        3993,
        4016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1236": {
      "fn": "MasterMind.add",
      "offset": [
        4046,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1238": {
      "fn": "MasterMind.add",
      "offset": [
        4046,
        4056
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1239": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4043
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "1240": {
      "branch": 69,
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4056
      ],
      "op": "GT",
      "path": "6"
    },
    "1241": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E4"
    },
    "1244": {
      "branch": 69,
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1245": {
      "fn": "MasterMind.add",
      "offset": [
        4074,
        4084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1247": {
      "fn": "MasterMind.add",
      "offset": [
        4074,
        4084
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1248": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E6"
    },
    "1251": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1252": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1253": {
      "fn": "MasterMind.add",
      "offset": [
        4059,
        4071
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "1254": {
      "fn": "MasterMind.add",
      "offset": [
        4031,
        4084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1255": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4127
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x7"
    },
    "1257": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4127
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1258": {
      "fn": "MasterMind.add",
      "offset": [
        3993,
        4084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1259": {
      "fn": "MasterMind.add",
      "offset": [
        3993,
        4084
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4144
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F6"
    },
    "1264": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4144
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1265": {
      "fn": "MasterMind.add",
      "offset": [
        4132,
        4143
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1266": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4131
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "1269": {
      "fn": "MasterMind.add",
      "jump": "i",
      "offset": [
        4112,
        4144
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1270": {
      "fn": "MasterMind.add",
      "offset": [
        4112,
        4144
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1271": {
      "fn": "MasterMind.add",
      "offset": [
        4094,
        4109
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1273": {
      "fn": "MasterMind.add",
      "offset": [
        4094,
        4144
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1274": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x40"
    },
    "1276": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1277": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1278": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1280": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1281": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "ADD",
      "path": "6"
    },
    "1282": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1283": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1293": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1294": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "AND",
      "path": "6"
    },
    "1295": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1296": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1297": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1299": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1300": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "ADD",
      "path": "6"
    },
    "1301": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1302": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1303": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1304": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1305": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1306": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "ADD",
      "path": "6"
    },
    "1307": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1308": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1309": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1314": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1315": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "ADD",
      "path": "6"
    },
    "1316": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1317": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1318": {
      "fn": "MasterMind.add",
      "offset": [
        4181,
        4368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1319": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4162
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1321": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1322": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1323": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1325": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1326": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1327": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1328": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1329": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1330": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1331": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1332": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1333": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1366": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1368": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1369": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1370": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MUL",
      "path": "6"
    },
    "1371": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1372": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1373": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1374": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1375": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "op": "SUB"
    },
    "1384": {
      "op": "NOT"
    },
    "1385": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "AND",
      "path": "6"
    },
    "1386": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1387": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1388": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1389": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "AND",
      "path": "6"
    },
    "1390": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "OR",
      "path": "6"
    },
    "1391": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1392": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1393": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1394": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1395": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1396": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
    },
    "1429": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1430": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1431": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1432": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1433": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
    },
    "1466": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1467": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1468": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1471": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1472": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
    },
    "1505": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1506": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1507": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1508": {
      "fn": "MasterMind.add",
      "offset": [
        4154,
        4378
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1509": {
      "fn": "MasterMind.add",
      "jump": "o",
      "offset": [
        3799,
        4385
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1510": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1511": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5EE"
    },
    "1514": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10AC"
    },
    "1517": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1518": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "1528": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5FF"
    },
    "1531": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "1534": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1535": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "1545": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "21"
    },
    "1546": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x648"
    },
    "1549": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1550": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1552": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1553": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1562": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1563": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1565": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1567": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1568": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1569": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1570": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1571": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1572": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "1574": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1575": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1576": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "MLOAD"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "1586": {
      "op": "DUP4"
    },
    "1587": {
      "op": "CODECOPY"
    },
    "1588": {
      "op": "DUP2"
    },
    "1589": {
      "op": "MLOAD"
    },
    "1590": {
      "op": "SWAP2"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x44"
    },
    "1594": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1595": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1596": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1597": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1598": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1599": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1600": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1601": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1602": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "21"
    },
    "1603": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "1605": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "1606": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1607": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1608": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1609": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3597,
        3610
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x4"
    },
    "1611": {
      "fn": "MasterMind.setNervePerBlock",
      "offset": [
        3597,
        3627
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1612": {
      "fn": "MasterMind.setNervePerBlock",
      "jump": "o",
      "offset": [
        3520,
        3634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1613": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1614": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8408,
        8429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1616": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8440
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1618": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8441,
        8445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1619": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1620": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1621": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1622": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "LT",
      "path": "6"
    },
    "1623": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x65C"
    },
    "1626": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1627": {
      "dev": "Index out of range",
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1628": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1629": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1631": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1632": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1633": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1634": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1636": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1637": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1638": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1639": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1640": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1641": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1642": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8488
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1644": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1645": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1646": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1648": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1649": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1650": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8494
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1651": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8495,
        8505
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1652": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1653": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1654": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1655": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1656": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1657": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1658": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8480,
        8506
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1659": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8524,
        8535
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "1660": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8524,
        8535
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1661": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1663": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1664": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1665": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "MUL",
      "path": "6"
    },
    "1666": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1667": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1668": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "ADD",
      "path": "6"
    },
    "1669": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8432,
        8446
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8524,
        8546
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1672": {
      "op": "GT"
    },
    "1673": {
      "branch": 70,
      "fn": "MasterMind.withdraw",
      "offset": [
        8524,
        8546
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1674": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6CF"
    },
    "1677": {
      "branch": 70,
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1678": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1680": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1681": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1690": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1691": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1693": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1695": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1696": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "ADD",
      "path": "6"
    },
    "1697": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1698": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1700": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1702": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1703": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "ADD",
      "path": "6"
    },
    "1704": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1705": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1729": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1730": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "ADD",
      "path": "6"
    },
    "1731": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1732": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1733": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1734": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1735": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1736": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1737": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "SUB",
      "path": "6"
    },
    "1738": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1740": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "ADD",
      "path": "6"
    },
    "1741": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1742": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1743": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8516,
        8569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1744": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8579,
        8595
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 6,
      "value": "0x6D8"
    },
    "1747": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8590,
        8594
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1748": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8579,
        8589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "1751": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8579,
        8595
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1752": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8579,
        8595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1753": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8605,
        8620
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1755": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8734
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x712"
    },
    "1758": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8705,
        8709
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1759": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8705,
        8720
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1761": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8705,
        8720
      ],
      "op": "ADD",
      "path": "6"
    },
    "1762": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8705,
        8720
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1763": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70C"
    },
    "1766": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8678,
        8682
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "1772": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "1775": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8651,
        8655
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1776": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8651,
        8672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1778": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8651,
        8672
      ],
      "op": "ADD",
      "path": "6"
    },
    "1779": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8651,
        8672
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1780": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8639
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1781": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1783": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8646
      ],
      "op": "ADD",
      "path": "6"
    },
    "1784": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8646
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1785": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8650
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "1788": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8650
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1789": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1790": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1791": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1796": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "AND",
      "path": "6"
    },
    "1797": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8635,
        8673
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1798": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8673
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1799": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8677
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1800": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116A"
    },
    "1803": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8635,
        8683
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1804": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1805": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8687
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1806": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8687
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "1809": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8635,
        8734
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1810": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8635,
        8734
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1811": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8605,
        8734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1812": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8605,
        8734
      ],
      "op": "POP",
      "path": "6"
    },
    "1813": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8744,
        8782
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 7,
      "value": "0x71E"
    },
    "1816": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8762,
        8772
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1817": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8774,
        8781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1818": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8744,
        8761
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122E"
    },
    "1821": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8744,
        8782
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1822": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8744,
        8782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1823": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8817
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 8
    },
    "1824": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1825": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x72A"
    },
    "1828": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1829": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8822,
        8829
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1830": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8821
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "1833": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8806,
        8830
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1834": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8806,
        8830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1835": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8792,
        8830
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1836": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8792,
        8830
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1837": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8792,
        8830
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1838": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8874,
        8895
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x3"
    },
    "1840": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8874,
        8895
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1841": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8874,
        8895
      ],
      "op": "ADD",
      "path": "6"
    },
    "1842": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8874,
        8895
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1843": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x747"
    },
    "1846": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8906
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1847": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8901,
        8905
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "1853": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8901,
        8905
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1854": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "1857": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8896
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1858": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8792,
        8830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1859": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8873
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "1862": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8858,
        8896
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1863": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8858,
        8906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1864": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8840,
        8855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1866": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8840,
        8855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1867": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8840,
        8855
      ],
      "op": "ADD",
      "path": "6"
    },
    "1868": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8840,
        8906
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1869": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8928
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 10
    },
    "1870": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8928
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1871": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8971
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "1874": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8971
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8928
      ],
      "op": "AND",
      "path": "6"
    },
    "1884": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8950,
        8960
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1885": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8963,
        8970
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1886": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13BF"
    },
    "1889": {
      "fn": "MasterMind.withdraw",
      "jump": "i",
      "offset": [
        8916,
        8971
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1890": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8916,
        8971
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1891": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x40"
    },
    "1893": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1894": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1895": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1896": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1897": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1898": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1899": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1900": {
      "fn": "MasterMind.withdraw",
      "offset": [
        9007,
        9011
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1901": {
      "fn": "MasterMind.withdraw",
      "offset": [
        9007,
        9011
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1902": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8995,
        9005
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1903": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8995,
        9005
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1904": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "1937": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1938": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1939": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1940": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "SUB",
      "path": "6"
    },
    "1941": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1943": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "ADD",
      "path": "6"
    },
    "1944": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1945": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8986,
        9021
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1946": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "POP",
      "path": "6"
    },
    "1947": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "POP",
      "path": "6"
    },
    "1948": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "POP",
      "path": "6"
    },
    "1949": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "POP",
      "path": "6"
    },
    "1950": {
      "fn": "MasterMind.withdraw",
      "offset": [
        8342,
        9028
      ],
      "op": "POP",
      "path": "6"
    },
    "1951": {
      "fn": "MasterMind.withdraw",
      "jump": "o",
      "offset": [
        8342,
        9028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1952": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1953": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5526,
        5533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1955": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5549,
        5570
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1956": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1958": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5582,
        5586
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1959": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1960": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1961": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1962": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "LT",
      "path": "6"
    },
    "1963": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B0"
    },
    "1966": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1967": {
      "dev": "Index out of range",
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1968": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1969": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1971": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1972": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1973": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1974": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1976": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1977": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1978": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1979": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1980": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1981": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1982": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5629
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1984": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1985": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1986": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1988": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1989": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1990": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5635
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "op": "SUB"
    },
    "1999": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2000": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2001": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "AND",
      "path": "6"
    },
    "2002": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2003": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2004": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2005": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2006": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2007": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2008": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2009": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2010": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2012": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2013": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2014": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "MUL",
      "path": "6"
    },
    "2015": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2016": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2017": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "ADD",
      "path": "6"
    },
    "2018": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2020": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2021": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "ADD",
      "path": "6"
    },
    "2022": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2023": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2024": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2025": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2026": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2027": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2036": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2037": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5760,
        5764
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2038": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "2039": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2040": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ADD",
      "path": "6"
    },
    "2041": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "2042": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2043": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "2044": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2045": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2046": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2047": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2048": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2051": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5621,
        5642
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2052": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2053": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5679,
        5700
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2054": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2055": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2056": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2057": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2058": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2059": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "AND",
      "path": "6"
    },
    "2060": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2061": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5751
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2066": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5751
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2067": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2069": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2070": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2071": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ADD",
      "path": "6"
    },
    "2072": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2073": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2074": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5573,
        5587
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2075": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2076": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2077": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SUB",
      "path": "6"
    },
    "2078": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ADD",
      "path": "6"
    },
    "2079": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2080": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5741
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2081": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2082": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2083": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2084": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2085": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2086": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82E"
    },
    "2089": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2090": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2092": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2093": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2094": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2095": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "POP",
      "path": "6"
    },
    "2096": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "GAS",
      "path": "6"
    },
    "2097": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2098": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2099": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2100": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2101": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x842"
    },
    "2104": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2105": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2106": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2108": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2109": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2110": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2111": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2113": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2114": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2115": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "POP",
      "path": "6"
    },
    "2116": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "POP",
      "path": "6"
    },
    "2117": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "POP",
      "path": "6"
    },
    "2118": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "POP",
      "path": "6"
    },
    "2119": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2121": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2122": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2123": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2125": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2126": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "LT",
      "path": "6"
    },
    "2127": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2128": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x858"
    },
    "2131": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2132": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2134": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2135": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2136": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2139": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5795,
        5815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2141": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5795,
        5815
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2142": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5795,
        5815
      ],
      "op": "ADD",
      "path": "6"
    },
    "2143": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5795,
        5815
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2144": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2145": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5729,
        5766
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5792
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "2148": {
      "branch": 71,
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5815
      ],
      "op": "GT",
      "path": "6"
    },
    "2149": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2150": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5832
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2151": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5832
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86F"
    },
    "2154": {
      "branch": 71,
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5832
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5819,
        5832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2157": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5819,
        5832
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2158": {
      "branch": 72,
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5819,
        5832
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2159": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5780,
        5832
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2160": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2161": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D5"
    },
    "2164": {
      "branch": 72,
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2165": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5848,
        5866
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2167": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5885,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x884"
    },
    "2170": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5899,
        5903
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2171": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5899,
        5919
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2173": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5899,
        5919
      ],
      "op": "ADD",
      "path": "6"
    },
    "2174": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5899,
        5919
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2175": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5921,
        5933
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "2176": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5885,
        5898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDFD"
    },
    "2179": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        5885,
        5934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2180": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5885,
        5934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2181": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5848,
        5934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2182": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5848,
        5934
      ],
      "op": "POP",
      "path": "6"
    },
    "2183": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5948,
        5967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2185": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B1"
    },
    "2188": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6062,
        6077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "2190": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6062,
        6077
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2191": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "2194": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6020,
        6024
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2195": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6020,
        6035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2197": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6020,
        6035
      ],
      "op": "ADD",
      "path": "6"
    },
    "2198": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6020,
        6035
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2199": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AB"
    },
    "2202": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6001,
        6014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2204": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6001,
        6014
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2205": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        5996
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2206": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2209": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2210": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2211": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2212": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2217": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "AND",
      "path": "6"
    },
    "2218": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        5986,
        6015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2219": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2220": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6019
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2221": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6019
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2224": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        5986,
        6036
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2225": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5986,
        6095
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2226": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5948,
        6095
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6128,
        6215
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 12,
      "value": "0x8D0"
    },
    "2231": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6166,
        6201
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C9"
    },
    "2234": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6192,
        6200
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2235": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6166,
        6187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "2238": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5948,
        6095
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2239": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6182,
        6186
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "2245": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6166,
        6181
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2248": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        6166,
        6187
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2249": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6166,
        6201
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2250": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6128,
        6144
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2251": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6128,
        6144
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2252": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6128,
        6148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "2255": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        6128,
        6215
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2256": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6128,
        6215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2257": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6109,
        6215
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2258": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6109,
        6215
      ],
      "op": "POP",
      "path": "6"
    },
    "2259": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "POP",
      "path": "6"
    },
    "2260": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "POP",
      "path": "6"
    },
    "2261": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5776,
        6226
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2262": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6306
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 13,
      "value": "0x8FD"
    },
    "2265": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6290,
        6294
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2266": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6290,
        6305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2268": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6290,
        6305
      ],
      "op": "ADD",
      "path": "6"
    },
    "2269": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6290,
        6305
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2270": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70C"
    },
    "2273": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6280,
        6284
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "2279": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "2282": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6258,
        6274
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2283": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6246
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2284": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2286": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6253
      ],
      "op": "ADD",
      "path": "6"
    },
    "2287": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6253
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2288": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2291": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2292": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6275
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2293": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2294": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6275
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2299": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6275
      ],
      "op": "AND",
      "path": "6"
    },
    "2300": {
      "fn": "MasterMind.pendingNerve",
      "jump": "i",
      "offset": [
        6242,
        6275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2301": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6242,
        6306
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2302": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2303": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "POP",
      "path": "6"
    },
    "2304": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "POP",
      "path": "6"
    },
    "2305": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "POP",
      "path": "6"
    },
    "2306": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "POP",
      "path": "6"
    },
    "2307": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        6235,
        6306
      ],
      "op": "POP",
      "path": "6"
    },
    "2308": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2309": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2310": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2311": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "POP",
      "path": "6"
    },
    "2312": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        5428,
        6313
      ],
      "op": "POP",
      "path": "6"
    },
    "2313": {
      "fn": "MasterMind.pendingNerve",
      "jump": "o",
      "offset": [
        5428,
        6313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2314": {
      "offset": [
        2764,
        2789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2315": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        2764,
        2789
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2317": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        2764,
        2789
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2318": {
      "fn": "MasterMind.pendingNerve",
      "offset": [
        2764,
        2789
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2319": {
      "fn": "MasterMind.pendingNerve",
      "jump": "o",
      "offset": [
        2764,
        2789
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2320": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2321": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6692,
        6713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2323": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2325": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6725,
        6729
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2326": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2327": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2328": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2329": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "LT",
      "path": "6"
    },
    "2330": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91F"
    },
    "2333": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2334": {
      "dev": "Index out of range",
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "INVALID",
      "path": "6"
    },
    "2335": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2336": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2337": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2339": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2340": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2342": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2344": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2345": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2346": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2348": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "MUL",
      "path": "6"
    },
    "2349": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6716,
        6730
      ],
      "op": "ADD",
      "path": "6"
    },
    "2350": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6692,
        6730
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2351": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6692,
        6730
      ],
      "op": "POP",
      "path": "6"
    },
    "2352": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6760,
        6764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2353": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6760,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2355": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6760,
        6780
      ],
      "op": "ADD",
      "path": "6"
    },
    "2356": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6760,
        6780
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2357": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6744,
        6756
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "2358": {
      "branch": 73,
      "fn": "MasterMind.updatePool",
      "offset": [
        6744,
        6780
      ],
      "op": "GT",
      "path": "6"
    },
    "2359": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6740,
        6813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x940"
    },
    "2362": {
      "branch": 73,
      "fn": "MasterMind.updatePool",
      "offset": [
        6740,
        6813
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2363": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6796,
        6803
      ],
      "op": "POP",
      "path": "6",
      "statement": 14
    },
    "2364": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6796,
        6803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB2E"
    },
    "2367": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6796,
        6803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2368": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6740,
        6813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2369": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6853
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2370": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6853
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2371": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2373": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2374": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2375": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2382": {
      "op": "SHL"
    },
    "2383": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2384": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2385": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6872,
        6876
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2386": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2388": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2389": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ADD",
      "path": "6"
    },
    "2390": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2391": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2392": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2393": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6822,
        6838
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2395": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6822,
        6838
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6853
      ],
      "op": "AND",
      "path": "6"
    },
    "2405": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6853
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2406": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6863
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2411": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6863
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2412": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2414": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2415": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2416": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ADD",
      "path": "6"
    },
    "2417": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2418": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2420": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2421": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2422": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2423": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2424": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2425": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SUB",
      "path": "6"
    },
    "2426": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ADD",
      "path": "6"
    },
    "2427": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2428": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6853
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2429": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2430": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2431": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2432": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2433": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2434": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98A"
    },
    "2437": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2438": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2440": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2441": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2442": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2443": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "POP",
      "path": "6"
    },
    "2444": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "GAS",
      "path": "6"
    },
    "2445": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2446": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2447": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2448": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2449": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99E"
    },
    "2452": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2453": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2454": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2456": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2457": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2458": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2459": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2461": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2462": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2463": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "POP",
      "path": "6"
    },
    "2464": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "POP",
      "path": "6"
    },
    "2465": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "POP",
      "path": "6"
    },
    "2466": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "POP",
      "path": "6"
    },
    "2467": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2469": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2470": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2471": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2473": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2474": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "LT",
      "path": "6"
    },
    "2475": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2476": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B4"
    },
    "2479": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2480": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2482": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2483": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2484": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2487": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6841,
        6878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "branch": 74,
      "fn": "MasterMind.updatePool",
      "offset": [
        6892,
        6905
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2490": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6888,
        6987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CA"
    },
    "2493": {
      "branch": 74,
      "fn": "MasterMind.updatePool",
      "offset": [
        6888,
        6987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6944,
        6956
      ],
      "op": "NUMBER",
      "path": "6",
      "statement": 15
    },
    "2496": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6921,
        6941
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2498": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6921,
        6941
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2499": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6921,
        6941
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2500": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6921,
        6941
      ],
      "op": "ADD",
      "path": "6"
    },
    "2501": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6921,
        6956
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2502": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6970,
        6977
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0xB2E"
    },
    "2505": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6970,
        6977
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2506": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6888,
        6987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2507": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6996,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2509": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7017,
        7066
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9DA"
    },
    "2512": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7031,
        7035
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2513": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2515": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7031,
        7051
      ],
      "op": "ADD",
      "path": "6"
    },
    "2516": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7031,
        7051
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2517": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7053,
        7065
      ],
      "op": "NUMBER",
      "path": "6"
    },
    "2518": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7017,
        7030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDFD"
    },
    "2521": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        7017,
        7066
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2522": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7017,
        7066
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2523": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6996,
        7066
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2524": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6996,
        7066
      ],
      "op": "POP",
      "path": "6"
    },
    "2525": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7076,
        7095
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2527": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7211
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA01"
    },
    "2530": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7182,
        7197
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "2532": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7182,
        7197
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2533": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "2536": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7144,
        7148
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2537": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7144,
        7159
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2539": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7144,
        7159
      ],
      "op": "ADD",
      "path": "6"
    },
    "2540": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7144,
        7159
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2541": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7139
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AB"
    },
    "2544": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7125,
        7138
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2546": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7125,
        7138
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2547": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7120
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2548": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2551": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2552": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7139
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2553": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7139
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2554": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7139
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2559": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7139
      ],
      "op": "AND",
      "path": "6"
    },
    "2560": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        7110,
        7139
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2561": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7110,
        7211
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2562": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x1"
    },
    "2564": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2565": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2567": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7232,
        7239
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2568": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7076,
        7211
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2569": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7076,
        7211
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "op": "SUB"
    },
    "2579": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2580": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2581": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "AND",
      "path": "6"
    },
    "2582": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7226
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2583": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7231
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40C10F19"
    },
    "2588": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7231
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2589": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7232,
        7239
      ],
      "op": "AND",
      "path": "6"
    },
    "2590": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7241,
        7260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA28"
    },
    "2593": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7076,
        7211
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2594": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7257,
        7259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2596": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7241,
        7256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116A"
    },
    "2599": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        7241,
        7260
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2600": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7241,
        7260
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2601": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2603": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2604": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2605": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2610": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "AND",
      "path": "6"
    },
    "2611": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2613": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "SHL",
      "path": "6"
    },
    "2614": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2615": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2616": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2618": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ADD",
      "path": "6"
    },
    "2619": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2620": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2627": {
      "op": "SHL"
    },
    "2628": {
      "op": "SUB"
    },
    "2629": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "AND",
      "path": "6"
    },
    "2630": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2631": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2632": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2634": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ADD",
      "path": "6"
    },
    "2635": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2636": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2637": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2638": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2640": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ADD",
      "path": "6"
    },
    "2641": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2642": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "POP",
      "path": "6"
    },
    "2643": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "POP",
      "path": "6"
    },
    "2644": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "POP",
      "path": "6"
    },
    "2645": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2647": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2649": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2650": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2651": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2652": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "SUB",
      "path": "6"
    },
    "2653": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2654": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2656": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2657": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2658": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2659": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2660": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2661": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2662": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6E"
    },
    "2665": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2666": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2668": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2669": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2670": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2671": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "POP",
      "path": "6"
    },
    "2672": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "GAS",
      "path": "6"
    },
    "2673": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "CALL",
      "path": "6"
    },
    "2674": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2675": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2676": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2677": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA82"
    },
    "2680": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2681": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2682": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2684": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2685": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2686": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2687": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2689": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2690": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7221,
        7261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x1"
    },
    "2695": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2696": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2698": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2699": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2700": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2709": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2710": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7290,
        7294
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2711": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2713": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2714": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ADD",
      "path": "6"
    },
    "2715": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2716": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2718": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2719": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ADD",
      "path": "6"
    },
    "2720": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2721": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2722": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2723": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2724": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2731": {
      "op": "SHL"
    },
    "2732": {
      "op": "SUB"
    },
    "2733": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2734": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2735": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "AND",
      "path": "6"
    },
    "2736": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7281
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40C10F19"
    },
    "2743": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7281
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "2747": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2748": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2749": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ADD",
      "path": "6"
    },
    "2750": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2751": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2753": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2754": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2755": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2756": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2757": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2758": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2759": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "SUB",
      "path": "6"
    },
    "2760": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ADD",
      "path": "6"
    },
    "2761": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2762": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2763": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7276
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2764": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2765": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2766": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2767": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2768": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2769": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD9"
    },
    "2772": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2773": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2775": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2776": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2777": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2778": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "POP",
      "path": "6"
    },
    "2779": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "GAS",
      "path": "6"
    },
    "2780": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "CALL",
      "path": "6"
    },
    "2781": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2782": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2783": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2784": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAED"
    },
    "2787": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2788": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2789": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2791": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2792": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2793": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2794": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2796": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2797": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2798": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "POP",
      "path": "6"
    },
    "2799": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "POP",
      "path": "6"
    },
    "2800": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "POP",
      "path": "6"
    },
    "2801": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7271,
        7309
      ],
      "op": "POP",
      "path": "6"
    },
    "2802": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7427
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0xB1B"
    },
    "2805": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7417
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB10"
    },
    "2808": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7408,
        7416
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2809": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "2812": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7398,
        7402
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "2818": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7393
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2819": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7397
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "2822": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7397
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2823": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7403
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2824": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2825": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7403
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2830": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7403
      ],
      "op": "AND",
      "path": "6"
    },
    "2831": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        7382,
        7403
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2832": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7382,
        7417
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2833": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2835": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7364
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2836": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7364
      ],
      "op": "ADD",
      "path": "6"
    },
    "2837": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7364
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2838": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7364
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2839": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7368
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "2842": {
      "fn": "MasterMind.updatePool",
      "jump": "i",
      "offset": [
        7343,
        7427
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2843": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7343,
        7427
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2844": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7319,
        7340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2846": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7319,
        7340
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2847": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7319,
        7340
      ],
      "op": "ADD",
      "path": "6"
    },
    "2848": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7319,
        7427
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7460,
        7472
      ],
      "op": "NUMBER",
      "path": "6",
      "statement": 20
    },
    "2852": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7457
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2854": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2855": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7457
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2856": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7457
      ],
      "op": "ADD",
      "path": "6"
    },
    "2857": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2858": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2859": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2860": {
      "fn": "MasterMind.updatePool",
      "offset": [
        7437,
        7472
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2861": {
      "op": "POP"
    },
    "2862": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2863": {
      "fn": "MasterMind.updatePool",
      "offset": [
        6641,
        7479
      ],
      "op": "POP",
      "path": "6"
    },
    "2864": {
      "fn": "MasterMind.updatePool",
      "jump": "o",
      "offset": [
        6641,
        7479
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2865": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2866": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9154,
        9175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2868": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2870": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9187,
        9191
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2871": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2872": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2873": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2874": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "LT",
      "path": "6"
    },
    "2875": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB40"
    },
    "2878": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2879": {
      "dev": "Index out of range",
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "INVALID",
      "path": "6"
    },
    "2880": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2881": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2883": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2884": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2885": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2886": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2888": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2889": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2890": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2891": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2892": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2893": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2894": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2896": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2897": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2898": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2900": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2901": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2902": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9240
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2903": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9241,
        9251
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2904": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2905": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2906": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2907": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2908": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2909": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2910": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2911": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9226,
        9252
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2912": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9309,
        9320
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 21
    },
    "2913": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9309,
        9320
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2914": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2916": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2917": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2918": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "MUL",
      "path": "6"
    },
    "2919": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2920": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2921": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "ADD",
      "path": "6"
    },
    "2922": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2923": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2924": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2925": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9178,
        9192
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9321
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB85"
    },
    "2930": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9321
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "SUB"
    },
    "2939": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2940": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2941": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2942": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "AND",
      "path": "6"
    },
    "2943": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9274
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2944": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9241,
        9251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2945": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9287
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13BF"
    },
    "2948": {
      "fn": "MasterMind.emergencyWithdraw",
      "jump": "i",
      "offset": [
        9262,
        9321
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2949": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9262,
        9321
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2950": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9372,
        9383
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 22
    },
    "2951": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9372,
        9383
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2952": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2954": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2955": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2956": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2957": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2958": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2959": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2960": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9366,
        9370
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2961": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9366,
        9370
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2962": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9354,
        9364
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2963": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9354,
        9364
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2964": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2997": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2998": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2999": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3000": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "SUB",
      "path": "6"
    },
    "3001": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3003": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "ADD",
      "path": "6"
    },
    "3004": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3005": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9336,
        9384
      ],
      "op": "LOG3",
      "path": "6"
    },
    "3006": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9408,
        9409
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x0"
    },
    "3008": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9394,
        9409
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3009": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9394,
        9409
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3010": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9394,
        9409
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3011": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9419,
        9434
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x1"
    },
    "3013": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9419,
        9434
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3014": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9419,
        9434
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3015": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9419,
        9434
      ],
      "op": "ADD",
      "path": "6"
    },
    "3016": {
      "fn": "MasterMind.emergencyWithdraw",
      "offset": [
        9419,
        9438
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "op": "POP"
    },
    "3019": {
      "fn": "MasterMind.emergencyWithdraw",
      "jump": "o",
      "offset": [
        9096,
        9445
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3020": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6393,
        6568
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3021": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6454,
        6462
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3023": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6454,
        6469
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3024": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6437,
        6451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3026": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3027": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6507,
        6513
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3028": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6501,
        6504
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3029": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6501,
        6513
      ],
      "op": "LT",
      "path": "6"
    },
    "3030": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3031": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEB"
    },
    "3034": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3035": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6536,
        6551
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xBE3"
    },
    "3038": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6547,
        6550
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3039": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6536,
        6546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "3042": {
      "fn": "MasterMind.massUpdatePools",
      "jump": "i",
      "offset": [
        6536,
        6551
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3043": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6536,
        6551
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3044": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6515,
        6520
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x1"
    },
    "3046": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6515,
        6520
      ],
      "op": "ADD",
      "path": "6"
    },
    "3047": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD2"
    },
    "3050": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3051": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3052": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6479,
        6562
      ],
      "op": "POP",
      "path": "6"
    },
    "3053": {
      "fn": "MasterMind.massUpdatePools",
      "offset": [
        6393,
        6568
      ],
      "op": "POP",
      "path": "6"
    },
    "3054": {
      "fn": "MasterMind.massUpdatePools",
      "jump": "o",
      "offset": [
        6393,
        6568
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3055": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3056": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xBF7"
    },
    "3059": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10AC"
    },
    "3062": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3063": {
      "fn": "MasterMind.set",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "SUB"
    },
    "3072": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "3073": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC08"
    },
    "3076": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "3079": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3080": {
      "fn": "MasterMind.set",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "op": "SUB"
    },
    "3089": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "3090": {
      "fn": "MasterMind.set",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "21"
    },
    "3091": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC51"
    },
    "3094": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3095": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3097": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3098": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3107": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3108": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3110": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3112": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3113": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3114": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3115": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3116": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3117": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "3119": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3120": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3121": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3124": {
      "op": "DUP1"
    },
    "3125": {
      "op": "MLOAD"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3128": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "3131": {
      "op": "DUP4"
    },
    "3132": {
      "op": "CODECOPY"
    },
    "3133": {
      "op": "DUP2"
    },
    "3134": {
      "op": "MLOAD"
    },
    "3135": {
      "op": "SWAP2"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x44"
    },
    "3139": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3140": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3141": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3142": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3143": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3144": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3145": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3146": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3147": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "21"
    },
    "3148": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "3150": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3151": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3152": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "21"
    },
    "3153": {
      "fn": "MasterMind.set",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3154": {
      "branch": 75,
      "fn": "MasterMind.set",
      "offset": [
        4606,
        4617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3155": {
      "fn": "MasterMind.set",
      "offset": [
        4602,
        4661
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3156": {
      "fn": "MasterMind.set",
      "offset": [
        4602,
        4661
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5F"
    },
    "3159": {
      "branch": 75,
      "fn": "MasterMind.set",
      "offset": [
        4602,
        4661
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3160": {
      "fn": "MasterMind.set",
      "offset": [
        4633,
        4650
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xC5F"
    },
    "3163": {
      "fn": "MasterMind.set",
      "offset": [
        4633,
        4648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCC"
    },
    "3166": {
      "fn": "MasterMind.set",
      "jump": "i",
      "offset": [
        4633,
        4650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3167": {
      "fn": "MasterMind.set",
      "offset": [
        4633,
        4650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3168": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4773
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 28,
      "value": "0xC9C"
    },
    "3171": {
      "fn": "MasterMind.set",
      "offset": [
        4752,
        4763
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3172": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC96"
    },
    "3175": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3177": {
      "fn": "MasterMind.set",
      "offset": [
        4717,
        4721
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3178": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3179": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3180": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3181": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "LT",
      "path": "6"
    },
    "3182": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC73"
    },
    "3185": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3186": {
      "dev": "Index out of range",
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "INVALID",
      "path": "6"
    },
    "3187": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3188": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3189": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3191": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3192": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3194": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3196": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3197": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3198": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3200": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "MUL",
      "path": "6"
    },
    "3201": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4722
      ],
      "op": "ADD",
      "path": "6"
    },
    "3202": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3204": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4733
      ],
      "op": "ADD",
      "path": "6"
    },
    "3205": {
      "fn": "MasterMind.set",
      "offset": [
        4708,
        4733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3206": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3208": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4703
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3209": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "3212": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3213": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3214": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3215": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3220": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "AND",
      "path": "6"
    },
    "3221": {
      "fn": "MasterMind.set",
      "jump": "i",
      "offset": [
        4688,
        4734
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3222": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4734
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3223": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3224": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "3227": {
      "fn": "MasterMind.set",
      "jump": "i",
      "offset": [
        4688,
        4773
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3228": {
      "fn": "MasterMind.set",
      "offset": [
        4688,
        4773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3229": {
      "fn": "MasterMind.set",
      "offset": [
        4670,
        4685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3231": {
      "fn": "MasterMind.set",
      "offset": [
        4670,
        4773
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3232": {
      "fn": "MasterMind.set",
      "offset": [
        4670,
        4773
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3233": {
      "fn": "MasterMind.set",
      "offset": [
        4670,
        4773
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3234": {
      "fn": "MasterMind.set",
      "offset": [
        4670,
        4773
      ],
      "op": "POP",
      "path": "6"
    },
    "3235": {
      "fn": "MasterMind.set",
      "offset": [
        4811,
        4822
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 29
    },
    "3236": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3238": {
      "fn": "MasterMind.set",
      "offset": [
        4792,
        4796
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3239": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3240": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3241": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3242": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "LT",
      "path": "6"
    },
    "3243": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB0"
    },
    "3246": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3247": {
      "dev": "Index out of range",
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "INVALID",
      "path": "6"
    },
    "3248": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3249": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3250": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3252": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3253": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3255": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3257": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3258": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3259": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3261": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "MUL",
      "path": "6"
    },
    "3262": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4797
      ],
      "op": "ADD",
      "path": "6"
    },
    "3263": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3265": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4808
      ],
      "op": "ADD",
      "path": "6"
    },
    "3266": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3267": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3268": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4822
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3269": {
      "fn": "MasterMind.set",
      "offset": [
        4783,
        4822
      ],
      "op": "POP",
      "path": "6"
    },
    "3270": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "POP",
      "path": "6"
    },
    "3271": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "POP",
      "path": "6"
    },
    "3272": {
      "fn": "MasterMind.set",
      "offset": [
        4479,
        4829
      ],
      "op": "POP",
      "path": "6"
    },
    "3273": {
      "fn": "MasterMind.set",
      "jump": "o",
      "offset": [
        4479,
        4829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3275": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCD2"
    },
    "3278": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10AC"
    },
    "3281": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3289": {
      "op": "SHL"
    },
    "3290": {
      "op": "SUB"
    },
    "3291": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "3292": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCE3"
    },
    "3295": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "3298": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3299": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "3309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "21"
    },
    "3310": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD2C"
    },
    "3313": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3314": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3316": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3317": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3334": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "3338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "MLOAD"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3347": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "3350": {
      "op": "DUP4"
    },
    "3351": {
      "op": "CODECOPY"
    },
    "3352": {
      "op": "DUP2"
    },
    "3353": {
      "op": "MLOAD"
    },
    "3354": {
      "op": "SWAP2"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x44"
    },
    "3358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "21"
    },
    "3367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "3369": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "3370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "21"
    },
    "3372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3373": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 30,
      "value": "0x0"
    },
    "3375": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3376": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "op": "SUB"
    },
    "3388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3389": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3390": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "21"
    },
    "3391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3392": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3425": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3427": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3428": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "21"
    },
    "3429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1853,
        1854
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 31,
      "value": "0x0"
    },
    "3431": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3432": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "op": "SUB"
    },
    "3441": {
      "op": "NOT"
    },
    "3442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "21"
    },
    "3443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "3445": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3446": {
      "offset": [
        2279,
        2307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2279,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3449": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2279,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3450": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2279,
        2307
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3451": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2279,
        2307
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3452": {
      "offset": [
        2360,
        2405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3453": {
      "offset": [
        2403,
        2405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3455": {
      "offset": [
        2360,
        2405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3456": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2360,
        2405
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3457": {
      "fn": "MasterMind.dev",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3458": {
      "fn": "MasterMind.dev",
      "offset": [
        9959,
        9966
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x2"
    },
    "3460": {
      "fn": "MasterMind.dev",
      "offset": [
        9959,
        9966
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "MasterMind.dev",
      "offset": [
        9959,
        9966
      ],
      "op": "AND",
      "path": "6"
    },
    "3470": {
      "fn": "MasterMind.dev",
      "offset": [
        9945,
        9955
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3471": {
      "branch": 76,
      "fn": "MasterMind.dev",
      "offset": [
        9945,
        9966
      ],
      "op": "EQ",
      "path": "6"
    },
    "3472": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDCC"
    },
    "3475": {
      "branch": 76,
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3476": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3478": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3479": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3488": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3489": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3491": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3493": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3494": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "ADD",
      "path": "6"
    },
    "3495": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3496": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3498": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "3500": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3501": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "ADD",
      "path": "6"
    },
    "3502": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3503": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "3518": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3519": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "ADD",
      "path": "6"
    },
    "3520": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3521": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3522": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3523": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3524": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3525": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3526": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "SUB",
      "path": "6"
    },
    "3527": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3529": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "ADD",
      "path": "6"
    },
    "3530": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3531": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3532": {
      "fn": "MasterMind.dev",
      "offset": [
        9937,
        9980
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3533": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        9997
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x2"
    },
    "3535": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3536": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "op": "SUB"
    },
    "3545": {
      "op": "NOT"
    },
    "3546": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "AND",
      "path": "6"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "op": "SUB"
    },
    "3555": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3556": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3557": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3558": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "AND",
      "path": "6"
    },
    "3559": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3560": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3561": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3562": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "OR",
      "path": "6"
    },
    "3563": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3564": {
      "fn": "MasterMind.dev",
      "offset": [
        9990,
        10008
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3565": {
      "fn": "MasterMind.dev",
      "jump": "o",
      "offset": [
        9889,
        10015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3566": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3567": {
      "fn": "Ownable.owner",
      "offset": [
        1131,
        1138
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3569": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 34
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "SUB"
    },
    "3578": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "21"
    },
    "3579": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3580": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3581": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4902,
        5367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3582": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3584": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5032,
        5045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3586": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5032,
        5045
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3587": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5025,
        5028
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3588": {
      "branch": 77,
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5025,
        5045
      ],
      "op": "GT",
      "path": "6"
    },
    "3589": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5021,
        5361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE1E"
    },
    "3592": {
      "branch": 77,
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5021,
        5361
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3593": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5068,
        5104
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 35,
      "value": "0xE17"
    },
    "3596": {
      "offset": [
        2403,
        2405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3598": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5068,
        5082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AB"
    },
    "3601": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5068,
        5071
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3602": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5076,
        5081
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3603": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5068,
        5075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "3606": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        5068,
        5082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3607": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5068,
        5104
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3608": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5061,
        5104
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3609": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5061,
        5104
      ],
      "op": "POP",
      "path": "6"
    },
    "3610": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5061,
        5104
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x904"
    },
    "3613": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5061,
        5104
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3614": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5021,
        5361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3615": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5134,
        5147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3617": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5134,
        5147
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3618": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5125,
        5130
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3619": {
      "branch": 78,
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5125,
        5147
      ],
      "op": "LT",
      "path": "6"
    },
    "3620": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5121,
        5361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE31"
    },
    "3623": {
      "branch": 78,
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5121,
        5361
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3624": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5170,
        5184
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 36,
      "value": "0xE17"
    },
    "3627": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5170,
        5173
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3628": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5178,
        5183
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3629": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5170,
        5177
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "3632": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        5170,
        5184
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3633": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5121,
        5361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3634": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5350
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 37,
      "value": "0xE17"
    },
    "3637": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE49"
    },
    "3640": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5318,
        5331
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3642": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5318,
        5331
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3643": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5313
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3644": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5317
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "3647": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5317
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3648": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3649": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3650": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3655": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "AND",
      "path": "6"
    },
    "3656": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        5310,
        5332
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3657": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5310,
        5332
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3658": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5284
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC96"
    },
    "3661": {
      "offset": [
        2403,
        2405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3663": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AB"
    },
    "3666": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5256,
        5261
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3667": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3669": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5251
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3670": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5255
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D1"
    },
    "3673": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5255
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3674": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5262
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3675": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3676": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5262
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3681": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        5238,
        5262
      ],
      "op": "AND",
      "path": "6"
    },
    "3682": {
      "fn": "MasterMind.getMultiplier",
      "jump": "i",
      "offset": [
        5238,
        5262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3683": {
      "offset": [
        2517,
        2581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3684": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3686": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3688": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3689": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3690": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3691": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3693": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3694": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3695": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3696": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3698": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3699": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3700": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3701": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3702": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3703": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3704": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3705": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3706": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3707": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3708": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3709": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3710": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3711": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3713": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3714": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3715": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "ADD",
      "path": "6"
    },
    "3716": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3717": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2517,
        2581
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3718": {
      "fn": "MasterMind.getMultiplier",
      "jump": "o",
      "offset": [
        2517,
        2581
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3719": {
      "offset": [
        2079,
        2102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3720": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2079,
        2102
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3722": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2079,
        2102
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3729": {
      "op": "SHL"
    },
    "3730": {
      "op": "SUB"
    },
    "3731": {
      "offset": [
        2079,
        2102
      ],
      "op": "AND",
      "path": "6"
    },
    "3732": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2079,
        2102
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3733": {
      "fn": "MasterMind.getMultiplier",
      "jump": "o",
      "offset": [
        2079,
        2102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3734": {
      "offset": [
        2128,
        2150
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3735": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3737": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2128,
        2150
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3744": {
      "op": "SHL"
    },
    "3745": {
      "op": "SUB"
    },
    "3746": {
      "offset": [
        2128,
        2150
      ],
      "op": "AND",
      "path": "6"
    },
    "3747": {
      "fn": "MasterMind.getMultiplier",
      "offset": [
        2128,
        2150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3748": {
      "fn": "MasterMind.getMultiplier",
      "jump": "o",
      "offset": [
        2128,
        2150
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3749": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3750": {
      "fn": "MasterMind.deposit",
      "offset": [
        7611,
        7632
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3752": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3754": {
      "fn": "MasterMind.deposit",
      "offset": [
        7644,
        7648
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3755": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3756": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3757": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3758": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "LT",
      "path": "6"
    },
    "3759": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB4"
    },
    "3762": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3763": {
      "dev": "Index out of range",
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "INVALID",
      "path": "6"
    },
    "3764": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3765": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3767": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3768": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3769": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3770": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3772": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3773": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3774": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3775": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3776": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3777": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3778": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3780": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3781": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3782": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3784": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3785": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3786": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7697
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3787": {
      "fn": "MasterMind.deposit",
      "offset": [
        7698,
        7708
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3788": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3789": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3790": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3791": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3792": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3793": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3794": {
      "fn": "MasterMind.deposit",
      "offset": [
        7683,
        7709
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3795": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3797": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3798": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3799": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "MUL",
      "path": "6"
    },
    "3800": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3801": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3802": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "ADD",
      "path": "6"
    },
    "3803": {
      "fn": "MasterMind.deposit",
      "offset": [
        7635,
        7649
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "fn": "MasterMind.deposit",
      "offset": [
        7719,
        7735
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0xEE5"
    },
    "3808": {
      "fn": "MasterMind.deposit",
      "offset": [
        7692,
        7696
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3809": {
      "fn": "MasterMind.deposit",
      "offset": [
        7719,
        7729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "3812": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        7719,
        7735
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3813": {
      "fn": "MasterMind.deposit",
      "offset": [
        7719,
        7735
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3814": {
      "fn": "MasterMind.deposit",
      "offset": [
        7749,
        7760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3815": {
      "fn": "MasterMind.deposit",
      "offset": [
        7749,
        7760
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3816": {
      "branch": 79,
      "fn": "MasterMind.deposit",
      "offset": [
        7749,
        7764
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3817": {
      "fn": "MasterMind.deposit",
      "offset": [
        7745,
        7984
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF28"
    },
    "3820": {
      "branch": 79,
      "fn": "MasterMind.deposit",
      "offset": [
        7745,
        7984
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3821": {
      "fn": "MasterMind.deposit",
      "offset": [
        7780,
        7795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3823": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF1A"
    },
    "3826": {
      "fn": "MasterMind.deposit",
      "offset": [
        7888,
        7892
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3827": {
      "fn": "MasterMind.deposit",
      "offset": [
        7888,
        7903
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3829": {
      "fn": "MasterMind.deposit",
      "offset": [
        7888,
        7903
      ],
      "op": "ADD",
      "path": "6"
    },
    "3830": {
      "fn": "MasterMind.deposit",
      "offset": [
        7888,
        7903
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3831": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70C"
    },
    "3834": {
      "fn": "MasterMind.deposit",
      "offset": [
        7857,
        7861
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "3840": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7852
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "3843": {
      "fn": "MasterMind.deposit",
      "offset": [
        7830,
        7834
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3844": {
      "fn": "MasterMind.deposit",
      "offset": [
        7830,
        7851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3846": {
      "fn": "MasterMind.deposit",
      "offset": [
        7830,
        7851
      ],
      "op": "ADD",
      "path": "6"
    },
    "3847": {
      "fn": "MasterMind.deposit",
      "offset": [
        7830,
        7851
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3848": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7818
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3849": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3851": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7825
      ],
      "op": "ADD",
      "path": "6"
    },
    "3852": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7825
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3853": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "3856": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3857": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7852
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3858": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7852
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3859": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7852
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3864": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7852
      ],
      "op": "AND",
      "path": "6"
    },
    "3865": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        7814,
        7852
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3866": {
      "fn": "MasterMind.deposit",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3867": {
      "fn": "MasterMind.deposit",
      "offset": [
        7780,
        7921
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3868": {
      "fn": "MasterMind.deposit",
      "offset": [
        7780,
        7921
      ],
      "op": "POP",
      "path": "6"
    },
    "3869": {
      "fn": "MasterMind.deposit",
      "offset": [
        7935,
        7973
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 39,
      "value": "0xF26"
    },
    "3872": {
      "fn": "MasterMind.deposit",
      "offset": [
        7953,
        7963
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3873": {
      "fn": "MasterMind.deposit",
      "offset": [
        7965,
        7972
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3874": {
      "fn": "MasterMind.deposit",
      "offset": [
        7935,
        7952
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122E"
    },
    "3877": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        7935,
        7973
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3878": {
      "fn": "MasterMind.deposit",
      "offset": [
        7935,
        7973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3879": {
      "fn": "MasterMind.deposit",
      "offset": [
        7745,
        7984
      ],
      "op": "POP",
      "path": "6"
    },
    "3880": {
      "fn": "MasterMind.deposit",
      "offset": [
        7745,
        7984
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3881": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8005
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 40
    },
    "3882": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8005
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3883": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8113
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF3F"
    },
    "3886": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8113
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3893": {
      "op": "SHL"
    },
    "3894": {
      "op": "SUB"
    },
    "3895": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8005
      ],
      "op": "AND",
      "path": "6"
    },
    "3896": {
      "fn": "MasterMind.deposit",
      "offset": [
        8044,
        8054
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3897": {
      "fn": "MasterMind.deposit",
      "offset": [
        8077,
        8081
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "3898": {
      "fn": "MasterMind.deposit",
      "offset": [
        8096,
        8103
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3899": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8022
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1411"
    },
    "3902": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        7993,
        8113
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3903": {
      "fn": "MasterMind.deposit",
      "offset": [
        7993,
        8113
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3904": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8148
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 41
    },
    "3905": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8148
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3906": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8161
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4B"
    },
    "3909": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8161
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3910": {
      "fn": "MasterMind.deposit",
      "offset": [
        8153,
        8160
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3911": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8152
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "3914": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        8137,
        8161
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3915": {
      "fn": "MasterMind.deposit",
      "offset": [
        8137,
        8161
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3916": {
      "fn": "MasterMind.deposit",
      "offset": [
        8123,
        8161
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3917": {
      "fn": "MasterMind.deposit",
      "offset": [
        8123,
        8161
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3918": {
      "fn": "MasterMind.deposit",
      "offset": [
        8123,
        8161
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3919": {
      "fn": "MasterMind.deposit",
      "offset": [
        8205,
        8226
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x3"
    },
    "3921": {
      "fn": "MasterMind.deposit",
      "offset": [
        8205,
        8226
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3922": {
      "fn": "MasterMind.deposit",
      "offset": [
        8205,
        8226
      ],
      "op": "ADD",
      "path": "6"
    },
    "3923": {
      "fn": "MasterMind.deposit",
      "offset": [
        8205,
        8226
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3924": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF68"
    },
    "3927": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3928": {
      "fn": "MasterMind.deposit",
      "offset": [
        8232,
        8236
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0xE8D4A51000"
    },
    "3934": {
      "fn": "MasterMind.deposit",
      "offset": [
        8232,
        8236
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3935": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x706"
    },
    "3938": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8227
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3939": {
      "fn": "MasterMind.deposit",
      "offset": [
        8123,
        8161
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3940": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1111"
    },
    "3943": {
      "fn": "MasterMind.deposit",
      "jump": "i",
      "offset": [
        8189,
        8227
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3944": {
      "fn": "MasterMind.deposit",
      "offset": [
        8189,
        8237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3945": {
      "fn": "MasterMind.deposit",
      "offset": [
        8171,
        8186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3947": {
      "fn": "MasterMind.deposit",
      "offset": [
        8171,
        8186
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3948": {
      "fn": "MasterMind.deposit",
      "offset": [
        8171,
        8186
      ],
      "op": "ADD",
      "path": "6"
    },
    "3949": {
      "fn": "MasterMind.deposit",
      "offset": [
        8171,
        8237
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3950": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x40"
    },
    "3952": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3953": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3954": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3955": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3956": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3957": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3958": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3959": {
      "fn": "MasterMind.deposit",
      "offset": [
        8272,
        8276
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3960": {
      "fn": "MasterMind.deposit",
      "offset": [
        8272,
        8276
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3961": {
      "fn": "MasterMind.deposit",
      "offset": [
        8260,
        8270
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3962": {
      "fn": "MasterMind.deposit",
      "offset": [
        8260,
        8270
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3963": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "3996": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3997": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3998": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3999": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "SUB",
      "path": "6"
    },
    "4000": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4002": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "ADD",
      "path": "6"
    },
    "4003": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4004": {
      "fn": "MasterMind.deposit",
      "offset": [
        8252,
        8286
      ],
      "op": "LOG3",
      "path": "6"
    },
    "4005": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "POP",
      "path": "6"
    },
    "4006": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "POP",
      "path": "6"
    },
    "4007": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "POP",
      "path": "6"
    },
    "4008": {
      "fn": "MasterMind.deposit",
      "offset": [
        7546,
        8293
      ],
      "op": "POP",
      "path": "6"
    },
    "4009": {
      "fn": "MasterMind.deposit",
      "jump": "o",
      "offset": [
        7546,
        8293
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4011": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFB2"
    },
    "4014": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10AC"
    },
    "4017": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4025": {
      "op": "SHL"
    },
    "4026": {
      "op": "SUB"
    },
    "4027": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "4028": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFC3"
    },
    "4031": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDEE"
    },
    "4034": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "21"
    },
    "4045": {
      "branch": 85,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "21"
    },
    "4046": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x100C"
    },
    "4049": {
      "branch": 85,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4062": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "4069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "4074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "4076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4079": {
      "op": "DUP1"
    },
    "4080": {
      "op": "MLOAD"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "4086": {
      "op": "DUP4"
    },
    "4087": {
      "op": "CODECOPY"
    },
    "4088": {
      "op": "DUP2"
    },
    "4089": {
      "op": "MLOAD"
    },
    "4090": {
      "op": "SWAP2"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x44"
    },
    "4094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "4096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "21"
    },
    "4103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "4105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "21"
    },
    "4106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "21"
    },
    "4108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4115": {
      "op": "SHL"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 44
    },
    "4118": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "21"
    },
    "4119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1051"
    },
    "4122": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4137": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "21"
    },
    "4138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "21"
    },
    "4143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "21"
    },
    "4146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x26"
    },
    "4150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "21"
    },
    "4155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1740"
    },
    "4159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x26"
    },
    "4161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "CODECOPY",
      "path": "21"
    },
    "4163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "21"
    },
    "4166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "21"
    },
    "4168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "21"
    },
    "4169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "21"
    },
    "4175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "REVERT",
      "path": "21"
    },
    "4177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 45,
      "value": "0x0"
    },
    "4180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4191": {
      "op": "SHL"
    },
    "4192": {
      "op": "SUB"
    },
    "4193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP6",
      "path": "21"
    },
    "4195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "21"
    },
    "4196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "4197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "21"
    },
    "4199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "21"
    },
    "4235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 46,
      "value": "0x0"
    },
    "4237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "op": "NOT"
    },
    "4248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "21"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "op": "SUB"
    },
    "4257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "21"
    },
    "4261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "21"
    },
    "4265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4267": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4268": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "4269": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "145",
      "statement": 47
    },
    "4270": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "4271": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "145"
    },
    "4272": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4273": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4275": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4276": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4277": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "35"
    },
    "4278": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "35",
      "statement": 48
    },
    "4279": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4280": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "35"
    },
    "4281": {
      "branch": 89,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4282": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x110A"
    },
    "4285": {
      "branch": 89,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4286": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4288": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4289": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4296": {
      "op": "SHL"
    },
    "4297": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4298": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4299": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4301": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4303": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4304": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "35"
    },
    "4305": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4306": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1B"
    },
    "4308": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4310": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4311": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "35"
    },
    "4312": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4313": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4346": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x44"
    },
    "4348": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4349": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "35"
    },
    "4350": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4351": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4352": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4353": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4354": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4355": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4356": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "35"
    },
    "4357": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x64"
    },
    "4359": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "35"
    },
    "4360": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4361": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4362": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4363": {
      "fn": "SafeMath.add",
      "offset": [
        2857,
        2858
      ],
      "op": "SWAP4",
      "path": "35",
      "statement": 49
    },
    "4364": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "POP"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4369": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4370": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4372": {
      "branch": 90,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4373": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1120"
    },
    "4376": {
      "branch": 90,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4377": {
      "op": "POP"
    },
    "4378": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 50,
      "value": "0x0"
    },
    "4380": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x904"
    },
    "4383": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4384": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4385": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4386": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4387": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "35"
    },
    "4388": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4389": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4390": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4391": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4392": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 51,
      "value": "0x112D"
    },
    "4395": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4396": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "35"
    },
    "4397": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4398": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "35"
    },
    "4399": {
      "branch": 91,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "35"
    },
    "4400": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x110A"
    },
    "4403": {
      "branch": 91,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4404": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4406": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4413": {
      "op": "SHL"
    },
    "4414": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4415": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4416": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4418": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "35"
    },
    "4419": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4420": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4421": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4423": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "35"
    },
    "4424": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4425": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4426": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "35"
    },
    "4427": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4428": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4429": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x21"
    },
    "4431": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4432": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4433": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4435": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "35"
    },
    "4436": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4437": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x178C"
    },
    "4440": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x21"
    },
    "4442": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4443": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "35"
    },
    "4444": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4446": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "35"
    },
    "4447": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4448": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "35"
    },
    "4449": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "35"
    },
    "4450": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4452": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4453": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4454": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4455": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "35"
    },
    "4456": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4457": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4458": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4459": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4461": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "35",
      "statement": 52
    },
    "4462": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4463": {
      "branch": 92,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "35"
    },
    "4464": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x11C0"
    },
    "4467": {
      "branch": 92,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4468": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4470": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4471": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4478": {
      "op": "SHL"
    },
    "4479": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4480": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4481": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4483": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4485": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4486": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "35"
    },
    "4487": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4488": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1A"
    },
    "4490": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4492": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4493": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "35"
    },
    "4494": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4495": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "4528": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x44"
    },
    "4530": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4531": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "35"
    },
    "4532": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4533": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4534": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4535": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4536": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4537": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4538": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "35"
    },
    "4539": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x64"
    },
    "4541": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "35"
    },
    "4542": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4543": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4544": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4545": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "35",
      "statement": 53
    },
    "4546": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4547": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4548": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x11C9"
    },
    "4551": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4552": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "35"
    },
    "4553": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4554": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "35"
    },
    "4555": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "4556": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "4557": {
      "op": "POP"
    },
    "4558": {
      "op": "POP"
    },
    "4559": {
      "op": "POP"
    },
    "4560": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4561": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4562": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4564": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "35",
      "statement": 54
    },
    "4565": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4566": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "35"
    },
    "4567": {
      "branch": 93,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4568": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1228"
    },
    "4571": {
      "branch": 93,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4572": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4574": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4575": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4584": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4585": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4587": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4589": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4590": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "35"
    },
    "4591": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4592": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1E"
    },
    "4594": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4596": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4597": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "35"
    },
    "4598": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4599": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "4632": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x44"
    },
    "4634": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4635": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "35"
    },
    "4636": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4637": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4638": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4639": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4640": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4641": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4642": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "35"
    },
    "4643": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x64"
    },
    "4645": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "35"
    },
    "4646": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4647": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4648": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "35",
      "statement": 55
    },
    "4651": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "35"
    },
    "4652": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4653": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4654": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9558,
        9836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4655": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4657": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4658": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4660": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4661": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4662": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4671": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4672": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9677,
        9681
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "4673": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4675": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4676": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ADD",
      "path": "6"
    },
    "4677": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4678": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4679": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4680": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4682": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9634,
        9650
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4689": {
      "op": "SHL"
    },
    "4690": {
      "op": "SUB"
    },
    "4691": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9658
      ],
      "op": "AND",
      "path": "6"
    },
    "4692": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9658
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4693": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9668
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "4698": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9668
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4699": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4701": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4702": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4703": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ADD",
      "path": "6"
    },
    "4704": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4705": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4707": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4708": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4709": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4710": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4711": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4712": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SUB",
      "path": "6"
    },
    "4713": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ADD",
      "path": "6"
    },
    "4714": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4715": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9658
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4716": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4717": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4718": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4719": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4720": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4721": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1279"
    },
    "4724": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4725": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4727": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4728": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4729": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4730": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "POP",
      "path": "6"
    },
    "4731": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "GAS",
      "path": "6"
    },
    "4732": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "4733": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4734": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4735": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4736": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128D"
    },
    "4739": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4740": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4741": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4743": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4744": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4745": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4746": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4748": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4749": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4750": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "POP",
      "path": "6"
    },
    "4751": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "POP",
      "path": "6"
    },
    "4752": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "POP",
      "path": "6"
    },
    "4753": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "POP",
      "path": "6"
    },
    "4754": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4756": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4757": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4758": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4760": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4761": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "LT",
      "path": "6"
    },
    "4762": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4763": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A3"
    },
    "4766": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4767": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4769": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4770": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4771": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4774": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9653,
        9683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4775": {
      "op": "POP"
    },
    "4776": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4777": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4778": {
      "branch": 80,
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9697,
        9715
      ],
      "op": "GT",
      "path": "6"
    },
    "4779": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4780": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1337"
    },
    "4783": {
      "branch": 80,
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4784": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 56,
      "value": "0x1"
    },
    "4786": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4787": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4789": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4790": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4791": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4798": {
      "op": "SHL"
    },
    "4799": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4800": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "op": "SUB"
    },
    "4809": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4810": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4811": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "AND",
      "path": "6"
    },
    "4812": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4814": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4815": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ADD",
      "path": "6"
    },
    "4816": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4817": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4819": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4820": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ADD",
      "path": "6"
    },
    "4821": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4822": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4823": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4824": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4825": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4826": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4827": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4828": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4829": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "AND",
      "path": "6"
    },
    "4830": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4831": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9745
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "4836": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9745
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4837": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4839": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4840": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4841": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ADD",
      "path": "6"
    },
    "4842": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4843": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4845": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4846": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4847": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4848": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4849": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4850": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "SUB",
      "path": "6"
    },
    "4851": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ADD",
      "path": "6"
    },
    "4852": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4853": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4855": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9736
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4856": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4857": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4858": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4859": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4860": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4861": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1305"
    },
    "4864": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4865": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4867": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4868": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4869": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4870": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "POP",
      "path": "6"
    },
    "4871": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "GAS",
      "path": "6"
    },
    "4872": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "CALL",
      "path": "6"
    },
    "4873": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4874": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4875": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4876": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1319"
    },
    "4879": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4880": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4881": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4883": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4884": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4885": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4886": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4888": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4889": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4890": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "POP",
      "path": "6"
    },
    "4891": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "POP",
      "path": "6"
    },
    "4892": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "POP",
      "path": "6"
    },
    "4893": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "POP",
      "path": "6"
    },
    "4894": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4896": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4897": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4898": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4900": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4901": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "LT",
      "path": "6"
    },
    "4902": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4903": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x132F"
    },
    "4906": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4907": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4909": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4910": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4911": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9731,
        9760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13BA"
    },
    "4916": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4919": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4920": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 57,
      "value": "0x1"
    },
    "4922": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4923": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4925": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4926": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4927": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4936": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "op": "SUB"
    },
    "4945": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4946": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4947": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "AND",
      "path": "6"
    },
    "4948": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4950": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4951": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ADD",
      "path": "6"
    },
    "4952": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4953": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4955": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4956": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ADD",
      "path": "6"
    },
    "4957": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4958": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4959": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4960": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4961": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4962": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4963": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4964": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4965": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "AND",
      "path": "6"
    },
    "4966": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4967": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9805
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "4972": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4973": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4975": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4976": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4977": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ADD",
      "path": "6"
    },
    "4978": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4979": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4981": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4982": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4983": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4984": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4985": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4986": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "SUB",
      "path": "6"
    },
    "4987": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ADD",
      "path": "6"
    },
    "4988": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4989": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4991": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9796
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4992": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4993": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4994": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4995": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4996": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4997": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x138D"
    },
    "5000": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5001": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5003": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5004": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5005": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5006": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "POP",
      "path": "6"
    },
    "5007": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "GAS",
      "path": "6"
    },
    "5008": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "CALL",
      "path": "6"
    },
    "5009": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5010": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5011": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5012": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A1"
    },
    "5015": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5016": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5017": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5019": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5020": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5021": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5022": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5024": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5025": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5026": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "POP",
      "path": "6"
    },
    "5027": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "POP",
      "path": "6"
    },
    "5028": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "POP",
      "path": "6"
    },
    "5029": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "POP",
      "path": "6"
    },
    "5030": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5032": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5033": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5034": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5036": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5037": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "LT",
      "path": "6"
    },
    "5038": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5039": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13B7"
    },
    "5042": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5043": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5045": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5046": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5047": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9791,
        9819
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "POP"
    },
    "5050": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9693,
        9830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5051": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9558,
        9836
      ],
      "op": "POP",
      "path": "6"
    },
    "5052": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9558,
        9836
      ],
      "op": "POP",
      "path": "6"
    },
    "5053": {
      "fn": "MasterMind.safeNerveTransfer",
      "offset": [
        9558,
        9836
      ],
      "op": "POP",
      "path": "6"
    },
    "5054": {
      "fn": "MasterMind.safeNerveTransfer",
      "jump": "o",
      "offset": [
        9558,
        9836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5055": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5056": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "129",
      "statement": 58,
      "value": "0x40"
    },
    "5058": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5059": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "op": "SUB"
    },
    "5068": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "129"
    },
    "5069": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "129"
    },
    "5070": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x24"
    },
    "5072": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5073": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "129"
    },
    "5074": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5075": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x44"
    },
    "5077": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5078": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5079": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "129"
    },
    "5080": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "129"
    },
    "5081": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5082": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5083": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5084": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5085": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5086": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "129"
    },
    "5087": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SUB",
      "path": "129"
    },
    "5088": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5089": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5090": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "129"
    },
    "5091": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5092": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5093": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x64"
    },
    "5095": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5096": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5097": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "129"
    },
    "5098": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5099": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5100": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5101": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5103": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5104": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "129"
    },
    "5105": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5106": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "op": "SUB"
    },
    "5115": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "129"
    },
    "5116": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5123": {
      "op": "SHL"
    },
    "5124": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "OR",
      "path": "129"
    },
    "5125": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5126": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5127": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x13BA"
    },
    "5130": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5131": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP5",
      "path": "129"
    },
    "5132": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5133": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        805
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x1471"
    },
    "5136": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        786,
        872
      ],
      "op": "JUMP",
      "path": "129"
    },
    "5137": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5138": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "statement": 59,
      "value": "0x40"
    },
    "5140": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5148": {
      "op": "SHL"
    },
    "5149": {
      "op": "SUB"
    },
    "5150": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5151": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "129"
    },
    "5152": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "129"
    },
    "5153": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x24"
    },
    "5155": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "129"
    },
    "5156": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5157": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5158": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "129"
    },
    "5159": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "129"
    },
    "5160": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x44"
    },
    "5162": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5163": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5164": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5165": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x64"
    },
    "5167": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5168": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5169": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5170": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "129"
    },
    "5171": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5172": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5173": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5174": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5175": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5176": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "129"
    },
    "5177": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "129"
    },
    "5178": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5179": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5180": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5181": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5182": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5183": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x84"
    },
    "5185": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5186": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5187": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5188": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5189": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5190": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5191": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5193": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5194": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "129"
    },
    "5195": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5196": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "op": "SUB"
    },
    "5205": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "129"
    },
    "5206": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "129"
    },
    "5215": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5216": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5217": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x146B"
    },
    "5220": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5221": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "129"
    },
    "5222": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5223": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1004
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x1471"
    },
    "5226": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        985,
        1081
      ],
      "op": "JUMP",
      "path": "129"
    },
    "5227": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5228": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "129"
    },
    "5229": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "129"
    },
    "5230": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "129"
    },
    "5231": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "129"
    },
    "5232": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        885,
        1088
      ],
      "op": "JUMP",
      "path": "129"
    },
    "5233": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5234": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x60"
    },
    "5236": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x14C6"
    },
    "5239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5240": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5246": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "129"
    },
    "5247": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5250": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5251": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5257": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "129"
    },
    "5258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "129",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5291": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5292": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "129"
    },
    "5294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "129"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "129"
    },
    "5304": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x1522"
    },
    "5307": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "129"
    },
    "5309": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5310": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5311": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "129",
      "value": "0xFFFFFFFF"
    },
    "5316": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "129"
    },
    "5317": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "129"
    },
    "5318": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5319": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5320": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5321": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5322": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "branch": 87,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "129"
    },
    "5325": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x13BA"
    },
    "5328": {
      "branch": 87,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "129"
    },
    "5329": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "129",
      "statement": 60
    },
    "5330": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5333": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "129"
    },
    "5334": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5335": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5336": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5338": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "129"
    },
    "5340": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "129"
    },
    "5341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x14E5"
    },
    "5344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "129"
    },
    "5345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x0"
    },
    "5347": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5348": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "129"
    },
    "5349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "129"
    },
    "5350": {
      "op": "POP"
    },
    "5351": {
      "branch": 88,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5352": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x13BA"
    },
    "5355": {
      "branch": 88,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "129"
    },
    "5356": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5358": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5367": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5368": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x4"
    },
    "5370": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "129"
    },
    "5371": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5372": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5373": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5375": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "129"
    },
    "5376": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5377": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5378": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "129"
    },
    "5379": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "129"
    },
    "5380": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5381": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x2A"
    },
    "5383": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "129"
    },
    "5384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "129"
    },
    "5385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x20"
    },
    "5387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "129"
    },
    "5388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "129",
      "value": "0x17CD"
    },
    "5392": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x2A"
    },
    "5394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "129"
    },
    "5396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5398": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "129"
    },
    "5399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5400": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "129"
    },
    "5401": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "129"
    },
    "5402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "129",
      "value": "0x40"
    },
    "5404": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "129"
    },
    "5405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "129"
    },
    "5406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "129"
    },
    "5407": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "129"
    },
    "5408": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "129"
    },
    "5409": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "129"
    },
    "5410": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5411": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x60"
    },
    "5413": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "143",
      "statement": 61,
      "value": "0x1531"
    },
    "5416": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "143"
    },
    "5417": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "143"
    },
    "5418": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5420": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "143"
    },
    "5421": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1539"
    },
    "5424": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5425": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5426": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP5",
      "path": "143"
    },
    "5427": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "143"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x60"
    },
    "5436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "143",
      "statement": 62
    },
    "5437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "143"
    },
    "5438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "143"
    },
    "5439": {
      "branch": 81,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x157A"
    },
    "5443": {
      "branch": 81,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5453": {
      "op": "SHL"
    },
    "5454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x4"
    },
    "5458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "143"
    },
    "5459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "143"
    },
    "5464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "143"
    },
    "5467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x26"
    },
    "5471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "143"
    },
    "5476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1766"
    },
    "5480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x26"
    },
    "5482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "143"
    },
    "5484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "143"
    },
    "5487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "143"
    },
    "5489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "143"
    },
    "5490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "143"
    },
    "5496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "143"
    },
    "5498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "143",
      "statement": 63,
      "value": "0x1583"
    },
    "5502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "143"
    },
    "5503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1695"
    },
    "5506": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5507": {
      "branch": 82,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x15D4"
    },
    "5511": {
      "branch": 82,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5522": {
      "op": "SHL"
    },
    "5523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x4"
    },
    "5529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "143"
    },
    "5531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x1D"
    },
    "5534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x24"
    },
    "5536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "143"
    },
    "5538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "143",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x44"
    },
    "5574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "143"
    },
    "5576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5581": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "143"
    },
    "5583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x64"
    },
    "5585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "143"
    },
    "5586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "143"
    },
    "5588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x60"
    },
    "5593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "143"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5600": {
      "op": "SHL"
    },
    "5601": {
      "op": "SUB"
    },
    "5602": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "143"
    },
    "5603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "143"
    },
    "5604": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "143"
    },
    "5605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5618": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "143"
    },
    "5625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1613"
    },
    "5628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5635": {
      "op": "NOT"
    },
    "5636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "143"
    },
    "5638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x15F4"
    },
    "5650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x1"
    },
    "5654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "143"
    },
    "5658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x100"
    },
    "5661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "143"
    },
    "5662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "143"
    },
    "5663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "143"
    },
    "5665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "143"
    },
    "5668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "143"
    },
    "5670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "143"
    },
    "5672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "143"
    },
    "5675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "143"
    },
    "5676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "143"
    },
    "5697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "143"
    },
    "5699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "143"
    },
    "5700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "143"
    },
    "5701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "143"
    },
    "5702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "143"
    },
    "5703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "143"
    },
    "5707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "143"
    },
    "5712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1675"
    },
    "5715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x1F"
    },
    "5723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "143"
    },
    "5724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x3F"
    },
    "5726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "143"
    },
    "5727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "143"
    },
    "5729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "143"
    },
    "5735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "143"
    },
    "5738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "143"
    },
    "5743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "143"
    },
    "5744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "143"
    },
    "5745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x167A"
    },
    "5748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x60"
    },
    "5752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "143"
    },
    "5760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "143",
      "statement": 64,
      "value": "0x168A"
    },
    "5763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "143"
    },
    "5766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x169B"
    },
    "5769": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "143"
    },
    "5772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "143"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "POP"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5781": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5782": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "143"
    },
    "5783": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "143",
      "statement": 65
    },
    "5784": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5785": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5786": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5787": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5788": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x60"
    },
    "5790": {
      "branch": 83,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5791": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5792": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x16AA"
    },
    "5795": {
      "branch": 83,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5796": {
      "op": "POP"
    },
    "5797": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "143",
      "statement": 66
    },
    "5798": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x110A"
    },
    "5801": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5802": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5803": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5804": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5805": {
      "branch": 84,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5806": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x16BA"
    },
    "5809": {
      "branch": 84,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5810": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5811": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5812": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5813": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "143"
    },
    "5814": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5816": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "143"
    },
    "5817": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "143"
    },
    "5818": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5819": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "143",
      "statement": 67
    },
    "5820": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5822": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5829": {
      "op": "SHL"
    },
    "5830": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5831": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5832": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x4"
    },
    "5834": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5835": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5836": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5837": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5839": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5840": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5841": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5842": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "143"
    },
    "5843": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5844": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5845": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5846": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5847": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5848": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5849": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5850": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5851": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5853": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5854": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5855": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5856": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5857": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5858": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5859": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5861": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5862": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5863": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5864": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5865": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5866": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x0"
    },
    "5868": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5869": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5870": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5871": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "143"
    },
    "5872": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5873": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1704"
    },
    "5876": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5877": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5878": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5879": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5880": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5881": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5882": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5883": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5884": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5885": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5887": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5888": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x16EC"
    },
    "5891": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "143"
    },
    "5892": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5893": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5894": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5895": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5896": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5897": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5898": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5899": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5900": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5901": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5902": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5903": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x1F"
    },
    "5905": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "143"
    },
    "5906": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5907": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "143"
    },
    "5908": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x1731"
    },
    "5911": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "143"
    },
    "5912": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5913": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "143"
    },
    "5914": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "143"
    },
    "5915": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5916": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5917": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x1"
    },
    "5919": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "143"
    },
    "5920": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5922": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "143"
    },
    "5923": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "143",
      "value": "0x100"
    },
    "5926": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "143"
    },
    "5927": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "143"
    },
    "5928": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "143"
    },
    "5929": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "143"
    },
    "5930": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "143"
    },
    "5931": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "143"
    },
    "5932": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x20"
    },
    "5934": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "143"
    },
    "5935": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5936": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5937": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "143"
    },
    "5938": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5939": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "143"
    },
    "5940": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5941": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5942": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "143"
    },
    "5943": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "143",
      "value": "0x40"
    },
    "5945": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "143"
    },
    "5946": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "143"
    },
    "5947": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "5948": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "143"
    },
    "5949": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "143"
    },
    "5950": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "143"
    }
  },
  "sha1": "7eff1d495c48b86eda23db2ac9e010c93e562dfd",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport './openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol';\nimport './openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol';\nimport './openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol';\nimport './openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\nimport './openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol';\nimport \"./NerveToken.sol\";\n\n// MasterMind is the master of Nerve. He can make Nerve and he is a fair guy.\n//\n\n// Note that it's ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once Nerve is sufficiently\n// distributed and the community can show to govern itself.\n\ncontract MasterMind is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount; // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of NRV\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accNervePerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accNervePerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n    }\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken; // Address of LP token contract.\n        uint256 allocPoint; // How many allocation points assigned to this pool. NRV to distribute per block.\n        uint256 lastRewardBlock; // Last block number that NRV distribution occurs.\n        uint256 accNervePerShare; // Accumulated NRV per share, times 1e12. See below.\n    }\n    // The NERVE TOKEN!\n    NerveToken public nerve;\n    // Dev address.\n    address public devaddr;\n    // Block number when bonus NERVE period ends.\n    uint256 public bonusEndBlock;\n    // NERVE tokens created per block.\n    uint256 public nervePerBlock;\n    // Bonus muliplier for early NERVE makers.\n    uint256 public constant BONUS_MULTIPLIER = 10;\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint = 0;\n    // The block number when nerve mining starts.\n    uint256 public startBlock;\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed pid,\n        uint256 amount\n    );\n\n    constructor(\n        NerveToken _nerve,\n        address _devaddr,\n        uint256 _nervePerBlock,\n        uint256 _startBlock,\n        uint256 _bonusEndBlock\n    ) public {\n        nerve = _nerve;\n        devaddr = _devaddr;\n        nervePerBlock = _nervePerBlock;\n        bonusEndBlock = _bonusEndBlock;\n        startBlock = _startBlock;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    function setNervePerBlock(uint256 _nervePerBlock) public onlyOwner {\n        nervePerBlock = _nervePerBlock;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(\n        uint256 _allocPoint,\n        IERC20 _lpToken,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock =\n            block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                allocPoint: _allocPoint,\n                lastRewardBlock: lastRewardBlock,\n                accNervePerShare: 0\n            })\n        );\n    }\n\n    // Update the given pool's NERVE allocation point. Can only be called by the owner.\n    function set(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(\n            _allocPoint\n        );\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        public\n        view\n        returns (uint256)\n    {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(BONUS_MULTIPLIER);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return\n                bonusEndBlock.sub(_from).mul(BONUS_MULTIPLIER).add(\n                    _to.sub(bonusEndBlock)\n                );\n        }\n    }\n\n    // View function to see pending NERVE on frontend.\n    function pendingNerve(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accNervePerShare = pool.accNervePerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier =\n                getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 nerveReward =\n                multiplier.mul(nervePerBlock).mul(pool.allocPoint).div(\n                    totalAllocPoint\n                );\n            accNervePerShare = accNervePerShare.add(\n                nerveReward.mul(1e12).div(lpSupply)\n            );\n        }\n        return user.amount.mul(accNervePerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 nerveReward =\n            multiplier.mul(nervePerBlock).mul(pool.allocPoint).div(\n                totalAllocPoint\n            );\n        nerve.mint(devaddr, nerveReward.div(10));\n        nerve.mint(address(this), nerveReward);\n        pool.accNervePerShare = pool.accNervePerShare.add(\n            nerveReward.mul(1e12).div(lpSupply)\n        );\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to MasterMind for nerve allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending =\n                user.amount.mul(pool.accNervePerShare).div(1e12).sub(\n                    user.rewardDebt\n                );\n            safeNerveTransfer(msg.sender, pending);\n        }\n        pool.lpToken.safeTransferFrom(\n            address(msg.sender),\n            address(this),\n            _amount\n        );\n        user.amount = user.amount.add(_amount);\n        user.rewardDebt = user.amount.mul(pool.accNervePerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterMind.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending =\n            user.amount.mul(pool.accNervePerShare).div(1e12).sub(\n                user.rewardDebt\n            );\n        safeNerveTransfer(msg.sender, pending);\n        user.amount = user.amount.sub(_amount);\n        user.rewardDebt = user.amount.mul(pool.accNervePerShare).div(1e12);\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // Safe nerve transfer function, just in case if rounding error causes pool to not have enough nerves.\n    function safeNerveTransfer(address _to, uint256 _amount) internal {\n        uint256 nerveBal = nerve.balanceOf(address(this));\n        if (_amount > nerveBal) {\n            nerve.transfer(_to, nerveBal);\n        } else {\n            nerve.transfer(_to, _amount);\n        }\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}\n",
  "sourceMap": "754:9263:6:-:0;;;2707:1;2674:34;;3071:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3071:344:6;;;;;;;;;;;;;;;;;;;;;;;;;;884:17:21;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:21;-1:-1:-1;;;;;926:18:21;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:21;959:43;;926:6;;959:43;-1:-1:-1;3252:5:6;:14;;-1:-1:-1;;;;;3252:14:6;;;-1:-1:-1;;;;;;3252:14:6;;;;;;;3276:7;:18;;;;;;;;;;;;;;;3304:13;:30;3344:13;:30;3384:10;:24;754:9263;;598:104:145;685:10;598:104;:::o;754:9263:6:-;;;;;;;",
  "sourcePath": "contracts/MasterMind.sol",
  "type": "contract"
}